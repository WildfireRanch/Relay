{"docstore/ref_doc_info": {"797aba13-2e11-4cf4-960d-0db391fd0a49": {"node_ids": ["27e69706-33fd-45b3-a795-6ebf3def3b79"], "metadata": {"tier": "global", "file_path": "./docs/generated/global_context.md"}}, "ea30b3c5-2f89-430a-b9bf-0fea0549f09c": {"node_ids": ["23b63679-6896-4cbf-b232-58b707c82279"], "metadata": {"file_path": "/workspaces/Relay/docs/imported/relay_code_update_250603.md", "file_name": "relay_code_update_250603.md", "file_type": "text/markdown", "file_size": 1982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}}, "f61fe174-8f3c-4004-ad1b-fd9aa755a3c5": {"node_ids": ["ea63b984-7e07-46c6-9486-273ca9ac02f2"], "metadata": {"file_path": "/workspaces/Relay/docs/imported/relay_code_update_250605.md", "file_name": "relay_code_update_250605.md", "file_type": "text/markdown", "file_size": 2876, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}}, "d3bd1837-0208-40e5-aef6-7bcbda8709e3": {"node_ids": ["30e788b1-3c31-4164-9d31-7906d7eb725d"], "metadata": {"file_path": "/workspaces/Relay/docs/imported/relay_code_update_250606.md", "file_name": "relay_code_update_250606.md", "file_type": "text/markdown", "file_size": 3248, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}}, "39801f15-a124-4277-b181-306126e68bc6": {"node_ids": ["d26dc042-f346-4cc9-a1af-a83293d49354", "ac1b0710-abe9-47f0-98bb-1c2c23769113"], "metadata": {"file_path": "/workspaces/Relay/docs/imported/repository_overview_250606.md", "file_name": "repository_overview_250606.md", "file_type": "text/markdown", "file_size": 7775, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}}, "87f72c01-b0b4-434f-8f06-8e716260f95d": {"node_ids": ["ec4ad0d8-a8b5-4c8f-b4c4-f3e4568c1d9c"], "metadata": {"file_path": "/workspaces/Relay/docs/imported/test_placeholder.md", "file_name": "test_placeholder.md", "file_type": "text/markdown", "file_size": 0, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}}, "d3f6f51a-1c2d-4c7a-876e-c5c366357144": {"node_ids": ["1814edb3-2d74-4861-b00c-45372ad3ce5b", "d0f907f7-732e-4a5d-aa89-146d6ec496cf", "754f7be5-8ac2-49ab-a1d6-3b4b9f1b47d0"], "metadata": {"file_path": "/workspaces/Relay/docs/imported/v1_documentation_250606.md", "file_name": "v1_documentation_250606.md", "file_type": "text/markdown", "file_size": 9879, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}}, "6acab033-7a1e-4eac-ba7e-c73f12632c5f": {"node_ids": ["7d6a9e9b-eee4-40aa-b112-a9e147476bf0"], "metadata": {"file_path": "/workspaces/Relay/docs/imported/\ud83d\udd27_google_docs_sync_integration.md", "file_name": "\ud83d\udd27_google_docs_sync_integration.md", "file_type": "text/markdown", "file_size": 3065, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}}, "57b8f181-f93f-44f9-b0df-1bd2d7788afb": {"node_ids": ["5da10481-f69f-40a7-b68a-658e2d020bd1"], "metadata": {"tier": "project_docs", "file_path": "./docs/readme.md"}}, "ac82c713-3dd8-4802-924d-15bfcb71c470": {"node_ids": ["0c597628-72ed-4e1c-94b6-671d769aba73"], "metadata": {"file_path": "/workspaces/Relay/services/_init_.py", "file_name": "_init_.py", "file_type": "text/x-python", "file_size": 98, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "056a328c-054a-4fbd-b747-e80a6b1bcce2": {"node_ids": ["40ce5bd2-34b6-4d86-9408-1d7c9206cb2d", "c4f6b8ed-3fa8-455f-b120-687e579c659c", "2cd8367f-7113-49a2-bb19-82d878011b50", "c4b60711-b84d-491e-9895-f80443389aad", "8f1edbd7-009e-455c-a292-ae8eafc1358a", "9cb09e0f-b234-4fe1-b497-cc756cf2d1c2", "6fc3aca4-ce21-4a53-bcfc-03fb3b118543", "114db0cf-3701-47cd-abce-2ae7e4da58dd", "13219f08-7012-4292-94e4-520bed5de3ad", "2ebea36a-b12b-41b6-b050-8490c0f74edc", "6d424d43-5f0a-46b7-82ea-076a1aeb9dc0", "419f300b-3a50-4f55-9161-1880a0b0a7fd", "d5f1f8c9-2667-49ba-a0da-964a02416fe2", "2b9f826b-400f-4ebe-9e90-97684736fc51", "be79bb02-46c2-4363-8093-3a7685cbb293", "3b3795e1-9d3f-49ea-a702-64f0e117ab23"], "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}}, "ed1858db-97a3-4ac2-92a9-f2fd3ea22f79": {"node_ids": ["c2ed2874-083e-4fa3-963e-f940dbd81839"], "metadata": {"file_path": "/workspaces/Relay/services/config.py", "file_name": "config.py", "file_type": "text/x-python", "file_size": 541, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "ae0b5d05-bcc4-4393-af58-3af2cf5bfc0a": {"node_ids": ["6df38524-cf9f-45c4-8a89-1760007bdbfe"], "metadata": {"file_path": "/workspaces/Relay/services/context_engine.py", "file_name": "context_engine.py", "file_type": "text/x-python", "file_size": 864, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}}, "6fe458c5-7aad-411d-9466-39aafb0d4bb5": {"node_ids": ["147c2998-1fd5-41cb-adbf-cfcd5eb64337", "aef21626-8a1f-4f03-86f8-e61a6ae1edb4", "5ac3d53d-f1f7-4a17-a4df-3e8f8cc66326", "e5d9ac41-81c1-4afe-aa0c-aca6ebd73943", "4f378656-99c3-4e3c-b1aa-d810d261764a", "7e117f99-829d-4515-9302-c7e0d93544c7", "956e0b3e-41bc-4446-b458-60157250eda2", "8557e129-d78c-40b2-9085-685b7bba6f36", "ba26ae73-3fef-4874-a708-8043e6d42b97"], "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}}, "3788a83f-8d6b-4231-ab7d-e18b12747e7e": {"node_ids": ["cfbfb3ac-109c-4cd6-824b-f5ff36ad8d9f", "c2995ace-d1d8-48ea-adb5-4eb3b660b4b4", "d05dc8e2-8bc9-4211-b6f1-ed35f470b613"], "metadata": {"file_path": "/workspaces/Relay/services/delete_embeddings.py", "file_name": "delete_embeddings.py", "file_type": "text/x-python", "file_size": 2361, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "b12a0c1d-1251-4686-8db4-b544b86ebaec": {"node_ids": ["6f52782e-68ae-48b9-848e-bdb1199136a5", "25081a75-f83f-4503-853a-b1e53422fbe8", "1cc4d3f5-552a-4479-81da-1c58b3829c44", "dedb5320-1a68-41d3-9265-9a63dd46a81f", "3792444c-c224-4373-86f7-e2a9b996ed6c", "53506a4f-b094-458b-a79f-d88711047b1f"], "metadata": {"file_path": "/workspaces/Relay/services/docs_utils.py", "file_name": "docs_utils.py", "file_type": "text/x-python", "file_size": 4321, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "4af69885-5b52-45f5-ba22-ba944a4acbc1": {"node_ids": ["9f942eeb-f102-48b5-83da-26421385b4dc", "cd64f3a7-767d-4c46-8280-7b0d42ce72d0"], "metadata": {"file_path": "/workspaces/Relay/services/env_checker.py", "file_name": "env_checker.py", "file_type": "text/x-python", "file_size": 1231, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "2707e462-9c9a-4f24-b5d4-671d469282e2": {"node_ids": ["939ecfc0-1f7e-4547-b0a2-ed3bb8c9a581", "58406ed8-6d23-4632-ada7-5de2858f137d", "5d82d2c7-2952-4cc4-b587-9e53ca9100cb", "721e1c33-d865-4b67-9b1a-74dcc7b00aac"], "metadata": {"file_path": "/workspaces/Relay/services/gmail.py", "file_name": "gmail.py", "file_type": "text/x-python", "file_size": 2867, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "fa8923d1-1b06-4cc6-903b-99fcdf67ff7f": {"node_ids": ["1c292396-7429-4561-b3b4-dfb1e30f82dd", "9654c838-586b-4d17-9258-b5af6bfccfcd"], "metadata": {"file_path": "/workspaces/Relay/services/google.py", "file_name": "google.py", "file_type": "text/x-python", "file_size": 1139, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}}, "cb2eef9a-1534-4265-8ebd-78a05713ec1f": {"node_ids": ["8af9d9ad-2861-40f1-9b5d-741847d1fe88", "e8243208-03f2-4447-acb8-c8e8b61d0703", "887f37c5-2278-4a5e-ad07-7b765bfbf176", "5a3e4c9c-0a5e-431f-ba2d-61593395da37", "8b35180d-c81a-4762-8e7a-f8c758246070", "102fa38a-5ad9-4d44-96af-35595b12b576", "d038650c-7307-4812-92f8-596047000bd9", "b40ce4a0-6129-48cc-a5ee-4e9557e4cf7c", "14dfb7e8-5f2e-46c9-ba8c-e032cbcfcda3"], "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "2b1436a0-8117-433a-89ab-01ac92bfa271": {"node_ids": ["303f164d-fd4e-4912-b405-1a5d2495e0a9", "ed222757-026e-4a8d-8a95-1b39a63512a3", "2b1c1eb4-5a53-4ec4-9a87-a04682baff9b", "8b9a0fed-97f7-46e3-b138-51c859d09d4c", "6b2e0036-b56e-4b6d-b319-dd01d42ab9c7", "4cc47649-9b37-4ab3-9477-30bb9ce42dba", "be4b3bd9-8c14-4676-a622-0dd28b578b0c", "e795706d-3b62-415a-9a5d-6a10ebeaf983", "f9491840-f0e7-4f37-a374-516f9c7657f1", "05bc815b-f798-4363-ba7d-a0040ea64f72", "0f2af6b1-711c-4f38-bee6-1f6fcc4fa583", "755799a0-a80d-48ed-b961-103bbed23481"], "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}}, "a666f235-dca5-434f-a0ed-5218b0fba946": {"node_ids": ["59a6496b-fb3d-4918-95e6-d573b974705f", "f8a7c431-5fe3-4137-9389-0485bba938f8", "414d859e-6a52-4ca2-a1e7-d49cb3e8aa32", "5f50ea3d-df11-4435-afb4-234847694bfc", "4a7ae048-efac-4bb6-bc87-4cc87bf50646", "fce6bef7-f0bb-4c2c-a2ec-1275586627d8", "24695976-1410-4da9-af3d-397fda177292", "baecafb1-fe67-41f6-b290-1bb0c365f392", "f5e43563-2ce7-4c46-a0d1-e3fea5d3dc2c", "33795aa5-5498-4d61-a914-4a5a4a924717", "5736b3fa-57ae-4e17-978a-bcb3508a5ddf", "05ec0a68-e250-412e-9d55-48ea1ee42099", "c95604aa-e6f4-4f00-96e7-24427132c373", "53799397-28be-4604-946d-f7ab9729b1f9", "77ca0d4f-906d-4ebd-b1b8-7635a226b11e"], "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}}, "0e4b6eda-fdb0-4144-9805-0563704f1c85": {"node_ids": ["a2b3fc7f-c005-4983-9725-3659d0ee54d9", "47bcaa45-7db8-49fd-a06e-e6f0b24a7bb4", "2e7b5211-7bec-4bbd-ba1e-81a3368db65a", "10e3babd-88b3-4681-bccc-d5567a2e4bdc", "a8c515ff-a960-4f63-b961-2160be16ccc1", "36bb4775-952c-4d74-9207-3aa34e10b781", "d5631e2e-1118-45d3-a779-24c85fe903e5", "ec1923c2-df1b-4855-8a0a-f336ab815318", "d751cccc-ecb3-449a-9688-83bd9bf60b2a", "28d4aa8a-fc3c-4256-8001-ebf3989a8a4e", "152d65b6-df48-4693-bfef-f2d3545879db", "052aab5a-bd42-400e-b9be-418cc0917e28", "8cee292e-0f75-47a9-924f-c6dc64853467", "24f995f0-78c7-4641-a0b1-24207b3660f2", "963ddaeb-e1ad-4637-96ef-56c1ca3d1497", "90403812-44e0-46d9-be67-38a6e2714b1f", "09f3da52-f881-4e3e-a0fc-534480631ac5", "3b684c45-950a-4ef6-b4b9-05ded2e0432d", "d5b075f2-38d7-4371-91a1-86a0e111c9ba", "3d7b14fb-d5a8-4b14-a90a-931425ad6ca9", "9a952462-c0a7-471f-b4e8-45085548232a"], "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}}, "2dfefa9c-8e8c-4d89-b6ff-dd9955e1ee8d": {"node_ids": ["331a17c2-a6b2-49d8-80c2-8f51e16f9c92"], "metadata": {"file_path": "/workspaces/Relay/services/logger.py", "file_name": "logger.py", "file_type": "text/x-python", "file_size": 546, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "8c2c9253-c07d-427b-9983-26b4a3030368": {"node_ids": ["82a46837-f211-4bfe-92aa-f52312498e69", "4fb3ba42-e65a-4f7c-ad44-ad83a91a38b2"], "metadata": {"file_path": "/workspaces/Relay/services/logs.py", "file_name": "logs.py", "file_type": "text/x-python", "file_size": 1046, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "f19298e0-cb64-4144-b892-97baef329270": {"node_ids": ["648811a8-041e-43ee-b48c-9301c8ef2f04", "0e1cad43-0877-4350-af91-884ca804e464", "94ec48ac-05b4-45c0-9e55-87460566c0fb", "09daccee-d5ce-4182-9dba-80bf9662ec44"], "metadata": {"file_path": "/workspaces/Relay/services/memory.py", "file_name": "memory.py", "file_type": "text/x-python", "file_size": 2117, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "b99d6780-a966-4eb3-82cc-3691ae426d40": {"node_ids": ["aae7f7a5-7ae2-4322-93be-a63a45dec789", "7b6382c5-fd13-44f1-af73-44f9527be802"], "metadata": {"file_path": "/workspaces/Relay/services/neo4j_driver.py", "file_name": "neo4j_driver.py", "file_type": "text/x-python", "file_size": 1645, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}}, "50a61fc3-83da-48cf-88b3-1e30e50b746d": {"node_ids": ["b30e64c2-5d91-456b-bbfa-5059ea2ed52c", "ef12f215-d52f-42d2-93ba-dc56daa27c14"], "metadata": {"file_path": "/workspaces/Relay/services/semantic_retriever.py", "file_name": "semantic_retriever.py", "file_type": "text/x-python", "file_size": 1407, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}}, "e13f0743-9cfb-42c0-9429-1a519170ce74": {"node_ids": ["44974340-92b3-491b-9f56-79a23446ae46"], "metadata": {"file_path": "/workspaces/Relay/services/settings.py", "file_name": "settings.py", "file_type": "text/x-python", "file_size": 793, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "0a3f757a-5777-435a-9679-efa508838307": {"node_ids": ["788d2af7-204b-4fb8-a8f8-039f45505ae8"], "metadata": {"file_path": "/workspaces/Relay/services/summarize_memory.py", "file_name": "summarize_memory.py", "file_type": "text/x-python", "file_size": 818, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}}, "9a99fe2e-b31b-4f80-ad0a-180833445860": {"node_ids": ["943698fa-4800-405b-8170-1831cdeb1233", "93559f09-3224-4b54-9504-6e8d306af895", "dbfa6ffe-7212-4ee3-a5b8-d2b48d6d16c5", "431d30db-002b-4394-88b1-cf410011505b", "27fc97af-4c63-4143-ace6-911a6f649d23", "0f47a0f3-68f1-47fc-a7d2-76d750021701", "1af34c33-8618-4b0b-8049-00997c691f6b", "91eda1cb-d727-4d4c-8759-8f8ad06505ab", "404b23a9-e57e-4e33-8f92-c981a2a6a4f9", "9c33cb34-2ff0-44a9-8f57-f719d0d55a43", "c3671e3d-bb85-42cb-a65b-7614ffcf8906", "59d2122f-0f3d-4679-a97b-efd264c3ce34"], "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "fdc31de9-3775-425f-8a1c-b838441b618d": {"node_ids": ["29b9983c-fa10-495f-bc61-2a1e23dee3dd"], "metadata": {"file_path": "/workspaces/Relay/routes/admin_routes.py", "file_name": "admin_routes.py", "file_type": "text/x-python", "file_size": 750, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "6486cb74-8eea-4dba-888f-af0997f24350": {"node_ids": ["0b164f75-378e-4cc4-ba21-a04a6c00713d", "8c960dbe-5e22-455a-b794-84d32445e384", "49f55fe0-1e4e-45e0-a756-19430092472e", "312ed36f-41fb-40ba-a335-575cbe206050", "9fb0a50b-1ba7-44b8-8f04-f0822780fdcf", "e5712f37-48d2-42db-ab55-1dc01a0568f0", "bf1c8883-ddb4-4df6-92fa-604ebfd829ce", "bda67473-6eb5-46d4-9ab4-f2d5e371921d", "c014f770-7c48-4fb7-9bd6-0723019a69ba", "6ea9b21a-39fe-4987-8281-54607abf06c9", "f8f78446-108e-45ae-a3ce-ee0d39410096", "0443b3cd-e516-4295-a0bc-854770e5500b", "4de6b473-a7fa-4cec-adaf-32c6d1f7f990", "c9778068-23d8-4fc9-8ad3-2a258e790d4e", "d0b2d80b-7e9a-46eb-8af8-e645ae60f07f", "091ea73f-0266-451a-8d51-9276b3c95975", "97abf292-5cae-46c5-8dc8-dfa6f63c7192"], "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}}, "2feb28ac-baa4-422f-b55d-584b618a4518": {"node_ids": ["6ad1fd2f-2938-4cb9-93bb-f1f5393c2e6e", "f6592ca7-734c-4e06-8cd5-da32fce6b12c", "c1d5f863-ef22-45f6-a85a-732aa302f36d", "3b7a7b32-a375-4644-b176-03910ccd64ce", "e368d551-37fa-4d82-969f-a945da783fee", "a2585195-8503-4b5b-9926-09c76139f88e"], "metadata": {"file_path": "/workspaces/Relay/routes/codex.py", "file_name": "codex.py", "file_type": "text/x-python", "file_size": 1956, "creation_date": "2025-06-28", "last_modified_date": "2025-06-28", "tier": "code"}}, "0a4c43d1-4d9a-43ad-badd-40bb975ff269": {"node_ids": ["d7b57a38-6d55-4e5a-897b-f39097264644", "5a3440ed-48e3-4e2f-b6f2-ddff01b00469", "09eeec65-c607-4251-8ac9-4ba8a47c7a6a", "76a60c16-69f2-4f25-9f82-bc451a4d423e", "4de69029-cf63-41c8-a073-687e5ecff4cc", "0091979e-2322-4aa7-a3f6-26c158fe3607"], "metadata": {"file_path": "/workspaces/Relay/routes/context.py", "file_name": "context.py", "file_type": "text/x-python", "file_size": 2115, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "ed5a2863-7494-4d49-9434-d573338a9855": {"node_ids": ["3e0ac4b1-26c3-410f-8f16-76cb7d6b02f2", "cbdd13ff-b60a-4cd7-b2ac-9c7971bbb747", "66ee905d-41f9-4102-876b-908554745acb", "ca638bac-102b-489c-8809-f8b670dd2a3b", "45bb37b6-dcc7-4cd7-b6fd-5b5dffc56242", "2c656bbf-45c2-483c-a7a4-1fc20015789c", "29168a1d-7dd6-4222-83d1-c4047db1f1ab", "f623af46-563d-4bc6-95ab-28c72df348c1", "a130c050-a383-452d-b128-340abb1e54ea", "9cef7f9a-ddb8-4ae2-b9fe-e1bd827444f4", "7d6f580e-6f1b-4685-b6e6-c3300a877af8", "6efe1fc5-cc86-4b7c-bd01-010c96946c69"], "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}}, "31602a85-f549-47b2-bf88-7568d9a05046": {"node_ids": ["36b24d64-af4f-46ff-9846-4764ac90b417"], "metadata": {"file_path": "/workspaces/Relay/routes/debug.py", "file_name": "debug.py", "file_type": "text/x-python", "file_size": 342, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "8f6cc702-fe64-4297-bfd0-82363af6cf39": {"node_ids": ["f384bc8a-5e04-4a3b-b244-0ce60e96d9ad", "0e93c49a-8ab9-484b-bd48-2d5a64719263", "7e8f1f38-8192-4f9e-bb63-d93b40485def", "193cd6d6-53cf-4133-b15c-607faa498d0f", "71c65ac7-5386-4cb0-bfba-db12fb88ce27", "c7428435-1803-4132-9dca-4d6581fd535a", "c307de92-2ff6-4be8-8e6b-d246916614a6", "e02aecf4-33ef-4256-8417-e43d9adbb4e1"], "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "38538099-cd23-461a-91d8-118e2933e517": {"node_ids": ["de2dd2e4-0cb6-41ee-b401-901057d072bd", "a824378b-3d72-4607-8aae-e5d7fe0310a9", "7e706a26-cdae-4f9c-aee8-90ba09773e1e"], "metadata": {"file_path": "/workspaces/Relay/routes/embeddings.py", "file_name": "embeddings.py", "file_type": "text/x-python", "file_size": 1611, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "2e32764c-0abd-4fd3-9a67-d8023031943f": {"node_ids": ["499e90f9-6914-4364-a86c-32d1d25bf2d5", "b0c07379-5363-4154-9efa-75b1399e4946"], "metadata": {"file_path": "/workspaces/Relay/routes/index.py", "file_name": "index.py", "file_type": "text/x-python", "file_size": 1283, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "a40701d7-8355-4eda-a362-74956040cac5": {"node_ids": ["6adc2039-d1db-48fc-b893-241c33cf0918", "2fa2ffdd-4497-4087-b08f-337b9de2c138", "9d1cda19-c42d-4e31-855b-17512f697595", "9b48c9a1-66c8-4c28-9b8d-c62e58841f80"], "metadata": {"file_path": "/workspaces/Relay/routes/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 3005, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "7008791d-2bff-4136-a0d9-651ac6a9d691": {"node_ids": ["840417f7-552d-4aa7-a006-d3a757bcde21"], "metadata": {"file_path": "/workspaces/Relay/routes/logs_sessions.py", "file_name": "logs_sessions.py", "file_type": "text/x-python", "file_size": 774, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "0183c143-2e6c-44a9-a818-c6cbfbaa3025": {"node_ids": ["ae9385e1-99db-4e9e-a4cf-3c3a6a19fd89", "d751e7d9-6bc7-4f2c-91bd-c8f4b1433aab", "e8d76c2c-d93f-4047-82f2-f6e16b44160c", "2d79c4b4-51a6-4658-9192-4d1b6b8dfef4", "f5230dab-d73b-4a9a-ad97-4a0db9107843"], "metadata": {"file_path": "/workspaces/Relay/routes/mcp.py", "file_name": "mcp.py", "file_type": "text/x-python", "file_size": 2007, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}}, "0473e7e7-8950-40a9-8df1-929378b79229": {"node_ids": ["68d8d831-6681-4280-89c5-3af34874c104", "386c6965-275a-4807-98c2-30874b653d50", "ad6d4622-b419-4550-acfd-770bf63f1ea7", "c0ef2b16-8c2e-4105-b5fc-26a211d7fa95", "86f985be-2e71-4553-90f0-b7f3e8999942", "3c61a857-41ae-4f53-9793-df5521f0692c", "41636d82-cb27-417b-9a0d-c7431fe7fc6d", "20d11dc5-4448-493d-9d34-b780f84f5e5f", "0a71723e-9832-443a-99cc-ead3af2cd3c7", "0cc6f030-24c8-45ed-8106-0c30467c796a"], "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "b3c725d9-35ab-407d-849d-8a7b2f1b2110": {"node_ids": ["38be037f-19c3-4741-8858-89e0148b68d4", "d26ee48c-b607-4dca-a746-81f069b3cf78", "7bccc35d-1cf7-4a49-a217-8cfe9efbd68f", "b249bcf7-a470-4905-93de-c3e9f1d009cc"], "metadata": {"file_path": "/workspaces/Relay/routes/search.py", "file_name": "search.py", "file_type": "text/x-python", "file_size": 2750, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "05b1b04d-1226-4714-8064-33e7ae47ce03": {"node_ids": ["b6a713cc-e349-46ab-be3a-4e25780c2edb", "624a1e0a-6959-4fb0-88db-435b266ff57c", "763b06a5-9787-43ad-9ef0-4c7b74dea0fc", "6a5ce23b-c70e-48cc-9dbb-3d97afa915af", "301a02df-ad3d-4fef-95c2-2458f2eb1df3", "8fe274ce-5225-45a6-9d9a-7a5e723d0ae8", "89a125f4-9d14-420a-9ba5-15be13e20c8a", "112de5d6-4de0-4c5a-9a06-dc3bd20f6f40"], "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}}, "a7ee41ae-41c6-4913-8701-2437bde93bbc": {"node_ids": ["eaa5e0b2-efe8-4d4e-8914-7baacb75d6b2", "779dfa57-1540-4c34-9f57-2e0c74842355"], "metadata": {"file_path": "/workspaces/Relay/routes/status_code.py", "file_name": "status_code.py", "file_type": "text/x-python", "file_size": 1548, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "66bb3ded-ddea-46dd-adc9-960b96322282": {"node_ids": ["a4672e0e-9084-4ac8-895b-519bd0e75a13"], "metadata": {"file_path": "/workspaces/Relay/frontend/README.md", "file_name": "README.md", "file_type": "text/markdown", "file_size": 1677, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}}, "6548612b-e20f-4dda-9283-11e83c63725d": {"node_ids": ["bb61247f-c844-4714-8ae1-ebd5d43e4d2f"], "metadata": {"file_path": "/workspaces/Relay/frontend/components.json", "file_name": "components.json", "file_type": "application/json", "file_size": 428, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "29663ea3-6738-42c8-92db-3bfbd5886f6b": {"node_ids": ["2517e366-78f3-4228-a072-7a21ba72fbf8"], "metadata": {"file_path": "/workspaces/Relay/frontend/next-env.d.ts", "file_name": "next-env.d.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 211, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "14362d45-00b5-4c3b-9ba5-ff4db70c4488": {"node_ids": ["085ab751-9d5f-4f0d-859c-98bca99b9fb7"], "metadata": {"file_path": "/workspaces/Relay/frontend/next.config.ts", "file_name": "next.config.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 133, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "e055f046-2dca-4faf-802a-6d8258520eac": {"node_ids": ["c1da70b8-3568-49fc-b321-86bbc5362c1d"], "metadata": {"file_path": "/workspaces/Relay/frontend/package.json", "file_name": "package.json", "file_type": "application/json", "file_size": 1627, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}}, "13e41f38-85b2-4736-ac43-a139c7839ebd": {"node_ids": ["95a3f5ef-27bd-4a91-b12d-8856de5b9057"], "metadata": {"file_path": "/workspaces/Relay/frontend/postcss.config.js", "file_name": "postcss.config.js", "file_type": "text/javascript", "file_size": 110, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}}, "e1c7565f-c5ba-45fa-bfd3-4a40548fb866": {"node_ids": ["e0588c01-64ee-48fc-b193-cf36bc9f33ac"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/action-queue/page.tsx", "file_name": "page.tsx", "file_size": 286, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "25e599c2-cab1-424e-859f-4d3b95733deb": {"node_ids": ["6a32b29f-3496-459b-8765-b7be49a2d6d6"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/api/docs/list/route.ts", "file_name": "route.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 215, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}}, "b17a35a5-9ecc-4f0d-9290-0547cc9e8cd4": {"node_ids": ["3168c3c9-d1bb-4839-99e8-be05e8fb601f"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/api/docs/view/route.ts", "file_name": "route.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 358, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}}, "f717d81c-79f5-4467-abad-16a5e35486f8": {"node_ids": ["0c036d5d-49af-4add-bc43-042cf499ac6f"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/api/kb/search/route.ts", "file_name": "route.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 389, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}}, "e6941142-9012-41f6-ad6e-9f7600df39f3": {"node_ids": ["37cd7e6f-358e-4a45-a8bc-4e850d9c6008"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/api/status/summary/route.ts", "file_name": "route.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 220, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}}, "980a32f5-a377-4938-83a3-adf4069d2e6c": {"node_ids": ["0666ab59-ce12-42cf-a7db-5a8321510d37", "3dca60c3-1cb6-4321-93ae-ef83e4ae1d0b", "ea13ee28-37d7-4001-8fe2-840ef4b53680", "042a8514-f00b-43c4-bc88-8d5e88500922", "cb07dbea-8e5d-473d-a3a1-31d28b061eef", "bd444b70-c903-4632-b6a5-4987d67c7eae", "88548200-a9dd-4ee6-9eef-445c7697ff69", "84000011-2534-4029-bb3e-c497a5ab036e", "2272584b-88b3-48fd-b153-fda89aa2235d", "6ca229d7-efd9-4a9b-9be9-2e426aba6f87", "7878fa09-0e91-41e9-a570-82b6cecc9cc6", "d3362ca9-0e22-4700-8607-385e29278f52", "ba5ca241-3961-4748-985d-fd1ae561513c", "58b659db-847e-4cd2-9223-955b5b76ce26"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}}, "5f1a423b-f72a-4350-be5e-df4850e224d9": {"node_ids": ["3c62a648-892f-4ff9-9d36-cd36e7773e7c"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/audit/page.tsx", "file_name": "page.tsx", "file_size": 261, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "0ec98317-bdde-469e-adb3-5d896cd107c8": {"node_ids": ["71785f0a-ac85-43a8-9c23-5ce4505c7f96", "d9e13a2a-60b8-459b-a995-1e1ad6485922", "89c8b095-c635-49c4-bc09-0f5ec3c96c2f", "40cf2f11-634d-4451-91b3-abd32d0e93c9", "2b05c0fb-c2d8-46b9-92df-d1cacfd358ae", "60fb7bb2-3310-473f-86ed-970a843cd5ec", "fca2d073-0a71-40ed-ad47-4bd28bd210f1", "51c0921d-31c2-426a-9114-5b95c2debd6c", "6a9d8524-e3c5-4bc2-a79d-d2c1ec6ecaa4", "a6b9c5fc-3958-456e-a178-22b95c76282e", "098f8702-a262-4fb3-a7a0-28fe15f94601", "efa1e6d8-a7dc-4433-83fd-6fafcf4b2b5e", "82a46d03-a0c9-4316-a09a-bd679788d75c"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}}, "e124993b-3b37-424a-8ff1-ba823840b230": {"node_ids": ["1b30bc4b-120e-4cd5-bb7b-90820c94b839"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/control/page.tsx", "file_name": "page.tsx", "file_size": 893, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "9c33eeab-8ddc-4c19-91b8-f219d3cdc2a9": {"node_ids": ["f8a338a6-51d6-4913-87f2-a30fa72ab4ec"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/dashboard/page.tsx", "file_name": "page.tsx", "file_size": 173, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "3f9ab488-b602-435e-8389-6354515b593e": {"node_ids": ["2371a1ac-f66d-4407-b415-0707c4a1eabc"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/docs/page.tsx", "file_name": "page.tsx", "file_size": 231, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}}, "4aa3f44a-489d-49c8-9271-ccdb9179f69a": {"node_ids": ["87a46140-2663-4043-a4cb-01ffc81956e6"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/layout.tsx", "file_name": "layout.tsx", "file_size": 514, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}}, "f4abdec2-bedf-4836-8c6b-cd8b7db52dc2": {"node_ids": ["3cd13449-817c-46dd-9c64-cc5b6c81ebe1"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/metricschart/page.tsx", "file_name": "page.tsx", "file_size": 271, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "e564c1a2-dea9-4d77-a934-37f73ae4303a": {"node_ids": ["e654657c-9f32-449a-98a4-5f042465fe3b", "9f59e86a-2d7e-463b-a3ee-308c0858611c", "f6db0ad7-aced-4e89-8a84-536cf4320403", "74af99c6-6008-431a-b18c-5823ed36a559", "b1e9b235-435e-47c0-88da-6990f35f6fca", "ad1ae4be-f8ef-44d0-80a0-04a64746a5c2", "75bdf8bb-cdc7-42a7-8a61-f4d95f47cb99", "c9c6294b-aff8-4beb-b369-f79b66c0dd88", "bdea3ad6-823a-48ff-b250-bb73f1de119a", "f29b97ee-65d9-4bbd-b71c-da31fdeaf890", "a19e5df2-8d78-4e34-a1ce-7e6d7aab2c4b", "5fd04a39-8402-4acc-86ef-a63592e6c715", "d6365900-f8ad-4eb9-9616-812cd9315e35", "c3eac059-8f73-4b16-a7db-0ec92d9a85dc", "88d5fa33-eede-4f2f-9ce7-c737b7e96e84", "c7c04e80-d998-4982-becc-d4e09f0f09bf", "936545bf-07ea-46b7-b059-0fd407fbbbe4", "545c01e0-0083-47a0-ba04-a185cacbcde3", "8824c170-ac37-4e3b-845e-071ee36c82f2", "e8998392-b304-46c5-8f34-675febbe41ba", "916e0d65-80de-4d8a-b88e-429ee401ed6c", "1575b704-debc-4009-9fec-48a950a6c5d3", "fcea3600-f58d-4528-b031-a2b9c7fdb1e5", "3a8085e4-5559-4797-86f3-dec55a39b8cc"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}}, "33fbed8f-fd0d-4781-8f3d-d59abaf7c5d9": {"node_ids": ["63b58172-724d-49a6-8a64-bb79d61a3f14"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/settings/page.tsx", "file_name": "page.tsx", "file_size": 353, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "8bde591a-5aea-4b5f-a8aa-104c5fc96b69": {"node_ids": ["e10fcc2d-93b2-43a0-9d68-749496780eac"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/status/page.tsx", "file_name": "page.tsx", "file_size": 284, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd": {"node_ids": ["24f2aaa0-7805-4d70-9992-7b1804cba1d7", "35127fc9-69e0-44bd-91ae-51ad94d0a6a9", "f25ba194-f327-4ec0-b1c3-61dbc148a844", "c18f630e-6c2a-4537-9352-907191045c0a", "b21f9cb5-52f5-4b34-98a3-2464ddf459c5", "9b774728-e508-4157-972b-f0bf51142f25", "c6d39bbb-68bd-45ba-894d-46163da6d4ad", "9e97ffd5-b906-4b90-ac16-f4b396fa95ec", "fac7b240-a689-4e06-9f90-b5d9dcc9e3da", "bd9a8683-8f7a-461e-84d2-e102cd20a40b", "f31dcd6d-be2d-4e55-bffa-ba2f53ed3b82", "d07e4de3-50bf-4487-926d-2408eade20a7", "3b48b1a5-db2f-4612-8804-5ee962e2c004", "59e6dcac-16ea-4414-8158-7bd470a015a2", "11baac43-2726-4301-859e-1a6c007b3169", "b380fe3a-f9c3-4c98-8001-71e13e4a2cf5", "4fcef535-2869-417b-a8a5-62b06858bb87", "8b2dce47-88de-4801-98bd-1aee910e3769", "ceec07f8-cdf2-4bad-8ad1-a9c10d96b456"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}}, "94b07f58-6718-4fa6-936e-c0f03227f675": {"node_ids": ["7ff00b61-ff44-4a9b-8013-330348ae3de5"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/ChatMessage.tsx", "file_name": "ChatMessage.tsx", "file_size": 894, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}}, "5ee1f642-2093-4537-b583-0fccbd38eea4": {"node_ids": ["7312a6c1-600d-42ef-9b04-c427fd43d962", "7f43262b-6c6c-4c35-bb26-475fedfd0e55"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/ChatWindow.tsx", "file_name": "ChatWindow.tsx", "file_size": 1683, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}}, "289722e8-f00e-4fe9-b450-4236bb381bad": {"node_ids": ["7fa74443-a8fd-4400-af2d-e42726ae4f65", "de128145-3e12-4bea-93bb-90f57755e8fc", "8960c468-1254-41e7-9e0b-11a5f622daaa"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/InputBar.tsx", "file_name": "InputBar.tsx", "file_size": 1460, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}}, "0ea42579-802c-4e7c-8f88-071c77ea142b": {"node_ids": ["f642873c-aad8-4f67-87fb-df4d50a0431d", "e26b868f-2b51-4a00-8df8-4e8c69151e2e", "f3e96b03-35a5-48e3-a21b-7cf2df286ac8", "11e1a621-8edf-4b77-9559-acbbdc711ce1", "962644ab-a666-409e-8f30-e6ce515b8b12", "1c8dda4e-a1e9-4027-9395-d296408b97ed", "49cfcf0c-b7e8-4dfc-ae5b-e45d72b294c4", "ab6b7c5d-cd8d-495c-9821-89f8e029b094", "79b132ee-3558-4821-b908-551c647d4ab4", "7422687e-3144-4061-ad9e-0f1f1f351e03", "681b1631-9a28-4b57-94cd-061698126e2f", "45c31b25-b609-433d-be6f-610128876199", "8757520e-db76-495c-8b2e-74dc55cff600", "92d35471-a49a-4cb8-91e6-be673d8f807f", "b27feb64-ba6a-4c97-a650-0acb030496de"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}}, "87b2beae-4363-4343-a54e-9ae8df48ca17": {"node_ids": ["78879324-d99b-4338-af41-2816bd32a628", "8e7b23b9-cd18-465d-9d96-56dad20035f9", "f9142cf8-0cda-481d-a2f5-924317e54673", "ef8bf93b-f383-4db1-8510-a7c7ec693b4c", "158f7c6e-59b5-40fb-ab05-f9aefe9393e4", "24ed2d09-7884-4ac9-ba41-d43e7b0fdc6d", "6ed7f088-a671-4cf9-b449-aa3056fbd1ea", "f33b36a9-4219-4fe4-9c0d-bc78449cb0e9", "5cf47046-fee5-4f4c-b574-6ac8d418c93c", "f45d5828-67ff-4c91-87a1-312d4a98c973", "1f4c7ea3-3e42-4215-a342-bb2bbd07e245", "ae000c1b-e46b-492e-8154-2cf2d402808f", "22d1ac1b-7e94-44f3-95ac-73a1fcb479fe", "cbc2052b-9d11-44cc-9dc1-c2d92546defb", "a01462e9-0bf3-41fc-b097-f375ce45f856", "d8de4135-c70f-4117-b4f7-7a224de0a0d6", "5dd54dff-820a-42ea-8b5d-5f684310cf52", "02134762-c2a2-4a9a-aca7-ac50e82d70cd", "11a18a74-9370-4f65-ac4d-6822ae29c21c", "bee1db08-77a8-4dc6-8881-a1a0057450e8", "2d0d46c3-0a23-4459-9784-5c245d18e091"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}}, "6bc7fc98-8e8d-464b-943d-86eeb9d34004": {"node_ids": ["915c566a-0699-4f50-9c52-9da29e73671a", "c1da7268-9fe0-48fe-9042-d7386a714184", "eabd84fe-0ec1-4801-9e80-6309ed8882ee", "3b839412-abb2-43fb-958a-6eb267117f28", "ca4469bc-3c62-43ca-b964-908f307bbf73", "f7e4c9cc-6022-4cac-bcb2-0336fceea5ec", "c6f134d1-35c1-4622-855b-9faa65767bf6", "edf4a488-a999-42d5-ba70-aeb40bae87e6", "82029320-8a69-436a-9eb6-c092830b2abc", "cc565f2a-4c98-4a4b-830c-cde2faa772f7", "019784bb-e75c-47e4-b0e4-ffd06409e339", "011c1678-a701-4cb9-a5d0-36fbdfe43ff5", "91ad83df-6fd8-48fb-860e-d5e72a69fa86", "3fd6db07-292e-4148-bcaf-58cd01b96dce", "47f8c71d-7b01-4347-8a01-5835f0556adf", "d6f64d7a-0939-43e1-8e4d-3ca807194907", "901274fa-6ae5-4d52-8222-92be0ba8f267", "d1179111-3a63-4b3f-86fa-5b5463a00261", "4c700435-5428-4226-b7d0-c0e5b95199df", "92b53c16-5c51-487a-b148-415ccd9763c6", "7f080b2c-4d08-4d8b-8538-15b375c987e3", "a1b50aea-4a01-4877-984c-4da7d26e4a1d", "6d608c84-0e07-4919-b8d8-370e1824c271", "008398bb-ae0c-4202-bf59-87b74e4dfa02", "0f0a43d2-700c-424e-8952-897f37c7179f", "94f840ee-9bf9-4aaa-ab73-17966992b8dc", "9620dc96-080e-45bc-b782-889551766fc7", "7d6fa417-b45b-4843-95b5-6b1930f3328c", "c999ba29-a8e3-4a61-8678-985ce3b03001", "9258ee7c-763a-47ae-b51f-ae7cd106599c", "d8885b39-4df2-44c1-9ae8-6d5be87fe860", "6cc5806f-fb2d-40e4-be17-e7f8ef35072f", "114d4ea0-e08f-4785-9dad-128d516216b0", "421beaf8-c9b8-480d-9e94-f3d7c682386e", "d246792e-191e-45c5-a987-a233c4164bbc", "8f6d277e-610a-4d14-bb52-73d2bd96b35f"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}}, "32dc3542-c4ef-4464-a837-d432484812e6": {"node_ids": ["6e4113fb-74c0-4cdb-80d2-2994b6a7f8b8"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/CodexEditor.tsx", "file_name": "CodexEditor.tsx", "file_size": 842, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}}, "9b7d1f10-f7c2-4086-b1eb-1e56478ea6fc": {"node_ids": ["0c813d3f-191a-44a3-af38-82650f6be5e4", "07986cec-30fd-4fe8-8bc3-4f96decca041"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/CodexPatchView.tsx", "file_name": "CodexPatchView.tsx", "file_size": 1321, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}}, "5cbb088d-9539-416f-a259-71f6b74e6514": {"node_ids": ["0766a382-1f42-4011-a6a6-24bfc067633c", "7532c07c-aa05-41e5-ae98-5207445cbfbb"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/CodexPromptBar.tsx", "file_name": "CodexPromptBar.tsx", "file_size": 1423, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}}, "3e0b2e9f-c510-43f2-8451-4b8d2530f4c1": {"node_ids": ["e7da7969-2961-4431-b742-d928fe8a047c"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/index.ts", "file_name": "index.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 277, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}}, "9da16c98-74fc-4c76-ba2f-b88c95fbfd9c": {"node_ids": ["cef6f5c8-c707-460a-92f8-a2d4de7ef7f1", "6440f7fc-c47e-4acd-8908-60cd4504dc9c", "7308a31e-def6-4b4a-b251-78cb96aed1d3", "83016ca6-7a38-40ca-a996-a0a233984b3c", "a9f16877-09aa-441f-a999-64265d98b5c8", "b36e0529-69b5-4e04-87e1-9a4b8ce550eb"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/page.tsx", "file_name": "page.tsx", "file_size": 2108, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}}, "294db636-4976-40c6-b004-c7e3e9b808bc": {"node_ids": ["b1215892-0edd-4101-a579-78327c549d6a", "b4ba60bd-723f-4cb8-a08c-c125558fb091", "2c7beaa9-9a02-45ea-b218-41a47c261ff7", "f4b04ba0-1298-4faf-af7c-ce3884352253", "1da29885-8e5a-481c-a1a6-5062c1310ee2", "5c5a1ef6-825d-47ae-8a0b-8bf732f97c59"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsSyncPanel.tsx", "file_name": "DocsSyncPanel.tsx", "file_size": 5158, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}}, "fac7b0ea-c0a4-48ce-8eac-13d796240637": {"node_ids": ["bab675dd-284b-416f-8779-5d8c62e4b544", "54fad1d4-8a27-4d1e-af6b-85200862e921", "2f975ff3-878e-48d7-a1af-a32d1bff0600", "f68f9163-1117-4791-9bca-af7449fa78f9", "b86af43f-cd2b-47e1-ba59-3e62bc502af7", "9bd3f33b-2f5e-4132-89e2-bbee398af8a2", "f4a3255e-60ae-453c-a8de-68a5dec07b04", "96c03b75-63f0-4db3-9393-a788dc9ecf0b", "f65bad68-7c4e-4641-aa42-ee3b252c22fe", "9607002d-bd0c-4945-948a-e6d2f1e921ad", "c81149fa-eb22-4a82-858e-41814ce9502b", "cf4a3f70-f807-4146-9e3f-374244016a55", "521df911-21ec-48e2-afdb-0ed2926d3067", "83ec35a1-e003-4b23-9c2f-475357ef55e9", "2e7650f2-061d-45e4-9a30-1467210b1882", "97a40117-e721-414f-bbff-f2d958cb40fa"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}}, "adfa85cf-1ad4-4246-a4cc-ca6b29ba7be4": {"node_ids": ["8410c2de-8135-4dff-b3c3-87abf1c92cff", "f9a8caa4-5f82-4bb1-ad55-e16ce2db02dc", "393cc687-ce53-4f3a-86b2-e5a3aea7984c", "8a7b7a93-aabb-4ebd-b310-6c6acebef753"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/GmailOps/GmailOpsPanel.tsx", "file_name": "GmailOpsPanel.tsx", "file_size": 3509, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}}, "04fb77e3-dc49-4d27-a360-dd2408318851": {"node_ids": ["ae77cd7d-8794-486d-a2fb-e1aa5db21d91", "57b044d0-f8cc-476c-a1e7-aa70dad30f7a", "4fc503a8-72b9-48aa-8381-5511fb526f63", "afa03f38-77f6-43b9-b08b-4dfe1a8d7a64", "380962a8-390f-45a0-8774-3ddceeef9cf4", "585545c8-4013-4d55-95f9-f11a92e39909", "59e13ac8-1d08-4664-bf7c-ee9178f075ac"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/LogsPanel/LogsPanel.tsx", "file_name": "LogsPanel.tsx", "file_size": 5877, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}}, "a76a9d83-b2de-4344-9438-0b93c9fd6d23": {"node_ids": ["271427d1-54a6-4335-8127-7a0079c2f470", "a35867ee-b81b-46b2-931a-acf264144a59", "b4ad8b21-270e-486f-99da-b83e0a6ee993", "dec2ddf7-27ac-4783-b46d-ddc00c9ab370", "2c54560b-a6fd-42ab-a504-191d2652a987", "5a8b7431-62aa-409b-9b87-833aa21bee3d", "391e2ea9-875a-4ca1-90c6-8f0700741836", "19df0585-348a-4bb2-b420-e344a792facb", "96be358c-32a7-472f-b97b-8b1e6f93a309", "83020a17-a315-4631-9d1a-adc5a7c26ff1", "1002d0d4-52d8-498f-9b53-0a1888851659", "2bfd3e12-86eb-4376-afa9-d88dbdf6f4a0", "c8df323a-08a0-4412-8fe8-49877fc8b6e1", "9a4b6f06-6aab-48ef-a4bd-74f050fd1336", "49b66923-e458-439c-96c1-8fc7533d9e74", "b829f14a-a8b4-4769-833f-828bd96d9dea", "d2848e65-0489-4d61-8431-c4d7210414a5", "b3a68080-1b8c-42e8-bd47-47b168c5f052", "9dc60169-c222-4edb-8085-ec0c3e660523", "31b446d5-2c42-4d54-b7bf-949d63ad43a9"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}}, "5b324823-b3c3-4b78-91fa-fae0a8764817": {"node_ids": ["0c02d425-585b-4391-96fd-f6283a5e334b"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MetricsCharts/MetricsCharts.tsx", "file_name": "MetricsCharts.tsx", "file_size": 902, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "2bd9d066-ded0-4192-ade2-82961bbbe2d7": {"node_ids": ["f13331ca-ca94-419a-ae20-6a9cbc9b26dd", "9024aa76-5ae7-4b34-afcb-dd5fe0f9dfca", "99f6326e-15ad-40cb-a03e-da44c27e4490", "6b3fc02f-ac08-454c-bde6-35e08db5848a", "48a8489a-f5f1-4e70-a88f-2fde713dc413", "b7da558b-4dc9-4a09-a9a5-ed5ddfb09a5a", "183f28f4-abdd-4e25-a9e7-11afa266c8d7"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SafeMarkdown.tsx", "file_name": "SafeMarkdown.tsx", "file_size": 3365, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}}, "cda462c3-de6c-4079-b0ed-d1e0ec4c2996": {"node_ids": ["722f3bbd-d64f-40f8-bd0f-4deb563ce8c5", "e3d5c78d-e8c8-4b7e-aafe-225453991b29", "827e849d-8bd2-47c9-8d99-caa5244d5e35", "aee3df4f-2ae5-4fe5-8604-bb3325037b5d", "9cecc241-4dc4-4fc1-acfd-358b5e7ef496", "64e76e2a-2114-44d4-8921-8692e36daf94", "3c32dcb1-fd27-4e78-bcbf-d93c81a2de96", "e5c0f139-58b7-49eb-98f4-b48cbeb5626c", "c03ee43a-ed1c-4310-be80-9971408909fd", "095ec695-443d-435e-ba39-3b04a452f1c5", "619acef1-d2c4-4104-943c-2d3545ec6a2d", "e0c2153e-a6dc-4a66-9e5f-5dd8ca7abc8d"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}}, "a4b71e2f-e809-403a-9f50-cf61d5943de1": {"node_ids": ["f484cc59-0461-4485-81bd-b5c50b972a27", "a6275afa-d11f-4fae-9e86-2754215979bb"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Sidebar/Sidebar.tsx", "file_name": "Sidebar.tsx", "file_size": 1570, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}}, "2edfdd61-050f-416a-bf10-e47dd41ac061": {"node_ids": ["e00f2927-a5e5-4eeb-8566-03a9050b87b7", "fee65fdf-192b-42ad-af9a-749f74b16591", "e421a7ed-7631-4270-b20f-b7965f6bd581", "9d9e4f2c-9c81-47c4-949c-805c72211892", "ad0c9e91-8446-4ba2-aa55-1c5629157e23", "d8a0d61c-1c3d-4e98-af99-faf25d0046af", "6bae6f79-ff0a-4b41-814c-0f2e89dfa621", "40e2a733-6303-432e-aa68-70822c0d56a5", "bc2f4bfe-9d4e-401f-9067-869b3f24815b", "a403ca78-062e-4885-a1ad-6bd3215c970c", "f156e9a4-5c3d-4cb4-b354-24ff1ab3866c"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "d327fcf8-5435-4a3e-a4a2-6ef6dcb6118f": {"node_ids": ["f7c71597-15b0-41e0-bc3d-18d088f9e541"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.stories.tsx", "file_name": "Dashboard.stories.tsx", "file_size": 152, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "bb46da22-206b-4431-93d2-1fe6cac3a8ef": {"node_ids": ["a11e0066-3d0f-422f-a64d-ffc3a3cdb7dc", "b95fb25a-2aae-45f1-95cd-16b2a68b4ed9", "0feaba67-a349-4508-878e-cf2b14914aad", "16a91c21-338b-4953-bdad-3c781692bf55", "0d677361-7907-4cf1-babf-49060e598988", "9946ae2d-ca1e-4100-a222-7c469589601b", "b602fb52-f879-4965-9cca-3bd425c4b434", "690eb51c-e255-4795-8f76-93462726ce73", "0be08f95-6279-45e5-93b7-b07f2d8af16a", "744094f9-62f9-4a69-9ac8-345aa016f948", "5c0aa4b0-3ff3-4030-9859-6d05fe304a45", "9abe5a86-6024-44de-8522-89b04ea32266", "eda23e01-bc38-4492-905c-b6f3f006a1bd", "efa51467-af25-4140-90db-8db3e00a689b", "a3030715-6fd5-4cf8-8f46-01f44aa7311e", "3869d149-6285-49d6-90f1-7cf1d0f8cf7b", "1f8a6f30-5c7e-4a5c-bf21-eadce0ccddb3", "7d405262-aa46-4b47-a599-5aac5e40590c", "c8b58d83-cb3d-4ff6-b2ee-d6153ea05bef", "a5920d2b-85f5-4f73-8b20-cfb5e7c3fa7b", "6535763e-01ff-4b47-bce3-f9588a5d85e5"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "30705105-01ce-40cd-987d-970fa0b3ede6": {"node_ids": ["7092dba3-b2e6-41a7-8594-6026ff235180"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/index.ts", "file_name": "index.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 717, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "2d56e80e-5c23-4063-ba80-8597db2f436a": {"node_ids": ["f9f99961-eaee-47ae-a2a3-d796f8f6e843", "247b6bba-20a1-4c41-b229-4be94c43de9b"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/AskAgent/AskAgent.tsx", "file_name": "AskAgent.tsx", "file_size": 1644, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}}, "243426df-c4af-4c38-8374-1629e06d9890": {"node_ids": ["01eb26ff-c5e1-486c-9d1c-4b3428b0822b"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/badge.tsx", "file_name": "badge.tsx", "file_size": 882, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "47aa071b-13e9-44a1-b80d-57e280c71062": {"node_ids": ["d9df63df-68db-42a8-90de-2a98454e08a8", "e5306021-c60d-47e5-9ff9-129ddc848451", "414e3e46-a8ff-49f5-b678-2e0c716eaa93", "5dd41eaa-dfa1-41bd-b84c-3cf390583453", "77aa77f9-c794-498f-9781-5db71a545c8f", "5bcf605f-c34f-4740-ac92-063f993c0b03", "0fb7a673-8171-4f07-89eb-bc68b340fabf", "a6e3f306-7bad-40a7-aa3b-cb9b1faf91aa", "4d7e8366-ce94-4d3c-b18d-fcf02a03a9e3"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "8f9afacb-3cc7-4f6b-8c58-a6824273674d": {"node_ids": ["5da9c9dc-28d0-4816-86bb-5ded81ee5fdf", "b062bbee-053c-4429-b9db-7a277ebd3c11"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/card.tsx", "file_name": "card.tsx", "file_size": 1989, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "aac4a791-311d-43e2-9d00-984946071c2e": {"node_ids": ["1f9e8817-e0f9-4838-8e16-9dde7c0028f2"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/input.tsx", "file_name": "input.tsx", "file_size": 967, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "91bd6068-5859-4973-866f-714db98dd9fd": {"node_ids": ["fdb845cd-086b-4812-8ec5-db193f89bdb7"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/label.tsx", "file_name": "label.tsx", "file_size": 611, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "a08ddad1-e22c-48e2-b6a7-6d83a7d3e355": {"node_ids": ["67ff85ed-a1ab-4b7a-8174-46e680ae439d"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/progress.tsx", "file_name": "progress.tsx", "file_size": 698, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "9b19b8e5-3896-45a9-8764-667ae671db29": {"node_ids": ["4c276ac8-ddb9-4343-9e28-f4a626b2d48a"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/textarea.tsx", "file_name": "textarea.tsx", "file_size": 759, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "3d53fdc1-a697-48b8-b914-c219442bfd6a": {"node_ids": ["45088aaf-6d1c-43ad-a305-2da137c8f00c"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/lib/api.ts", "file_name": "api.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 278, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "853057e8-5db7-4b68-a9e3-23db96e04fa7": {"node_ids": ["0e3ad323-81f8-498b-ace8-f258f8284b20"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/lib/toMDString.ts", "file_name": "toMDString.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 422, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}}, "2659e62d-e312-44a3-9475-9607d39b39f8": {"node_ids": ["6d211b89-f5f8-43c9-9ab2-6a33a22522c4"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/lib/utils.ts", "file_name": "utils.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 196, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}}, "e74bda56-de14-4def-adad-037541643aca": {"node_ids": ["e8cfdefb-c9ba-420b-992c-fb3a7d08055a"], "metadata": {"file_path": "/workspaces/Relay/frontend/src/types/react-syntax-highlighter.d.ts", "file_name": "react-syntax-highlighter.d.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 173, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "b983982e-08b5-4a91-ad37-9d6a497824fe": {"node_ids": ["20743f4a-4e0f-49b2-8020-b3595698a40b", "dae8f776-da0c-4843-94a5-0bc9953d5c13", "7df41a4e-2d86-40c5-ac83-0df4e2437e66", "081b7d9f-51ec-4e3e-a3f1-b47b660139c7", "0de5d36c-ae96-4d82-a734-874325006af8", "8f411bd5-64f5-4075-85a1-5436c3852e1f", "6f82e457-2818-4e55-a65d-5ae993e02f9c", "b5943380-26b2-4996-ad09-e0adf7219d43"], "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "cb890357-8aae-4527-8cc2-a0b01f20cf58": {"node_ids": ["eb4796b3-7d38-47b1-a417-6e0cf87358af"], "metadata": {"file_path": "/workspaces/Relay/frontend/tailwind.config.js", "file_name": "tailwind.config.js", "file_type": "text/javascript", "file_size": 907, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}}, "a6171234-0192-4619-b987-c10e1b7d7c84": {"node_ids": ["9c33dedc-c9bf-4caf-888e-c80591d20624"], "metadata": {"file_path": "/workspaces/Relay/frontend/tests/SafeMarkdown.test.tsx", "file_name": "SafeMarkdown.test.tsx", "file_size": 898, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}}, "0b26ca94-4a0a-4d63-8979-f8c3d7cc9c71": {"node_ids": ["1ca6bdaf-df8c-43a2-b72b-f7e8e01ca773"], "metadata": {"file_path": "/workspaces/Relay/frontend/tests/toMDString.test.ts", "file_name": "toMDString.test.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 723, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}}, "392cc47c-5b61-484c-aa52-5915cb96d59e": {"node_ids": ["156a6b7b-6b6f-470c-801f-f63e0e371339"], "metadata": {"file_path": "/workspaces/Relay/frontend/tsconfig.json", "file_name": "tsconfig.json", "file_type": "application/json", "file_size": 2163, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}}, "7594adde-4e76-4ebd-a92d-bf264e1d4821": {"node_ids": ["4fb6e88d-0f74-4836-b13c-d070b106daa2"], "metadata": {"file_path": "/workspaces/Relay/frontend/types/next-auth.d.ts", "file_name": "next-auth.d.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 655, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}, "5cba9c90-a222-4754-aafc-b4d9c1e4e222": {"node_ids": ["46812e78-79e3-44d4-afe3-4e2480b04fe0", "13a5f842-b0f6-406e-80a9-d22152367a9e"], "metadata": {"file_path": "/workspaces/Relay/frontend/vitest.config.ts", "file_name": "vitest.config.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 1230, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}}, "386e33d6-fed9-4f00-ab9f-efb79ae91901": {"node_ids": ["f4346692-9ee2-4b94-9a0e-285498218fe1"], "metadata": {"file_path": "/workspaces/Relay/frontend/vitest.shims.d.ts", "file_name": "vitest.shims.d.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 62, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}}}, "docstore/data": {"27e69706-33fd-45b3-a795-6ebf3def3b79": {"__data__": {"id_": "27e69706-33fd-45b3-a795-6ebf3def3b79", "embedding": null, "metadata": {"tier": "global", "file_path": "./docs/generated/global_context.md"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "797aba13-2e11-4cf4-960d-0db391fd0a49", "node_type": "4", "metadata": {"tier": "global", "file_path": "./docs/generated/global_context.md"}, "hash": "3e7d75dfba6da2e83e2697bab5efa476f9044021c2d63085e12c69d990567b8f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Global Project Context\n\nRelay uses this file as a sample manual context. Replace this text with your own project notes.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 121, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "23b63679-6896-4cbf-b232-58b707c82279": {"__data__": {"id_": "23b63679-6896-4cbf-b232-58b707c82279", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/docs/imported/relay_code_update_250603.md", "file_name": "relay_code_update_250603.md", "file_type": "text/markdown", "file_size": 1982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ea30b3c5-2f89-430a-b9bf-0fea0549f09c", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/docs/imported/relay_code_update_250603.md", "file_name": "relay_code_update_250603.md", "file_type": "text/markdown", "file_size": 1982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "hash": "7ce3a1c043382db07aad541011265d8fe49171134fc04cacc829dd22b9a4f370", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u2705 Relay Project Summary \u2013 Status as of Commit\n\ud83d\ude80 Frontend (Next.js + React)\npage.tsx\nServes as the homepage\u000b\nIncludes:\u000b\nAskAgent \u2013 GPT-powered interaction module\u000b\nSearchPanel \u2013 semantic search into synced docs\u000b\nLink to /docs route with DocsViewer\u000b\nSearchPanel.tsx\nPOSTs to /api/kb/search\u000b\nDisplays top-k semantic matches with:\u000b\ntitle\u000b\nsnippet\u000b\nsimilarity score\u000b\nDocsViewer.tsx\nFetches file list from /api/docs/list\u000b\nLoads content from /api/docs/view?path=...\u000b\nClean 2-panel layout for viewing Markdown files\u000b\nScrollable, responsive, and client-friendly\u000b\n\ud83e\udde0 Backend (FastAPI + LangChain)\nCore Routes\n/kb/search\nAccepts { query: string, k: int }\u000b\nReturns top-k cosine similarity matches from kb.sqlite3\u000b\n/docs/list, /docs/view\nLists and returns content of .md or .txt files in /docs\u000b\n/docs/sync\\_google\nTriggers sync from Google Drive \u2192 Markdown files under /docs/imported\u000b\n/check/env\\_keys\nScans services/ for os.getenv(...) calls\u000b\nVerifies existence in .env\u000b\nFlags missing, unused, or stale keys\u000b\n\ud83d\udcc1 Backend Modules\nservices/kb.py\nEmbeds .md docs using OpenAIEmbeddings\u000b\nStores chunks + vectors + metadata in SQLite\u000b\nUses cosine similarity to power semantic search\u000b\nStores title, last\\_updated, and embedding for each chunk\u000b\nservices/settings.py\nCentralized config loader\u000b\nCalls load\\_dotenv() at startup\u000b\nProvides assert\\_env(...) for safe env enforcement\u000b\nservices/google\\_docs\\_sync.py\nAuths with Google via OAuth\u000b\nLocates your Command\\_Center folder\u000b\nPulls .gdoc content \u2192 Markdown\u000b\nSaves to docs/imported/\\*.md\u000b\nRebuilt from scratch after Codespace reset\u000b\n\ud83e\udde0 AI Readiness\nLangChain + OpenAI fully integrated\u000b\ntext-embedding-3-small model powering embeddings\u000b\nGPT-4o agent available via /ask route\u000b\nModular structure ready for more agents or chain workflows\u000b\n\ud83e\udde9 Final Touches Before Commit\nAll code saved and updated\u000b\nFixed missing file (google\\_docs\\_sync.py)\u000b\nFully documented .env structure and validation\u000b\nReact panels: Search + DocsViewer operational", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1954, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ea63b984-7e07-46c6-9486-273ca9ac02f2": {"__data__": {"id_": "ea63b984-7e07-46c6-9486-273ca9ac02f2", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/docs/imported/relay_code_update_250605.md", "file_name": "relay_code_update_250605.md", "file_type": "text/markdown", "file_size": 2876, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f61fe174-8f3c-4004-ad1b-fd9aa755a3c5", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/docs/imported/relay_code_update_250605.md", "file_name": "relay_code_update_250605.md", "file_type": "text/markdown", "file_size": 2876, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "hash": "bf6a61832f11d80fcf5ed0595002a7d9980f851b20975fcf8c95aa10d73bdb67", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\u2705 Relay Project Summary \u2013 Updated (As of Today)\n\ud83d\ude80 Frontend (Next.js + React)\npage.tsx\n\u2705 GET /api/docs/list \u2192 returns `{ \"files\": [...] }`\n\ud83d\udd01 /docs/sync\\_google is deprecated \u2014 replaced by `/docs/sync` (returns `{ \"synced_docs\": [...] }`)\nAskAgent.tsx\n\u2705 Sends GET requests to /ask (CORS-safe, no preflight)\u000b\n\u2705 Displays GPT-4o output with loading state\u000b\n\u2705 Stripped headers to eliminate CORS preflight errors\u000b\n\u2705 Uses process.env.NEXT\\_PUBLIC\\_RELAY\\_KEY for dev logs only\u000b\nSearchPanel.tsx\n\u2705 POST /api/kb/search\u000b\n\u2705 Displays top-k semantic matches from FastAPI:\u000b\nTitle\u000b\nSnippet\u000b\nSimilarity score\u000b\n\u2705 Type-safe with KBResult\u000b\n\u2705 Includes enter key trigger and loading spinner\u000b\nDocsViewer.tsx\n\u2705 GET /api/docs/list\u000b\n\u2705 GET /api/docs/view?path=...\u000b\n\u2705 Two-panel native layout (left = file list, right = scrollable viewer)\u000b\n\u2705 Pulls from /docs/imported/ and /docs/generated/\u000b\n\ud83e\udde0 Backend (FastAPI + LangChain)\nCore Routes\n\ud83d\udd01 /docs/sync\\_google is deprecated \u2014 replaced by /docs/sync with better logging\n\ud83d\udcc1 Backend Modules\nservices/kb.py\n\u2705 Embeds docs using text-embedding-3-small\u000b\n\u2705 SQLite stores: path, chunks, cosine sim metadata\u000b\n\u2705 KB result scoring used in /api/kb/search\u000b\nservices/settings.py\n\u2705 .env loaded early via load\\_dotenv()\u000b\n\u2705 assert\\_env() enforces critical keys (OPENAI\\_API\\_KEY, etc.)\u000b\nservices/google\\_docs\\_sync.py\n\u2705 Uses run\\_console() for CLI OAuth\u000b\n\u2705 Pulls .gdoc from Command\\_Center/\u000b\n\u2705 Converts to Markdown, saved to /docs/imported/\\*.md\u000b\n\u26a0\ufe0f Requires token.json (manual upload to Railway)\u000b\nservices/agent.py\n\u2705 Handles GPT query routing, context building\u000b\n\u2705 read\\_source\\_files() now honors RELAY\\_PROJECT\\_ROOT \u2705\u000b\n\u2705 Logs missing folders, loads code/doc context dynamically\u000b\n\u2705 Queues patch suggestions via /control/queue\\_action\u000b\n\u2705 GPT answers: human-like, citation-aware, can trigger actions\u000b\n\ud83e\udde0 AI Integration\n\u2705 GPT-4o for natural language responses, summaries, patch generation\u000b\n\u2705 LangChain + OpenAI embeddings for search\u000b\n\u2705 .env includes:\u000b\nOPENAI\\_API\\_KEY\u000b\nAPI\\_KEY\u000b\nRELAY\\_PROJECT\\_ROOT=/app \u2705\u000b\n\ud83e\udde9 Project Infrastructure & Reliability\n\u2705 FastAPI runs on port 8080\u000b\n\u2705 CORS fully configured (wildfire + localhost + vercel) \u2705\u000b\n\u2705 /ask OPTIONS issue solved (wildcard + no custom headers) \u2705\u000b\n\u2705 All doc folders created at boot (/docs/imported, /docs/generated)\u000b\n\u2705 Canvas patch system live (tracked in Vercel + Railway)\u000b\n\u2705 .env.example documents required keys\u000b\n\u2705 API keys now redacted in logs\u000b\n\ud83d\udd27 Remaining TODOs\nAdd same env-root logic to read\\_docs() function\u000b\nReinstate X-API-Key support securely (via Vercel backend proxy or signed tokens)\u000b\nEnable patch approval UI in control panel\u000b\nOptionally add /status/version route for deploy traceability\u000b\nLet me know if you\u2019d like this saved to /docs/generated/relay\\_status.md or queued to /control/queue\\_action.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2756, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "30e788b1-3c31-4164-9d31-7906d7eb725d": {"__data__": {"id_": "30e788b1-3c31-4164-9d31-7906d7eb725d", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/docs/imported/relay_code_update_250606.md", "file_name": "relay_code_update_250606.md", "file_type": "text/markdown", "file_size": 3248, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d3bd1837-0208-40e5-aef6-7bcbda8709e3", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/docs/imported/relay_code_update_250606.md", "file_name": "relay_code_update_250606.md", "file_type": "text/markdown", "file_size": 3248, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "hash": "5b52224e0e38ac93f588583eedaa8f1d4195b8806c126eb0d30fb7e877716ffe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Relay Command Center \u2013 Version 1\nOverview\nRelay Command Center is a modular, full-stack AI-enabled backend and frontend platform designed to control, synchronize, and observe your solar-powered infrastructure, miner operations, and external documents via GPT-based interactions and automation.\nThis document summarizes Version 1 (V1) of the system, covering all features implemented across the project folder, including backend API, frontend controls, OAuth integration, and document synchronization logic.\n\u2705 Backend (FastAPI)\nCore API Endpoints\nGET / \u2013 Health check endpoint\nPOST /ask \u2013 GPT-4-powered agent Q&A endpoint (Relay Agent)\nPOST /control/queue\\_action \u2013 Allows the agent to propose and queue actions\nGET /status/summary \u2013 Provides system health/status insights\nPOST /docs/sync\\_google \u2013 Syncs Google Docs from COMMAND\\_CENTER folder and converts them to Markdown\nGET /docs/list \u2013 Lists all imported Markdown files\nGET /docs/view?path=... \u2013 Returns contents of a specific document\nGET /debug/env \u2013 Diagnostic endpoint to verify environment variable loading (like GOOGLE\\_CREDS\\_JSON)\nOAuth Flow\nGET /google/auth \u2013 Launches Google OAuth using credentials in GOOGLE\\_CREDS\\_JSON\nGET /google/callback \u2013 Finalizes OAuth and writes token.json to frontend/sync/token.json\nInfrastructure\nAuto-creates required folders (docs/imported, docs/generated)\nModular routing structure with ask, status, control, docs, oauth, debug\nCORS-enabled for frontend origins:\nhttps://relay.wildfireranch.us\nhttps://status.wildfireranch.us\nhttp://localhost:3000\n\u2705 Google Docs Sync\nEnvironment Variables\nGOOGLE\\_CREDS\\_JSON \u2013 base64-encoded client\\_secret.json\nGOOGLE\\_TOKEN\\_JSON \u2013 base64-encoded token.json after successful auth (optional, used for persistent access)\nSync Logic\nUses google-auth, googleapiclient, and markdownify\nPulls files from folder: COMMAND\\_CENTER in Google Drive\nConverts content to Markdown\nSaves as .md files in docs/imported\nToken-based auth is triggered automatically unless token.json is missing or invalid (then triggers browser flow)\n\u2705 Frontend (Next.js + React)\nDocs Viewer UI\nDisplays document list and contents\nTwo-panel layout: sidebar (doc list) and content viewer\nScrollable and responsive\nSync Button\n\ud83d\udd04 Sync Google Docs button in the UI\nTriggers POST to /docs/sync\\_google\nRefreshes doc list after completion\nHandles sync status and error feedback inline\n\ud83e\udde0 Intelligence\nGPT-backed agent available via /ask\nSupports knowledge base lookups across synced Markdown docs\nPreloaded with GOOGLE\\_CREDS\\_JSON and OPENAI\\_API\\_KEY\nSmart routing, debug logging, and error feedback\n\ud83e\uddea Developer Support\n.env-ready variable structure (with base64-encoded credentials)\n.env.local used for frontend local overrides (e.g. NEXT\\_PUBLIC\\_RELAY\\_KEY)\nSupports local testing and live Railway/Vercel deployment\n\ud83d\ude80 Deployment Targets\nBackend (FastAPI): Railway \u2013 https://relay.wildfireranch.us\nFrontend (Next.js): Vercel \u2013 https://status.wildfireranch.us\n\ud83c\udfc1 Version 1 Milestone Complete\nNext steps (future versions): frontend action queue, miner controls, agent decision visualizer, and token bootstrap tool.\nVersion: Relay Command Center V1\u000bDate: 2025-06-06\u000bLead: Bret Westwood\u000bBuilt with Echo \ud83d\udcac", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3194, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d26dc042-f346-4cc9-a1af-a83293d49354": {"__data__": {"id_": "d26dc042-f346-4cc9-a1af-a83293d49354", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/docs/imported/repository_overview_250606.md", "file_name": "repository_overview_250606.md", "file_type": "text/markdown", "file_size": 7775, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "39801f15-a124-4277-b181-306126e68bc6", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/docs/imported/repository_overview_250606.md", "file_name": "repository_overview_250606.md", "file_type": "text/markdown", "file_size": 7775, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "hash": "9b77ae6c057fddcaf1e16010a597439145e95233e75bd0204c8139865c64015e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ac1b0710-abe9-47f0-98bb-1c2c23769113", "node_type": "1", "metadata": {}, "hash": "79b5cd4371859b48b6216b9f6853b45e56d6a9dd95f1f046931b0cd577750c06", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "to newcomer\nJun 6\nWildfireRanch/Relay\nArchive\nShare\nExplain the codebase to a newcomer. What is the general structure, what are the important things to know, and what are some pointers for things to learn next?\nCopy\nRepository Overview\nThis project hosts \u201cRelay,\u201d a small FastAPI backend with a Next.js/React frontend. The repository structure is straightforward:\n/main.py \u2013 FastAPI application entry\n/routes/ \u2013 REST endpoints\n/services/ \u2013 Core backend logic\n/frontend/ \u2013 Next.js frontend\n/docs/ \u2013 Generated/Imported docs\n/data/ & /logs/ \u2013 Action queue and logging files\n/tests/ \u2013 (mostly empty) test placeholders\nBackend\nmain.py initializes FastAPI, loads environment variables, configures CORS and mounts the route modules:\n9 from dotenv import load\\_dotenv\n10 load\\_dotenv()\n...\n35 app.add\\_middleware(\n...\n49 app.include\\_router(ask.router)\n50 app.include\\_router(status.router)\n51 app.include\\_router(control.router)\n52 app.include\\_router(docs.router)\n53 app.include\\_router(oauth.router)\nServices\nservices/agent.py\nImplements the OpenAI-powered assistant. It determines if code/doc context is needed, can auto-generate docs, and queues new files through /control/queue\\_action.\nKey logic includes the system prompt and context gathering helpers:\n15 SYSTEM\\_PROMPT = \"\"\"\nYou are Relay...\n...\n30 def needs\\_code\\_context(query: str) -> bool:\n...\n41 async def answer(user_id: str, query: str, context: Optional[str] = None, stream: bool = False):\n...\n85 async def generate\\_doc\\_for\\_path(rel\\_path: str) -> str:\n...\n136 def read\\_source\\_files(roots=[\"services\"], exts=[\".py\", \".tsx\", \".ts\"]):\n...\n166 def read\\_docs(root=\"docs\", exts=[\".md\", \".txt\"]):\nservices/google\\_docs\\_sync.py\nHandles Google OAuth, downloads docs from a specified Drive folder, converts them to Markdown, and saves them under docs/imported:\n1 # File: services/google\\_docs\\_sync.py\n...\n31 def get\\_google\\_service():\n...\n138 def sync\\_google\\_docs() -> list:\n...\n152 if enabled:\n153 sync\\_google\\_docs()\nservices/kb.py\nEmbeds markdown docs into a SQLite-based vector database using LangChain to enable semantic search:\n11 DOCS\\_DIR = ROOT / \"docs\"\n...\n35 def embed\\_docs():\n...\n53 def cosine\\_similarity(v1, v2):\n...\n58 def search(query, k=4):\nOther helpers include logging (services/logs.py) and environment validation (services/settings.py).\nRoutes\nFastAPI endpoints live in routes/. Examples:\nroutes/ask.py \u2013 exposes /ask for user questions and /test\\_openai for verifying OpenAI access.\nroutes/control.py \u2013 provides endpoints for writing files, queuing actions, approving queued actions, and retrieving logs:\n14 def auth(key: str = Header(..., alias=\"X-API-Key\")):\n...\n45 @router.post(\"/write\\_file\")\n...\n69 @router.post(\"/queue\\_action\")\n...\n94 @router.post(\"/approve\\_action\")\n...\n134 @router.get(\"/list\\_log\")\nroutes/docs.py \u2013 manages document syncing and knowledge-base refreshing:\n31 @router.post(\"/update\\_context\")\n...\n58 @router.post(\"/sync\\_google\")\n63 @router.post(\"/sync\")\n74 @router.post(\"/refresh\\_kb\")\n85 @router.post(\"/full\\_sync\")\n98 @router.get(\"/list\")\n109 @router.get(\"/view\")\nFrontend\nThe frontend/ folder contains a Next.js app. The home page (src/app/page.tsx) links to Docs, Control, and Status pages and embeds several React components:\n3 import AskAgent from \"@/components/AskAgent/AskAgent\"\n...\n10 \n...\n23 \n...\n29 \n33 \nKey components include:\nAskAgent \u2013 simple form that queries /ask.\nActionQueuePanel \u2013 lists and approves queued actions by hitting /control/\\* endpoints.\nDocsViewer \u2013 displays Markdown files and allows manual Google Docs sync.\nSearchPanel \u2013 calls the /kb/search API.\nThe frontend also has minimal API routes under src/app/api/ that forward requests to the backend, allowing the Next.js app to act as a thin UI over the FastAPI service.\nData and Logging\nQueued actions are stored in data/pending\\_actions.json, and executed actions are logged to logs/actions.log. Basic session logs are written via services/logs.py. The docs directory (docs/) contains imported or generated documentation used by the knowledge base.\nGetting Started / Next Steps\nEnvironment Setup \u2013 ensure .env contains OPENAI\\_API\\_KEY, GOOGLE\\_CREDS\\_JSON, optional GOOGLE\\_TOKEN\\_JSON, and API\\_KEY.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 4195, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ac1b0710-abe9-47f0-98bb-1c2c23769113": {"__data__": {"id_": "ac1b0710-abe9-47f0-98bb-1c2c23769113", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/docs/imported/repository_overview_250606.md", "file_name": "repository_overview_250606.md", "file_type": "text/markdown", "file_size": 7775, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "39801f15-a124-4277-b181-306126e68bc6", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/docs/imported/repository_overview_250606.md", "file_name": "repository_overview_250606.md", "file_type": "text/markdown", "file_size": 7775, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "hash": "9b77ae6c057fddcaf1e16010a597439145e95233e75bd0204c8139865c64015e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d26dc042-f346-4cc9-a1af-a83293d49354", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/docs/imported/repository_overview_250606.md", "file_name": "repository_overview_250606.md", "file_type": "text/markdown", "file_size": 7775, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "hash": "06da32eb5dc24d6fa2f45a487eb800364146cc262b9c6206b79b5a65411702c0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ActionQueuePanel \u2013 lists and approves queued actions by hitting /control/\\* endpoints.\nDocsViewer \u2013 displays Markdown files and allows manual Google Docs sync.\nSearchPanel \u2013 calls the /kb/search API.\nThe frontend also has minimal API routes under src/app/api/ that forward requests to the backend, allowing the Next.js app to act as a thin UI over the FastAPI service.\nData and Logging\nQueued actions are stored in data/pending\\_actions.json, and executed actions are logged to logs/actions.log. Basic session logs are written via services/logs.py. The docs directory (docs/) contains imported or generated documentation used by the knowledge base.\nGetting Started / Next Steps\nEnvironment Setup \u2013 ensure .env contains OPENAI\\_API\\_KEY, GOOGLE\\_CREDS\\_JSON, optional GOOGLE\\_TOKEN\\_JSON, and API\\_KEY. main.py loads these via dotenv on startup.\nRunning Locally \u2013 start the backend (python main.py or uvicorn main:app) and the frontend (npm run dev within frontend/).\nDocs Sync and KB \u2013 explore services/google\\_docs\\_sync.py and the /docs routes to understand how Google Docs are pulled and embedded.\nAgent Logic \u2013 services/agent.py is central to how the assistant gathers context and answers questions; studying its helper functions is useful for extending functionality.\nTesting \u2013 the tests/ directory contains placeholders. Adding real tests (for routes, sync logic, etc.) would be a logical area for improvement.\nOverall, the project integrates OpenAI, Google Drive, and a simple knowledge base to provide a conversational assistant with access to synced documentation and the ability to queue file changes. The Next.js frontend offers a small dashboard for user interaction. Future work might include fleshing out tests, expanding route functionality, or enhancing the frontend.\ncan you put this in a pasteable document\nCopy\nBelow is a pasteable Markdown document summarizing the repository structure, components, and suggested next steps:\nRelay Repository Overview\nThis project contains a small FastAPI backend paired with a Next.js/React frontend. The layout is straightforward:\n/main.py \u2013 FastAPI application entry point\n/routes/ \u2013 REST API endpoints\n/services/ \u2013 Core backend logic\n/frontend/ \u2013 Next.js frontend\n/docs/ \u2013 Generated/imported documentation\n/data/ & /logs/ \u2013 Queued actions and logs\n/tests/ \u2013 Mostly empty placeholders\nBackend\nmain.py initializes FastAPI, loads environment variables, configures CORS, and registers route modules.\nKey Service Modules\nservices/agent.py \u2013 Implements the OpenAI\u2011powered assistant. Handles context gathering, question answering, and documentation generation.\nservices/google\\_docs\\_sync.py \u2013 Syncs documentation from a Google Drive folder and stores Markdown files under docs/imported.\nservices/kb.py \u2013 Embeds Markdown docs into a SQLite vector database for semantic search.\nOther helper modules manage logging and environment validation.\nRoutes\nroutes/ask.py \u2013 /ask endpoint and an OpenAI test route.\nroutes/control.py \u2013 Endpoints for writing files, queuing/approving actions, and retrieving logs.\nroutes/docs.py \u2013 Manages document syncing and knowledge-base refreshing.\nFrontend\nLocated in frontend/, the Next.js app serves a dashboard with components to interact with the backend:\nAskAgent \u2013 Form for querying /ask.\nActionQueuePanel \u2013 Approve queued actions via /control/\\*.\nDocsViewer \u2013 Display Markdown docs and sync with Google Docs.\nSearchPanel \u2013 Query the knowledge base.\nData and Logging\ndata/pending\\_actions.json \u2013 Stores queued actions.\nlogs/actions.log \u2013 Logs executed actions.\ndocs/ \u2013 Contains imported/generated docs used by the knowledge base.\nGetting Started\nEnvironment Variables \u2013 Ensure .env includes OPENAI\\_API\\_KEY, GOOGLE\\_CREDS\\_JSON, optional GOOGLE\\_TOKEN\\_JSON, and API\\_KEY.\nRun Locally \u2013 Start the backend (python main.py or uvicorn main:app) and the frontend (npm run dev inside frontend/).\nDocs & KB \u2013 Study services/google\\_docs\\_sync.py and the /docs routes to see how documentation is synced and indexed.\nAgent Logic \u2013 Review services/agent.py to understand how context is gathered and responses are generated.\nTesting \u2013 The tests/ directory is mostly empty. Adding real tests for routes and sync logic is a natural improvement.\nThis text can be copied directly into any document or note-taking tool.", "mimetype": "text/plain", "start_char_idx": 3394, "end_char_idx": 7681, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ec4ad0d8-a8b5-4c8f-b4c4-f3e4568c1d9c": {"__data__": {"id_": "ec4ad0d8-a8b5-4c8f-b4c4-f3e4568c1d9c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/docs/imported/test_placeholder.md", "file_name": "test_placeholder.md", "file_type": "text/markdown", "file_size": 0, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87f72c01-b0b4-434f-8f06-8e716260f95d", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/docs/imported/test_placeholder.md", "file_name": "test_placeholder.md", "file_type": "text/markdown", "file_size": 0, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "hash": "1cb29dee178fb60bcc32c28c95ff808c3ce99d3ab71497d61d566f824d5959cb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 0, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1814edb3-2d74-4861-b00c-45372ad3ce5b": {"__data__": {"id_": "1814edb3-2d74-4861-b00c-45372ad3ce5b", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/docs/imported/v1_documentation_250606.md", "file_name": "v1_documentation_250606.md", "file_type": "text/markdown", "file_size": 9879, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d3f6f51a-1c2d-4c7a-876e-c5c366357144", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/docs/imported/v1_documentation_250606.md", "file_name": "v1_documentation_250606.md", "file_type": "text/markdown", "file_size": 9879, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "hash": "de26647fa403314c49567b81ceb3336de652b06c35eb0c0eadb42d269c006033", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d0f907f7-732e-4a5d-aa89-146d6ec496cf", "node_type": "1", "metadata": {}, "hash": "b298ec73cfc8ec3f9d302c8f927345d8cd813f2c9719f85cab75cc872e0d97fc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "1. Functionality\nConversational AI Agent (/ask): Leverages GPT\u20114o to handle free\u2011form queries, cite sources, and suggest code patches based on context.\nSemantic Knowledge Base (/kb/search): Performs vector similarity searches over imported Markdown docs (Google\u2011synced or generated) using SQLite + LangChain embeddings.\nGoogle Docs Sync (/docs/sync): OAuth2\u2011powered flow that imports designated Drive documents into docs/imported, converting them to Markdown and refreshing the KB.\nDocumentation Browser (/docs/list, /docs/view): Lists available docs and serves their content for in\u2011app viewing.\nAction Queue & Patch Approval (/control/queue\\_action, /control/approve\\_action): Stages file writes or code modifications for developer review before applying changes.\nEnvironment Validator (/check/env\\_keys): Validates required environment variables at startup, preventing misconfigurations.\nDashboard UI: Next.js/React interface with panels:\nAskAgent \u2013 Chat interface for AI queries\nSearchPanel \u2013 KB lookup by keyword\nDocsViewer \u2013 Two\u2011pane Markdown viewer with sync trigger\nActionQueuePanel \u2013 Pending patches list and one\u2011click approval\n2. How to Use\nPrerequisites: Node.js, Python 3.12+, uvicorn, npm, and valid Google OAuth credentials.\nEnvironment Setup\u000bcp .env.example .env\n# Populate with:\n# OPENAI\\_API\\_KEY, API\\_KEY, GOOGLE\\_CREDS\\_JSON, (optional) GOOGLE\\_TOKEN\\_JSON\nInstall & Launch Services\u000b# Backend\npip install -r requirements.txt\nuvicorn main:app --reload --port 8080\n# Frontend\ncd frontend\nnpm install\nnpm run dev # runs on port 3000\nSync Documentation\nIn browser, go to http://localhost:8080/docs/sync\nAuthenticate via Google (first run)\nConfirm import: Markdown files appear under docs/imported.\nInteract\nAskAgent: Ask questions in Dashboard, view citations and suggestions.\nSearchPanel: Search KB for context or troubleshooting docs.\nDocsViewer: Navigate synced docs; click \u201cSync\u201d to refresh.\nActionQueuePanel: Review queued patches, click \u201cApprove\u201d to apply.\nDirect API Calls\u000bGET /ask?query=Your+question\nPOST /api/kb/search { query: string, k: number }\nPOST /control/queue\\_action { patch details }\nPOST /control/approve\\_action { action\\_id }\nPOST /docs/sync\nGET /docs/list\nGET /docs/view?path=imported/YourDoc.md\n3. Technical Details\nProject Structure\n/ # Root\n\u251c\u2500 main.py # FastAPI startup & route registration\n\u251c\u2500 routes/\n\u2502 \u251c\u2500 ask.py # /ask endpoint logic\n\u2502 \u251c\u2500 control.py # queue\\_action, approve\\_action\n\u2502 \u251c\u2500 docs.py # sync, list, view routes\n\u2502 \u2514\u2500 check.py # /check/env\\_keys\n\u251c\u2500 services/\n\u2502 \u251c\u2500 agent.py # GPT prompt composition & context loader\n\u2502 \u251c\u2500 kb.py # embedding & search utils\n\u2502 \u251c\u2500 google\\_docs\\_sync.py # OAuth flow & Drive MD conversion\n\u2502 \u2514\u2500 settings.py # Env var schema & loader\n\u251c\u2500 docs/\n\u2502 \u251c\u2500 imported/ # Google\u2011sync Markdown files\n\u2502 \u2514\u2500 generated/ # AI\u2011generated summaries\n\u251c\u2500 data/\n\u2502 \u2514\u2500 pending\\_actions.json # Queued patch state\n\u251c\u2500 logs/\n\u2502 \u2514\u2500 actions.log # Patch application history\n\u251c\u2500 frontend/\n\u2502 \u251c\u2500 src/app/page.tsx # Main Dashboard layout\n\u2502 \u251c\u2500 components/\n\u2502 \u2502 \u251c\u2500 AskAgent.tsx\n\u2502 \u2502 \u251c\u2500 SearchPanel.tsx\n\u2502 \u2502 \u251c\u2500 DocsViewer.tsx\n\u2502 \u2502 \u2514\u2500 ActionQueuePanel.tsx\n\u2502 \u2514\u2500 api/ # Next.js API proxy (optional)\n\u2514\u2500 tests/ # Unit/integration test stubs\nKey Code Highlights\nSYSTEM\\_PROMPT in services/agent.py: Central AI persona & context roles.\nContext Loaders: agent.read\\_source\\_files() reads code snippets; agent.read\\_docs() pulls Markdown docs.\nEmbeddings: kb.embed\\_doc() & kb.search() use OpenAI's embedding model, cache in SQLite DB.\nOAuth2 Flow: google\\_docs\\_sync.py uses InstalledAppFlow for local webserver auth, token persistence.\nPatch Workflow: data/pending\\_actions.json stores staged patch diffs; control.py applies approved diffs to disk.\n4.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3674, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d0f907f7-732e-4a5d-aa89-146d6ec496cf": {"__data__": {"id_": "d0f907f7-732e-4a5d-aa89-146d6ec496cf", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/docs/imported/v1_documentation_250606.md", "file_name": "v1_documentation_250606.md", "file_type": "text/markdown", "file_size": 9879, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d3f6f51a-1c2d-4c7a-876e-c5c366357144", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/docs/imported/v1_documentation_250606.md", "file_name": "v1_documentation_250606.md", "file_type": "text/markdown", "file_size": 9879, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "hash": "de26647fa403314c49567b81ceb3336de652b06c35eb0c0eadb42d269c006033", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1814edb3-2d74-4861-b00c-45372ad3ce5b", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/docs/imported/v1_documentation_250606.md", "file_name": "v1_documentation_250606.md", "file_type": "text/markdown", "file_size": 9879, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "hash": "20d13fa992f3048940516417926f446859e713a304de58b3cf8fee3009edacf9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "754f7be5-8ac2-49ab-a1d6-3b4b9f1b47d0", "node_type": "1", "metadata": {}, "hash": "3f7b84fec6e34c374f9d424c32c61d147f3c6859f20b5c02b79f482361e1f48c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Context Loaders: agent.read\\_source\\_files() reads code snippets; agent.read\\_docs() pulls Markdown docs.\nEmbeddings: kb.embed\\_doc() & kb.search() use OpenAI's embedding model, cache in SQLite DB.\nOAuth2 Flow: google\\_docs\\_sync.py uses InstalledAppFlow for local webserver auth, token persistence.\nPatch Workflow: data/pending\\_actions.json stores staged patch diffs; control.py applies approved diffs to disk.\n4. Actual Routes & Descriptions\nThese endpoints are loaded from current code:\nGET / \u2014 Sanity check (uptime, load balancer) (main.py)\nGET /ask \u2014 AI query interface (routes/ask.py)\nGET /check/env\\_keys \u2014 Env var validation (routes/check.py)\nPOST /docs/sync \u2014 Trigger Google Docs import (routes/docs.py)\nGET /docs/list \u2014 List available docs (routes/docs.py)\nGET /docs/view \u2014 Serve markdown content (routes/docs.py)\nPOST /control/queue\\_action \u2014 Stage file/patch write (routes/control.py)\nPOST /control/approve\\_action \u2014 Approve and apply staged action (routes/control.py)\nPOST /api/kb/search \u2014 Semantic search payload (routes/kb.py)\n5. Impact & Metrics (Placeholders)\nGoogle Docs Imported: \\_\\_ docs\nMarkdown Files: \\_\\_ files in docs/imported\nAPI Hits: /ask \\_\\_ calls, KB search \\_\\_ calls\nPatches Queued/Applied: \\_\\_ / \\_\\_\nAvg. Latency: /ask \\_\\_ ms, /api/kb/search \\_\\_ ms\nOnboarding Time: Setup from zero to running in \\_\\_ minutes\nFill in with real telemetry to quantify v1 success.\nEnd of Release Notes & Documentation for v1.\nV1 Relay Command Center \u2013 Release Notes & Documentation\n1. Functionality\nConversational AI Agent (/ask): Leverages GPT\u20114o to handle free\u2011form queries, cite sources, and suggest code patches based on context.\nSemantic Knowledge Base (/kb/search): Performs vector similarity searches over imported Markdown docs (Google\u2011synced or generated) using SQLite + LangChain embeddings.\nGoogle Docs Sync (/docs/sync): OAuth2\u2011powered flow that imports designated Drive documents into docs/imported, converting them to Markdown and refreshing the KB.\nDocumentation Browser (/docs/list, /docs/view): Lists available docs and serves their content for in\u2011app viewing.\nAction Queue & Patch Approval (/control/queue\\_action, /control/approve\\_action): Stages file writes or code modifications for developer review before applying changes.\nEnvironment Validator (/check/env\\_keys): Validates required environment variables at startup, preventing misconfigurations.\nDashboard UI: Next.js/React interface with panels:\nAskAgent \u2013 Chat interface for AI queries\nSearchPanel \u2013 KB lookup by keyword\nDocsViewer \u2013 Two\u2011pane Markdown viewer with sync trigger\nActionQueuePanel \u2013 Pending patches list and one\u2011click approval\n2. How to Use\nPrerequisites: Node.js, Python 3.12+, uvicorn, npm, and valid Google OAuth credentials.\nEnvironment Setup\ncp .env.example .env\n# Populate with:\n# OPENAI\\_API\\_KEY, API\\_KEY, GOOGLE\\_CREDS\\_JSON, (optional) GOOGLE\\_TOKEN\\_JSON\nInstall & Launch Services\n# Backend\npip install -r requirements.txt\nuvicorn main:app --reload --port 8080\n# Frontend\ncd frontend\nnpm install\nnpm run dev # runs on port 3000\nSync Documentation\nIn browser, go to http://localhost:8080/docs/sync\nAuthenticate via Google (first run)\nConfirm import: Markdown files appear under docs/imported.\nInteract\nAskAgent: Ask questions in Dashboard, view citations and suggestions.\nSearchPanel: Search KB for context or troubleshooting docs.\nDocsViewer: Navigate synced docs; click \u201cSync\u201d to refresh.\nActionQueuePanel: Review queued patches, click \u201cApprove\u201d to apply.\nDirect API Calls\nGET /ask?query=Your+question\nPOST /api/kb/search { query: string, k: number }\nPOST /control/queue\\_action { patch details }\nPOST /control/approve\\_action { action\\_id }\nPOST /docs/sync\nGET /docs/list\nGET /docs/view?path=imported/YourDoc.md\n3.", "mimetype": "text/plain", "start_char_idx": 3259, "end_char_idx": 6998, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "754f7be5-8ac2-49ab-a1d6-3b4b9f1b47d0": {"__data__": {"id_": "754f7be5-8ac2-49ab-a1d6-3b4b9f1b47d0", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/docs/imported/v1_documentation_250606.md", "file_name": "v1_documentation_250606.md", "file_type": "text/markdown", "file_size": 9879, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d3f6f51a-1c2d-4c7a-876e-c5c366357144", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/docs/imported/v1_documentation_250606.md", "file_name": "v1_documentation_250606.md", "file_type": "text/markdown", "file_size": 9879, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "hash": "de26647fa403314c49567b81ceb3336de652b06c35eb0c0eadb42d269c006033", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d0f907f7-732e-4a5d-aa89-146d6ec496cf", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/docs/imported/v1_documentation_250606.md", "file_name": "v1_documentation_250606.md", "file_type": "text/markdown", "file_size": 9879, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "hash": "32fbbdfe07b875f27ba3f6697a9378a3c0d24460c465405b31e5965042163678", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Interact\nAskAgent: Ask questions in Dashboard, view citations and suggestions.\nSearchPanel: Search KB for context or troubleshooting docs.\nDocsViewer: Navigate synced docs; click \u201cSync\u201d to refresh.\nActionQueuePanel: Review queued patches, click \u201cApprove\u201d to apply.\nDirect API Calls\nGET /ask?query=Your+question\nPOST /api/kb/search { query: string, k: number }\nPOST /control/queue\\_action { patch details }\nPOST /control/approve\\_action { action\\_id }\nPOST /docs/sync\nGET /docs/list\nGET /docs/view?path=imported/YourDoc.md\n3. Technical Details\nProject Structure\n/ # Root\n\u251c\u2500 main.py # FastAPI startup & route registration\n\u251c\u2500 routes/\n\u2502 \u251c\u2500 ask.py # /ask endpoint logic\n\u2502 \u251c\u2500 control.py # queue\\_action, approve\\_action\n\u2502 \u251c\u2500 docs.py # sync, list, view routes\n\u2502 \u2514\u2500 check.py # /check/env\\_keys\n\u251c\u2500 services/\n\u2502 \u251c\u2500 agent.py # GPT prompt composition & context loader\n\u2502 \u251c\u2500 kb.py # embedding & search utils\n\u2502 \u251c\u2500 google\\_docs\\_sync.py # OAuth flow & Drive MD conversion\n\u2502 \u2514\u2500 settings.py # Env var schema & loader\n\u251c\u2500 docs/\n\u2502 \u251c\u2500 imported/ # Google\u2011sync Markdown files\n\u2502 \u2514\u2500 generated/ # AI\u2011generated summaries\n\u251c\u2500 data/\n\u2502 \u2514\u2500 pending\\_actions.json # Queued patch state\n\u251c\u2500 logs/\n\u2502 \u2514\u2500 actions.log # Patch application history\n\u251c\u2500 frontend/\n\u2502 \u251c\u2500 src/app/page.tsx # Main Dashboard layout\n\u2502 \u251c\u2500 components/\n\u2502 \u2502 \u251c\u2500 AskAgent.tsx\n\u2502 \u2502 \u251c\u2500 SearchPanel.tsx\n\u2502 \u2502 \u251c\u2500 DocsViewer.tsx\n\u2502 \u2502 \u2514\u2500 ActionQueuePanel.tsx\n\u2502 \u2514\u2500 api/ # Next.js API proxy (optional)\n\u2514\u2500 tests/ # Unit/integration test stubs\nKey Code Highlights\nSYSTEM\\_PROMPT in services/agent.py: Central AI persona & context roles.\nContext Loaders: agent.read\\_source\\_files() reads code snippets; agent.read\\_docs() pulls Markdown docs.\nEmbeddings: kb.embed\\_doc() & kb.search() use OpenAI's embedding model, cache in SQLite DB.\nOAuth2 Flow: google\\_docs\\_sync.py uses InstalledAppFlow for local webserver auth, token persistence.\nPatch Workflow: data/pending\\_actions.json stores staged patch diffs; control.py applies approved diffs to disk.\n4. Actual Routes & Descriptions\nThese endpoints are loaded from current code:\nGET / \u2014 Sanity check (uptime, load balancer) (main.py)\nGET /ask \u2014 AI query interface (routes/ask.py)\nGET /check/env\\_keys \u2014 Env var validation (routes/check.py)\nPOST /docs/sync \u2014 Trigger Google Docs import (routes/docs.py)\nGET /docs/list \u2014 List available docs (routes/docs.py)\nGET /docs/view \u2014 Serve markdown content (routes/docs.py)\nPOST /control/queue\\_action \u2014 Stage file/patch write (routes/control.py)\nPOST /control/approve\\_action \u2014 Approve and apply staged action (routes/control.py)\nPOST /api/kb/search \u2014 Semantic search payload (routes/kb.py)\n5. Impact & Metrics (Placeholders)\nGoogle Docs Imported: \\_\\_ docs\nMarkdown Files: \\_\\_ files in docs/imported\nAPI Hits: /ask \\_\\_ calls, KB search \\_\\_ calls\nPatches Queued/Applied: \\_\\_ / \\_\\_\nAvg. Latency: /ask \\_\\_ ms, /api/kb/search \\_\\_ ms\nOnboarding Time: Setup from zero to running in \\_\\_ minutes\nFill in with real telemetry to quantify v1 success.\nEnd of Release Notes & Documentation for v1.", "mimetype": "text/plain", "start_char_idx": 6474, "end_char_idx": 9465, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7d6a9e9b-eee4-40aa-b112-a9e147476bf0": {"__data__": {"id_": "7d6a9e9b-eee4-40aa-b112-a9e147476bf0", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/docs/imported/\ud83d\udd27_google_docs_sync_integration.md", "file_name": "\ud83d\udd27_google_docs_sync_integration.md", "file_type": "text/markdown", "file_size": 3065, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6acab033-7a1e-4eac-ba7e-c73f12632c5f", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/docs/imported/\ud83d\udd27_google_docs_sync_integration.md", "file_name": "\ud83d\udd27_google_docs_sync_integration.md", "file_type": "text/markdown", "file_size": 3065, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "project_docs"}, "hash": "5f6b8098c058612717342ba8c733ee2c6e1ad1acf7c4d3116b9f2fe245697a15", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\ud83d\udd27 Google Docs Sync Integration\nPurpose: To synchronize Google Docs from a specific folder in Google Drive into your local application, converting them into Markdown files for further processing.\nKey Components:\nEnvironment Variables:\u000b\nGOOGLE\\_CREDS\\_JSON: Base64-encoded Google OAuth 2.0 credentials JSON.\u000b\nGOOGLE\\_TOKEN\\_JSON: Base64-encoded token JSON obtained after user authorization.\u000b\nFile Paths:\u000b\nCREDENTIALS\\_PATH: Path to store decoded credentials (/tmp/credentials.json).\u000b\nTOKEN\\_PATH: Path to store decoded token (frontend/sync/token.json).\u000b\nIMPORT\\_PATH: Directory to store imported Markdown files (docs/imported).\u000b\nFolder Configuration:\u000b\nCOMMAND\\_CENTER\\_FOLDER\\_NAME: Name of the folder in Google Drive to sync (COMMAND\\_CENTER).\u000b\nWorkflow:\nCredential Handling:\u000b\nCheck if CREDENTIALS\\_PATH exists. If not, decode GOOGLE\\_CREDS\\_JSON and write to this path.\u000b\nCheck if TOKEN\\_PATH exists. If not, decode GOOGLE\\_TOKEN\\_JSON (if available) and write to this path.\u000b\nAuthentication:\u000b\nIf TOKEN\\_PATH exists, load credentials from it.\u000b\nIf credentials are invalid or don't exist:\u000b\nInitiate OAuth flow using InstalledAppFlow.from\\_client\\_secrets\\_file.\u000b\nRun local server to obtain user authorization and generate new token.\u000b\nSave new token to TOKEN\\_PATH.\u000b\nGoogle Drive Interaction:\u000b\nBuild drive\\_service and docs\\_service using authenticated credentials.\u000b\nLocate the folder ID for COMMAND\\_CENTER\\_FOLDER\\_NAME.\u000b\nRetrieve all Google Docs within this folder.\u000b\nFor each document:\u000b\nFetch content using docs\\_service.\u000b\nConvert content to Markdown using markdownify.\u000b\nSave the Markdown file to IMPORT\\_PATH.\u000b\n\ud83d\udee0\ufe0f Error Handling and Debugging\nCommon Issues Encountered:\nMissing Environment Variables:\u000b\nError: \u274c Missing GOOGLE\\_CREDS\\_JSON in environment variables\u000b\nSolution: Ensure that GOOGLE\\_CREDS\\_JSON is correctly set in your environment.\u000b\nSyntax Errors:\u000b\nError: SyntaxError: 'return' outside function\u000b\nCause: Incorrect indentation or misplaced return statement.\u000b\nSolution: Ensure that all code blocks are properly indented and that return statements are within function scopes.\u000b\nAttribute Errors:\u000b\nError: AttributeError: 'InstalledAppFlow' object has no attribute 'run\\_console'\u000b\nCause: Incorrect method used for initiating OAuth flow.\u000b\nSolution: Use run\\_local\\_server(port=0) instead of run\\_console() for local development.\u000b\nOAuth Redirect URI Mismatch:\u000b\nError: Error 400: redirect\\_uri\\_mismatch\u000b\nCause: The redirect URI used in the application doesn't match any of the authorized redirect URIs in the Google Cloud Console.\u000b\nSolution:\u000b\nNavigate to Google Cloud Console Credentials page.\u000b\nSelect your OAuth 2.0 Client ID.\u000b\nIn the \"Authorized redirect URIs\" section, add the exact redirect URI used by your application (e.g., http://localhost:8080/).\u000b\nSave the changes.\u000b\n\ud83d\udd04 Full Sync Process\nEndpoint: POST /docs/full\\_sync\nFunctionality:\nInitiates the Google Docs synchronization process.\u000b\nEmbeds the synchronized Markdown documents into the knowledge base.\u000b\nLogs the synchronization activity for auditing and tracking purposes.serverfault.com", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 3051, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5da10481-f69f-40a7-b68a-658e2d020bd1": {"__data__": {"id_": "5da10481-f69f-40a7-b68a-658e2d020bd1", "embedding": null, "metadata": {"tier": "project_docs", "file_path": "./docs/readme.md"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "57b8f181-f93f-44f9-b0df-1bd2d7788afb", "node_type": "4", "metadata": {"tier": "project_docs", "file_path": "./docs/readme.md"}, "hash": "752a7591a4da7dcc25672ef6cbeff5c4a30b5b840b34b78eb7b315476f934c51", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 0, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0c597628-72ed-4e1c-94b6-671d769aba73": {"__data__": {"id_": "0c597628-72ed-4e1c-94b6-671d769aba73", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/_init_.py", "file_name": "_init_.py", "file_type": "text/x-python", "file_size": 98, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ac82c713-3dd8-4802-924d-15bfcb71c470", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/_init_.py", "file_name": "_init_.py", "file_type": "text/x-python", "file_size": 98, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "a48d43ad61ca267f3f0669f23729a7f88eca875b4ce9bd46fb23af93cbc107cc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: __init__.py\n# Directory: services/\n# Purpose: Marks this as a package for Python imports.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 97, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "40ce5bd2-34b6-4d86-9408-1d7c9206cb2d": {"__data__": {"id_": "40ce5bd2-34b6-4d86-9408-1d7c9206cb2d", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "4d3d6ea1a18d86069a383e27197f0346c8ffa24325746e9ba9469695b954ae04", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c4f6b8ed-3fa8-455f-b120-687e579c659c", "node_type": "1", "metadata": {}, "hash": "1767b426b17f1373f847db30b15aff58b154c649bc18074ed0ee17f6dcd4ad13", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: agent.py\r\n# Directory: services/\r\n# Purpose: Main Relay agent logic\u2014per-user, multi-turn, reflection, tools, OpenAI, and docgen\r\n\r\nimport os\r\nimport re\r\nimport json\r\nfrom pathlib import Path\r\nfrom typing import List, Dict, Any, Optional, AsyncGenerator\nfrom openai import AsyncOpenAI\nimport services.kb as kb\nimport httpx\nfrom services.context_engine import ContextEngine\nfrom utils.openai_client import create_openai_client\n\r\n# === Initialize OpenAI client ===\nclient = create_openai_client()\n\r\n# === Railway control endpoint for queueing actions/docs ===\nRAILWAY_KEY = os.getenv(\"API_KEY\")\nRAILWAY_URL = os.getenv(\"RAILWAY_URL\", \"https://relay.wildfireranch.us/control/queue_action\")\n\n# Optional reflection flag\nREFLECT_ENV = os.getenv(\"ENABLE_REFLECT_AND_PLAN\", \"false\").lower() in (\"1\", \"true\", \"yes\")\n\r\n# === System prompt to define Relay's identity and context awareness ===", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 888, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c4f6b8ed-3fa8-455f-b120-687e579c659c": {"__data__": {"id_": "c4f6b8ed-3fa8-455f-b120-687e579c659c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "4d3d6ea1a18d86069a383e27197f0346c8ffa24325746e9ba9469695b954ae04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "40ce5bd2-34b6-4d86-9408-1d7c9206cb2d", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "5cb4219d72ed23379d1a7684244f0d550f44b44397fb26990880892249b3d0e4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2cd8367f-7113-49a2-bb19-82d878011b50", "node_type": "1", "metadata": {}, "hash": "49e0fbb9b0c172cdd3afc7e91839267019e8f2faefb44f2ba57c5e38fa942370", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "SYSTEM_PROMPT = \"\"\"\r\nYou are Relay, the intelligent assistant for Bret's WildfireRanch pursuits including the solar shack project (solar powered bitcoin mining) and developing a business plan for a utility scale solar farm.\r\nYou have access to:\r\n\r\n- Python source code in /services/\r\n- React and Next.js components in /frontend/src/app/ and /frontend/src/components/\r\n- FastAPI routes in /routes/\r\n- A local knowledge base in /docs/\r\n\r\nUse file paths in citations when helpful (e.g. src/components/LogsPanel/LogsPanel.tsx).\r\nIf the user asks about code, structure, or documentation, include relevant context.\r\nYou can generate and queue new documentation entries by calling /control/queue_action.\r\n\"\"\"\r\n\r\n# === Helper: detect requests to autogenerate docs ===\r\ndef wants_docgen(query: str) -> Optional[str]:\r\n    match = re.search(r\"(?:generate|create|make).*doc.*for ([\\w/\\\\.]+\\.\\w+)\", query.lower())\r\n    return match.group(1).strip() if match else None\r\n\r\n# === In-memory store for multi-turn history (per user) ===", "mimetype": "text/plain", "start_char_idx": 890, "end_char_idx": 1908, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2cd8367f-7113-49a2-bb19-82d878011b50": {"__data__": {"id_": "2cd8367f-7113-49a2-bb19-82d878011b50", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "4d3d6ea1a18d86069a383e27197f0346c8ffa24325746e9ba9469695b954ae04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c4f6b8ed-3fa8-455f-b120-687e579c659c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "f33bd0c6b3ea7c0419f49231df69472372caaf190c9579a908f5c03eb1d91329", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c4b60711-b84d-491e-9895-f80443389aad", "node_type": "1", "metadata": {}, "hash": "486a023b90196b2e9f83f72928427f8bb025b3ec21a7b45ba89e92106b1960b8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "conversation_history: Dict[str, List[Dict[str, Any]]] = {}\r\n\r\n# === Tool dispatchers ===\r\nasync def search_docs(query: str, user_id: str) -> Dict[str, Any]:\r\n    hits = kb.search(query, user_id=user_id, k=5) if 'user_id' in kb.search.__code__.co_varnames else kb.search(query, k=5)\r\n    return {\"matches\": hits}\r\n\r\nasync def run_code_review(path: str) -> Dict[str, Any]:\r\n    base = Path(__file__).resolve().parents[1]\r\n    target = base / path\r\n    if not target.exists() or not target.is_file():\r\n        return {\"issues\": [{\"path\": path, \"error\": \"File not found\"}]}  \r\n    content = target.read_text()\r\n    return {\"issues\": [{\"path\": path, \"summary\": f\"File loaded, {len(content)} characters\"}]}  \r\n\r\n# === Reflection & plan generation ===", "mimetype": "text/plain", "start_char_idx": 1910, "end_char_idx": 2654, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c4b60711-b84d-491e-9895-f80443389aad": {"__data__": {"id_": "c4b60711-b84d-491e-9895-f80443389aad", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "4d3d6ea1a18d86069a383e27197f0346c8ffa24325746e9ba9469695b954ae04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2cd8367f-7113-49a2-bb19-82d878011b50", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "ea2661796005307c40c7f6179ee0226496f5e68ef74e742845c5936d1fe61f80", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8f1edbd7-009e-455c-a292-ae8eafc1358a", "node_type": "1", "metadata": {}, "hash": "1832ccebbf0120804f82959d489b9445f9c0d25b8ac428f732b73b455ad3e418", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async def reflect_and_plan(user_id: str, query: str) -> Dict[str, Any]:\r\n    messages = [\r\n        {\"role\": \"system\", \"content\": SYSTEM_PROMPT},\r\n        {\"role\": \"assistant\", \"content\": f\"Previous context:\\n{kb.get_recent_summaries(user_id)}\" if hasattr(kb, \"get_recent_summaries\") else \"\"},\r\n        {\"role\": \"user\", \"content\": f\"Reflect on this query for planning: {query}\"},\r\n    ]\r\n    response = await client.chat.completions.create(\r\n        model=\"gpt-4o\",\r\n        messages=messages,\r\n        temperature=0.0,\r\n        stream=False\r\n    )\r\n    try:\r\n        return json.loads(response.choices[0].message.content)\r\n    except json.JSONDecodeError:\r\n        return {\"plan\": []}\r\n\r\n# === Main answer function supporting multi-turn, tools, and reflection ===", "mimetype": "text/plain", "start_char_idx": 2656, "end_char_idx": 3419, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8f1edbd7-009e-455c-a292-ae8eafc1358a": {"__data__": {"id_": "8f1edbd7-009e-455c-a292-ae8eafc1358a", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "4d3d6ea1a18d86069a383e27197f0346c8ffa24325746e9ba9469695b954ae04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c4b60711-b84d-491e-9895-f80443389aad", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "acc760b7c24be7618678734cd400a78839a993599256b6d534a80be0f2f636c0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9cb09e0f-b234-4fe1-b497-cc756cf2d1c2", "node_type": "1", "metadata": {}, "hash": "f1974a334a0c273092da57390aeb0877dcdae77dacad62500d75c35fd83ba7a9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async def answer(\n    user_id: str,\n    query: str,\n    context: Optional[str] = None,\n    stream: bool = False,\n    reflect: Optional[bool] = None,\n) -> Any:", "mimetype": "text/plain", "start_char_idx": 3421, "end_char_idx": 3579, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9cb09e0f-b234-4fe1-b497-cc756cf2d1c2": {"__data__": {"id_": "9cb09e0f-b234-4fe1-b497-cc756cf2d1c2", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "4d3d6ea1a18d86069a383e27197f0346c8ffa24325746e9ba9469695b954ae04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8f1edbd7-009e-455c-a292-ae8eafc1358a", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "0ba3689c01e94856b86e37a569bae3aa8c4e2b9dddff31ae784df41b142ba40b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6fc3aca4-ce21-4a53-bcfc-03fb3b118543", "node_type": "1", "metadata": {}, "hash": "fb20a0748db0cfaabeee97bd2afcd4755222f729099bacc6a078174d92208f99", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"\"\"Main agent entry point.\n\n    Parameters\n    ----------\n    user_id: str\n        Unique user identifier used for history and KB.\n    query: str\n        Raw user question.\n    context: Optional[str]\n        Pre-built context window. If not supplied the ContextEngine will\n        generate one from the user's query.\n    stream: bool\n        If ``True`` yield tokens as they are produced by OpenAI.  Otherwise\n        return the complete assistant message as a string.\n    reflect: Optional[bool]\n        If ``True`` run ``reflect_and_plan`` before answering. Defaults to\n        ``ENABLE_REFLECT_AND_PLAN`` environment variable when ``None``.\n    \"\"\"\n\n    print(f\"[agent] Incoming query from {user_id}: {query}\")\n\n    # --- Check for doc generation ---\n    target_path = wants_docgen(query)\n    if target_path:\n        return await generate_doc_for_path(target_path)\n\n    # --- Build context if not provided ---", "mimetype": "text/plain", "start_char_idx": 3584, "end_char_idx": 4496, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6fc3aca4-ce21-4a53-bcfc-03fb3b118543": {"__data__": {"id_": "6fc3aca4-ce21-4a53-bcfc-03fb3b118543", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "4d3d6ea1a18d86069a383e27197f0346c8ffa24325746e9ba9469695b954ae04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9cb09e0f-b234-4fe1-b497-cc756cf2d1c2", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "78efd9c40a638bab9ab7869217fdc752dac938a8c88be20fda85dbc716e89196", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "114db0cf-3701-47cd-abce-2ae7e4da58dd", "node_type": "1", "metadata": {}, "hash": "42db46db08dcc65248f573c88e883ffb73d1835cac444d1cbd3cbcc6329b8a43", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if context is None:\n        engine = ContextEngine(user_id=user_id)\n        context = engine.build_context(query)\n    print(f\"[agent] Built context length: {len(context)} chars\")\n\r\n    # --- Reflection & planning (optional) ---\n    use_reflection = reflect if reflect is not None else REFLECT_ENV\n    if use_reflection:\n        plan = await reflect_and_plan(user_id, query)\n        print(f\"[agent] Reflection plan: {plan}\")\n    else:\n        plan = {\"plan\": []}\n\r\n    # --- Update conversation history ---\r\n    history = conversation_history.setdefault(user_id, [])\r\n    history.append({\"role\": \"user\", \"content\": query})\r\n    \r\n    # --- Compose messages with history and plan ---\r\n    messages: List[Dict[str, Any]] = [\r\n        {\"role\": \"system\", \"content\": SYSTEM_PROMPT},\r\n        {\"role\": \"system\", \"content\": f\"Context:\\n{context}\"},\r\n        {\"role\": \"assistant\", \"content\": f\"Plan: {json.dumps(plan)}\"},\r\n    ] + history", "mimetype": "text/plain", "start_char_idx": 4501, "end_char_idx": 5430, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "114db0cf-3701-47cd-abce-2ae7e4da58dd": {"__data__": {"id_": "114db0cf-3701-47cd-abce-2ae7e4da58dd", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "4d3d6ea1a18d86069a383e27197f0346c8ffa24325746e9ba9469695b954ae04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6fc3aca4-ce21-4a53-bcfc-03fb3b118543", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "152b56812b9a0e1572e2ce2281c37a31a76d7d7456089628ec960c42a56b96bb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "13219f08-7012-4292-94e4-520bed5de3ad", "node_type": "1", "metadata": {}, "hash": "96d9b32915b47159a3e1402702a4561cb7d5248a601c9c0ff1ee7f8c0828f9ce", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "try:", "mimetype": "text/plain", "start_char_idx": 3209, "end_char_idx": 3213, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "13219f08-7012-4292-94e4-520bed5de3ad": {"__data__": {"id_": "13219f08-7012-4292-94e4-520bed5de3ad", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "4d3d6ea1a18d86069a383e27197f0346c8ffa24325746e9ba9469695b954ae04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "114db0cf-3701-47cd-abce-2ae7e4da58dd", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "6fbf5d564a74013dad46fc1ee497a1ca592e22ddb93715c1051088fece5a16e8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2ebea36a-b12b-41b6-b050-8490c0f74edc", "node_type": "1", "metadata": {}, "hash": "20ec233cc09b62dafb1b6fbe570bb1e818eb4e7f0f9b467efffc8457659bf383", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "response = await client.chat.completions.create(\n            model=\"gpt-4o\",\n            messages=messages,\n            stream=stream,\n            temperature=0.3,\n            functions=[\n                {\n                    \"name\": \"search_docs\",\n                    \"description\": \"Search the local /docs/ for keywords\",\n                    \"parameters\": {\"type\": \"object\", \"properties\": {\"query\": {\"type\":\"string\"}, \"user_id\": {\"type\":\"string\"}}, \"required\":[\"query\",\"user_id\"]}\n                },\r\n                {\r\n                    \"name\": \"run_code_review\",\r\n                    \"description\": \"Run static analysis on a source file path\",\r\n                    \"parameters\": {\"type\":\"object\",\"properties\":{\"path\":{\"type\":\"string\"}},\"required\":[\"path\"]}\r\n                }\r\n            ],\r\n            function_call=\"auto\"\r\n        )", "mimetype": "text/plain", "start_char_idx": 5451, "end_char_idx": 6293, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2ebea36a-b12b-41b6-b050-8490c0f74edc": {"__data__": {"id_": "2ebea36a-b12b-41b6-b050-8490c0f74edc", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "4d3d6ea1a18d86069a383e27197f0346c8ffa24325746e9ba9469695b954ae04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "13219f08-7012-4292-94e4-520bed5de3ad", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "76aa80fa9e535c6260b3fc9b230130e3fd36a9bd8c89e99673ffdd764053b431", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6d424d43-5f0a-46b7-82ea-076a1aeb9dc0", "node_type": "1", "metadata": {}, "hash": "c7b3db0fa5757df5dd70690af11b3d34a663bea4a161f901c0c21dc36ded804c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if stream:\n            async def gen() -> AsyncGenerator[str, None]:\n                collected: List[str] = []\n                async for chunk in response:\n                    delta = chunk.choices[0].delta\n                    if delta and delta.content:\n                        collected.append(delta.content)\n                        yield delta.content\n                history.append({\"role\": \"assistant\", \"content\": \"\".join(collected)})\n\n            return gen()", "mimetype": "text/plain", "start_char_idx": 6303, "end_char_idx": 6768, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6d424d43-5f0a-46b7-82ea-076a1aeb9dc0": {"__data__": {"id_": "6d424d43-5f0a-46b7-82ea-076a1aeb9dc0", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "4d3d6ea1a18d86069a383e27197f0346c8ffa24325746e9ba9469695b954ae04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2ebea36a-b12b-41b6-b050-8490c0f74edc", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "da030bb8d37c05980acf4a9a8293249938d503217e4823bbeb24b702835f9ea8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "419f300b-3a50-4f55-9161-1880a0b0a7fd", "node_type": "1", "metadata": {}, "hash": "02a1306c1c20d26ea2323b916cff4619c7cc194bb6486f97e8ef8a45a42cbd24", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "else:\n            message = response.choices[0].message\n            if hasattr(message, \"function_call\") and message.function_call:\n                fname = message.function_call.name\n                fargs = json.loads(message.function_call.arguments)\n                if fname == \"search_docs\":\n                    result = await search_docs(**fargs)\n                elif fname == \"run_code_review\":\n                    result = await run_code_review(**fargs)\n                else:\n                    result = {\"error\": f\"Unknown function: {fname}\"}\n                return json.dumps(result)\n            else:\n                history.append({\"role\": \"assistant\", \"content\": message.content})\n                return message.content", "mimetype": "text/plain", "start_char_idx": 6777, "end_char_idx": 7507, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "419f300b-3a50-4f55-9161-1880a0b0a7fd": {"__data__": {"id_": "419f300b-3a50-4f55-9161-1880a0b0a7fd", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "4d3d6ea1a18d86069a383e27197f0346c8ffa24325746e9ba9469695b954ae04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6d424d43-5f0a-46b7-82ea-076a1aeb9dc0", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "f1b8a0c70da8b797da1d40755b00297f3290b725db384e89b2572311c5c9f726", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d5f1f8c9-2667-49ba-a0da-964a02416fe2", "node_type": "1", "metadata": {}, "hash": "21557af3b2f5fdea97f404ed31ac7e2981823dab60245903985da08ac9d8e0aa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "except Exception as e:\r\n        print(\"\u274c OpenAI call failed:\", str(e))\r\n        return f\"[error] OpenAI call failed. {str(e)}\"", "mimetype": "text/plain", "start_char_idx": 7514, "end_char_idx": 7640, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d5f1f8c9-2667-49ba-a0da-964a02416fe2": {"__data__": {"id_": "d5f1f8c9-2667-49ba-a0da-964a02416fe2", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "4d3d6ea1a18d86069a383e27197f0346c8ffa24325746e9ba9469695b954ae04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "419f300b-3a50-4f55-9161-1880a0b0a7fd", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "62fe8f0b0e65723ff14bed025e0823d91b54de38aa40505536fbfb2dd68da6f2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2b9f826b-400f-4ebe-9e90-97684736fc51", "node_type": "1", "metadata": {}, "hash": "0b444dd6bbb39a8c9aeecb43833b3a99d374e8a1942e59f31aaa68173754cece", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# === Generate and queue documentation for a specific source file ===", "mimetype": "text/plain", "start_char_idx": 7644, "end_char_idx": 7713, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2b9f826b-400f-4ebe-9e90-97684736fc51": {"__data__": {"id_": "2b9f826b-400f-4ebe-9e90-97684736fc51", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "4d3d6ea1a18d86069a383e27197f0346c8ffa24325746e9ba9469695b954ae04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d5f1f8c9-2667-49ba-a0da-964a02416fe2", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "02354442ecf0c1c9daf17f7f9d27fbd9df05c23251f5298a414cceb2160a150a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "be79bb02-46c2-4363-8093-3a7685cbb293", "node_type": "1", "metadata": {}, "hash": "53e990b82ea3a64050177b72a07efd6eaa48fb52bb71fbb6c9d5b5fe43fb17de", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async def generate_doc_for_path(rel_path: str) -> str:", "mimetype": "text/plain", "start_char_idx": 7715, "end_char_idx": 7769, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "be79bb02-46c2-4363-8093-3a7685cbb293": {"__data__": {"id_": "be79bb02-46c2-4363-8093-3a7685cbb293", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "4d3d6ea1a18d86069a383e27197f0346c8ffa24325746e9ba9469695b954ae04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2b9f826b-400f-4ebe-9e90-97684736fc51", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "0a1d8bc454067458e3e91f07d37b4469b18776f14f32def1b4cc58e7713ed4b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3b3795e1-9d3f-49ea-a702-64f0e117ab23", "node_type": "1", "metadata": {}, "hash": "a69128bc708b910a1b457ecfa9fe064a52cb647911f2235fc0b48010c7ec3531", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "base = Path(__file__).resolve().parents[1]\r\n    full_path = base / rel_path\r\n\r\n    if not full_path.exists():\r\n        return f\"[error] File not found: {rel_path}\"\r\n\r\n    content = full_path.read_text()\r\n    prompt = f\"\"\"\r\nYou are a helpful documentation bot. Read the following source file and write a useful Markdown documentation entry about what it is, what it does, and how it's used. Keep it concise and developer-friendly.\r\n\r\nFile: {rel_path}\r\n{content[:3000]}\r\n\"\"\"\r\n\r\n    response = await client.chat.completions.create(\r\n        model=\"gpt-4o\",\r\n        messages=[\r\n            {\"role\": \"system\", \"content\": SYSTEM_PROMPT},\r\n            {\"role\": \"user\", \"content\": prompt},\r\n        ],\r\n        stream=False,\r\n        temperature=0.3,\r\n    )\r\n\r\n    doc_markdown = response.choices[0].message.content\r\n    doc_path = f\"docs/generated/{rel_path.replace('/', '_').replace('.', '-')}.md\"\r\n\r\n    payload = {\r\n        \"type\": \"write_file\",\r\n        \"path\": doc_path,\r\n        \"content\": doc_markdown\r\n    }", "mimetype": "text/plain", "start_char_idx": 7775, "end_char_idx": 8784, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3b3795e1-9d3f-49ea-a702-64f0e117ab23": {"__data__": {"id_": "3b3795e1-9d3f-49ea-a702-64f0e117ab23", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "4d3d6ea1a18d86069a383e27197f0346c8ffa24325746e9ba9469695b954ae04", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "be79bb02-46c2-4363-8093-3a7685cbb293", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/agent.py", "file_name": "agent.py", "file_type": "text/x-python", "file_size": 9196, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "0065fdb380be206c937887215fed033e6e69772698ae66d98a3e81a2a2be75c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async with httpx.AsyncClient() as http_client:\r\n        res = await http_client.post(\r\n            RAILWAY_URL,\r\n            headers={\"X-API-Key\": RAILWAY_KEY},\r\n            json=payload\r\n        )\r\n        if res.status_code == 200:\r\n            return f\"\u2705 Documentation queued to: {doc_path}\"\r\n        else:\r\n            return f\"\u274c Failed to queue documentation: {res.status_code} {res.text}\"", "mimetype": "text/plain", "start_char_idx": 8792, "end_char_idx": 9186, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c2ed2874-083e-4fa3-963e-f940dbd81839": {"__data__": {"id_": "c2ed2874-083e-4fa3-963e-f940dbd81839", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/config.py", "file_name": "config.py", "file_type": "text/x-python", "file_size": 541, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed1858db-97a3-4ac2-92a9-f2fd3ea22f79", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/config.py", "file_name": "config.py", "file_type": "text/x-python", "file_size": 541, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "c6855dbbd3868364cdb60dae41ee98335b0eedd9729e4eede93fdf8c780503f8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import os\nfrom pathlib import Path\n\n# Use current working directory as fallback\nDEFAULT_PROJECT_ROOT = Path.cwd()\n\nENV_NAME = os.getenv(\"ENV\", \"dev\")\nMODEL_NAME = (\n    os.getenv(\"KB_EMBED_MODEL\")\n    or os.getenv(\"OPENAI_EMBED_MODEL\")\n    or \"text-embedding-3-large\"\n)\n\n# Safer defaults: allow override, but don't break in test/dev\nINDEX_ROOT = Path(os.getenv(\"INDEX_ROOT\", str(DEFAULT_PROJECT_ROOT / \"index\" / ENV_NAME)))\nINDEX_DIR = Path(os.getenv(\"INDEX_DIR\", str(INDEX_ROOT / MODEL_NAME)))\n\nINDEX_DIR.mkdir(parents=True, exist_ok=True)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 540, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6df38524-cf9f-45c4-8a89-1760007bdbfe": {"__data__": {"id_": "6df38524-cf9f-45c4-8a89-1760007bdbfe", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/context_engine.py", "file_name": "context_engine.py", "file_type": "text/x-python", "file_size": 864, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ae0b5d05-bcc4-4393-af58-3af2cf5bfc0a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/context_engine.py", "file_name": "context_engine.py", "file_type": "text/x-python", "file_size": 864, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "c55f17d46954f105e7b903ea52ce9a871857c8611a7b8936a29bf668370457b5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: services/context_engine.py\n# Purpose: Drop-in ContextEngine class for all context operations (build, clear cache, etc.)\n\nfrom services.context_injector import build_context\n\nclass ContextEngine:\n    \"\"\"\n    Facade for agent context building, cache clearing, and future extensions.\n    Call anywhere as ContextEngine.build(...) or ContextEngine.clear_cache().\n    \"\"\"\n\n    @staticmethod\n    async def build(\n        query: str, \n        files: list[str], \n        topics: list[str] = [], \n        debug: bool = False\n    ):\n        \"\"\"\n        Build multi-source context for agent prompts.\n        \"\"\"\n        return await build_context(query, files, topics, debug)\n\n    @staticmethod\n    def clear_cache():\n        \"\"\"\n        Placeholder for clearing context/semantic/graph/global caches.\n        Expand as needed for production.\n        \"\"\"\n        pass", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 863, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "147c2998-1fd5-41cb-adbf-cfcd5eb64337": {"__data__": {"id_": "147c2998-1fd5-41cb-adbf-cfcd5eb64337", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6fe458c5-7aad-411d-9466-39aafb0d4bb5", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "ebe2049a9d5f9ac6985deabc30e53aaf42ba4dd001d7fd74dde312e9927ba014", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aef21626-8a1f-4f03-86f8-e61a6ae1edb4", "node_type": "1", "metadata": {}, "hash": "722bbe6d9ac254d91c3ab94f45ab5bfe03bbf6579b5ae5ceedab19a97d96ea95", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: services/context_injector.py\n# Purpose: Build optimal multi-source context blocks for agent prompts (code, docs, external topics, global context, knowledge base, and graph memory), \n#           leveraging LlamaIndex for semantic search and aggressive filtering.\n# Updated: 2025-07-02\n\nimport os\nfrom pathlib import Path\nfrom typing import List, Dict, Any, Union\n\nfrom services.semantic_retriever import get_semantic_context      # LlamaIndex semantic search\nfrom services.kb import query_index                              # Legacy KB (for optional hybrid)\nfrom services.graph import summarize_recent_context              # Graph-based memory (optional)\nfrom services.summarize_memory import summarize_memory_entry     # For summarizing recent memory, optional\n\n# === Section limits/config ===\nMAX_PROJECT_SUMMARY_CHARS = 2000\nMAX_SEMANTIC_CONTEXT_CHARS = 6000\nMAX_GRAPH_MEMORY_CHARS = 1500\nMAX_EXTERNAL_CONTEXT_CHARS = 1500\nMAX_GLOBAL_CONTEXT_CHARS = 2000", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 964, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aef21626-8a1f-4f03-86f8-e61a6ae1edb4": {"__data__": {"id_": "aef21626-8a1f-4f03-86f8-e61a6ae1edb4", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6fe458c5-7aad-411d-9466-39aafb0d4bb5", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "ebe2049a9d5f9ac6985deabc30e53aaf42ba4dd001d7fd74dde312e9927ba014", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "147c2998-1fd5-41cb-adbf-cfcd5eb64337", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8b482d1ff813a4fb0693d0502701b6598ac28af514f2a6eca2b7a03191816754", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5ac3d53d-f1f7-4a17-a4df-3e8f8cc66326", "node_type": "1", "metadata": {}, "hash": "ef06de3c13287980cf8c1d2ddb894c22184e0caec22c52bc4b1665f699ae99bc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def safe_truncate(text: str, max_chars: int) -> str:\n    \"\"\"Truncates text safely, appends ellipsis if needed.\"\"\"\n    if not text: return \"\"\n    if len(text) <= max_chars: return text\n    return text[:max_chars] + \"\\n...[truncated]\"\n\n# === Load Project Summary ===\ndef load_summary(summary_file: str = \"./docs/PROJECT_SUMMARY.md\") -> str:\n    \"\"\"Loads and safely truncates the project summary file.\"\"\"\n    if os.path.exists(summary_file):\n        with open(summary_file, \"r\", encoding=\"utf-8\") as f:\n            return safe_truncate(f.read(), MAX_PROJECT_SUMMARY_CHARS)\n    return \"Project summary not available.\"\n\n# === Load Global Context ===\ndef load_global_context(path: str = \"./docs/generated/global_context.md\") -> str:\n    \"\"\"Loads and safely truncates global project context file.\"\"\"\n    if Path(path).exists():\n        with open(path, \"r\", encoding=\"utf-8\") as f:\n            return safe_truncate(f.read(), MAX_GLOBAL_CONTEXT_CHARS)\n    return \"Global project context not available.\"", "mimetype": "text/plain", "start_char_idx": 966, "end_char_idx": 1959, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5ac3d53d-f1f7-4a17-a4df-3e8f8cc66326": {"__data__": {"id_": "5ac3d53d-f1f7-4a17-a4df-3e8f8cc66326", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6fe458c5-7aad-411d-9466-39aafb0d4bb5", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "ebe2049a9d5f9ac6985deabc30e53aaf42ba4dd001d7fd74dde312e9927ba014", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aef21626-8a1f-4f03-86f8-e61a6ae1edb4", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "0bd489c7b7192ba755751aa2b63051c619adb2f9b2c34b7a30b387105dee7f4c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5d9ac41-81c1-4afe-aa0c-aca6ebd73943", "node_type": "1", "metadata": {}, "hash": "c6608f92f37988d5310bbc0bd5076675cc26fd60ddbc8d9e040dbaa290a0ed1f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# === Load Markdown snippets from /context/<topic>.md files ===\ndef load_context(topics: List[str], base_dir: str = \"./context/\") -> str:\n    \"\"\"Loads and concatenates markdown for each requested topic.\"\"\"\n    chunks = []\n    for topic in topics:\n        path = Path(base_dir) / f\"{topic}.md\"\n        if path.exists():\n            with open(path, \"r\", encoding=\"utf-8\") as f:\n                content = f.read()\n                chunks.append(f\"\\n# {topic.title()}\\n{safe_truncate(content, MAX_EXTERNAL_CONTEXT_CHARS)}\")\n    return \"\\n\".join(chunks) if chunks else \"No external context available.\"\n\n# === Recent Memory Summaries (optional, using your summarizer) ===", "mimetype": "text/plain", "start_char_idx": 1961, "end_char_idx": 2625, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e5d9ac41-81c1-4afe-aa0c-aca6ebd73943": {"__data__": {"id_": "e5d9ac41-81c1-4afe-aa0c-aca6ebd73943", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6fe458c5-7aad-411d-9466-39aafb0d4bb5", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "ebe2049a9d5f9ac6985deabc30e53aaf42ba4dd001d7fd74dde312e9927ba014", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5ac3d53d-f1f7-4a17-a4df-3e8f8cc66326", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "6b2a913394ce0cd08e3deb2c5fa0c6bf06d70615eb450ed4eded8ca073dc53be", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4f378656-99c3-4e3c-b1aa-d810d261764a", "node_type": "1", "metadata": {}, "hash": "85bc811322feae8feb2056e66a3a91af60d58a9298fbea179f44f85d61ec8f8f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async def build_recent_memory_summaries(entries: List[Dict[str, str]], max_entries: int = 5) -> str:\n    \"\"\"Summarizes recent user/agent memory entries.\"\"\"\n    if not entries: return \"No recent memory summaries.\"\n    summaries = []\n    for e in entries[-max_entries:]:\n        try:\n            summary = await summarize_memory_entry(e.get(\"question\", \"\"), e.get(\"response\", \"\"), e.get(\"context\", \"\"))\n            summaries.append(f\"- {summary}\")\n        except Exception as ex:\n            summaries.append(f\"- [Summary failed: {str(ex)}]\")\n    return \"\\n\".join(summaries)\n\n# === MAIN CONTEXT BUILDER ===", "mimetype": "text/plain", "start_char_idx": 2626, "end_char_idx": 3230, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4f378656-99c3-4e3c-b1aa-d810d261764a": {"__data__": {"id_": "4f378656-99c3-4e3c-b1aa-d810d261764a", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6fe458c5-7aad-411d-9466-39aafb0d4bb5", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "ebe2049a9d5f9ac6985deabc30e53aaf42ba4dd001d7fd74dde312e9927ba014", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e5d9ac41-81c1-4afe-aa0c-aca6ebd73943", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "7333729953da8db25af1edf7b7e33c24e12c4b3d2ff2a062cff57905ef2f8575", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7e117f99-829d-4515-9302-c7e0d93544c7", "node_type": "1", "metadata": {}, "hash": "3d759183570e51f1fc6e76c0290440c0fd6c74e764df25b40275b792c8e65cb4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async def build_context(\n    query: str,\n    files: List[str] = [],\n    topics: List[str] = [],\n    debug: bool = False,\n    top_k_semantic: int = 6,\n    memory_entries: List[Dict[str, str]] = None,  # Optionally pass recent memory\n) -> Union[str, Dict[str, Any]]:", "mimetype": "text/plain", "start_char_idx": 3231, "end_char_idx": 3495, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7e117f99-829d-4515-9302-c7e0d93544c7": {"__data__": {"id_": "7e117f99-829d-4515-9302-c7e0d93544c7", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6fe458c5-7aad-411d-9466-39aafb0d4bb5", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "ebe2049a9d5f9ac6985deabc30e53aaf42ba4dd001d7fd74dde312e9927ba014", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4f378656-99c3-4e3c-b1aa-d810d261764a", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8b09eb151e8998845307231f30950a585791246cd4aa65659d946bb585df678e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "956e0b3e-41bc-4446-b458-60157250eda2", "node_type": "1", "metadata": {}, "hash": "850a38db980e18ef75e0d5f2a8c251ce49396e8d421997f362b4aedcb7529200", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"\"\"\n    Builds a multi-layered markdown context block for agent prompts:\n      - Project summary\n      - LlamaIndex-powered semantic retrieval (best chunks from code/docs)\n      - External project context (topics)\n      - Global context\n      - (Optionally) summarized graph memory\n      - (Optionally) recent memory summaries\n\n    Returns full context string, or dict with metadata if debug=True.\n    \"\"\"\n    files_used: List[Dict[str, Any]] = []\n\n    # === 1. Project Summary ===\n    project_summary = load_summary()\n    if \"not available\" not in project_summary:\n        files_used.append({\"type\": \"summary\", \"source\": \"docs/PROJECT_SUMMARY.md\"})\n\n    # === 2. Semantic Retrieval (LlamaIndex) ===\n    semantic_context = get_semantic_context(query, top_k=top_k_semantic)\n    semantic_context = safe_truncate(semantic_context, MAX_SEMANTIC_CONTEXT_CHARS)\n    files_used.append({\"type\": \"semantic\", \"desc\": f\"LlamaIndex top-{top_k_semantic} semantic retrieval\"})\n\n    # === 3. External Topic Context ===", "mimetype": "text/plain", "start_char_idx": 3500, "end_char_idx": 4503, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "956e0b3e-41bc-4446-b458-60157250eda2": {"__data__": {"id_": "956e0b3e-41bc-4446-b458-60157250eda2", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6fe458c5-7aad-411d-9466-39aafb0d4bb5", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "ebe2049a9d5f9ac6985deabc30e53aaf42ba4dd001d7fd74dde312e9927ba014", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e117f99-829d-4515-9302-c7e0d93544c7", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8ade057c9663573a5e3b9350dc9447e234cfab44d036bf5ca473d24af82e5a9c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8557e129-d78c-40b2-9085-685b7bba6f36", "node_type": "1", "metadata": {}, "hash": "97e939855d102afae22196745a524866dcd7cf635fa31e2804ce9d66977c1775", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "external_context = load_context(topics)\n    if external_context.strip() and external_context != \"No external context available.\":\n        for topic in topics:\n            files_used.append({\"type\": \"external\", \"source\": f\"context/{topic}.md\"})\n\n    # === 4. Global Project Context ===\n    global_context = load_global_context()\n    if \"not available\" not in global_context:\n        files_used.append({\"type\": \"global\", \"source\": \"docs/generated/global_context.md\"})\n\n    # === 5. Graph Memory Context (summarized) ===\n    try:\n        graph_context = await summarize_recent_context(query)\n        graph_context = safe_truncate(graph_context, MAX_GRAPH_MEMORY_CHARS)\n        if graph_context.strip() and \"No graph memory matches\" not in graph_context:\n            files_used.append({\"type\": \"graph\", \"source\": \"neo4j\"})\n    except Exception as ex:\n        graph_context = f\"[Graph memory error: {str(ex)}]\"\n\n    # === 6. Recent Memory Summaries (optional) ===\n    memory_summaries = \"\"", "mimetype": "text/plain", "start_char_idx": 4508, "end_char_idx": 5492, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8557e129-d78c-40b2-9085-685b7bba6f36": {"__data__": {"id_": "8557e129-d78c-40b2-9085-685b7bba6f36", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6fe458c5-7aad-411d-9466-39aafb0d4bb5", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "ebe2049a9d5f9ac6985deabc30e53aaf42ba4dd001d7fd74dde312e9927ba014", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "956e0b3e-41bc-4446-b458-60157250eda2", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "c24cd3fbcfecb484ab44c85e89e4bc35c1f8027686faa8bf566cbd56586d5949", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ba26ae73-3fef-4874-a708-8043e6d42b97", "node_type": "1", "metadata": {}, "hash": "c47c4480e2ceafdfee58656bdc17c03ee759e9c7f308fc1fca6146bf89751d20", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if memory_entries:\n        try:\n            memory_summaries = await build_recent_memory_summaries(memory_entries)\n        except Exception as ex:\n            memory_summaries = f\"[Memory summary error: {str(ex)}]\"\n\n    # === Assemble final context block ===\n    full_context = f\"\"\"\n## \ud83e\udde0 Project Summary:\n{project_summary}\n\n## \ud83e\udd99 Semantic Retrieval (Top Matches):\n{semantic_context}\n\n## \ud83c\udf0d External Project Context:\n{external_context}\n\n## \ud83c\udf10 Global Project Context:\n{global_context}\n\n## \ud83e\udde0 Graph Memory Summary:\n{graph_context}\n\n## \ud83d\udcdd Recent Memory Summaries:\n{memory_summaries}\n\"\"\".strip()\n\n    # === Logging for debugging ===\n    print(f\"[CTX] Length: {len(full_context)} chars | Files used: {files_used}\")\n    if len(full_context) > 12000:\n        print(\"[CTX] WARNING: Full context exceeds 12k chars, consider increasing truncation/aggressive filtering.\")", "mimetype": "text/plain", "start_char_idx": 5497, "end_char_idx": 6351, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ba26ae73-3fef-4874-a708-8043e6d42b97": {"__data__": {"id_": "ba26ae73-3fef-4874-a708-8043e6d42b97", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6fe458c5-7aad-411d-9466-39aafb0d4bb5", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "ebe2049a9d5f9ac6985deabc30e53aaf42ba4dd001d7fd74dde312e9927ba014", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8557e129-d78c-40b2-9085-685b7bba6f36", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/context_injector.py", "file_name": "context_injector.py", "file_type": "text/x-python", "file_size": 6823, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "157a4ad7fb95c13ba876655da17d0253e2614ea69dde4e2a92ff69fe64d63819", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if debug:\n        return {\n            \"context\": full_context,\n            \"files_used\": files_used,\n            \"sections\": {\n                \"summary\": project_summary,\n                \"semantic\": semantic_context,\n                \"external\": external_context,\n                \"global\": global_context,\n                \"graph\": graph_context,\n                \"memory_summaries\": memory_summaries\n            }\n        }\n\n    return full_context", "mimetype": "text/plain", "start_char_idx": 6357, "end_char_idx": 6804, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cfbfb3ac-109c-4cd6-824b-f5ff36ad8d9f": {"__data__": {"id_": "cfbfb3ac-109c-4cd6-824b-f5ff36ad8d9f", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/delete_embeddings.py", "file_name": "delete_embeddings.py", "file_type": "text/x-python", "file_size": 2361, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3788a83f-8d6b-4231-ab7d-e18b12747e7e", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/delete_embeddings.py", "file_name": "delete_embeddings.py", "file_type": "text/x-python", "file_size": 2361, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "532315c2256591c4311118b9ba675990dc3e628f054bb92b70a70369b381192d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c2995ace-d1d8-48ea-adb5-4eb3b660b4b4", "node_type": "1", "metadata": {}, "hash": "cbbec06520921c1f62f68db9cc84110936df17a8ff7fbbe10977cae1818e9ac2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# services/embeddings.py\n\n\"\"\"\nRelay Embeddings Service\n-----------------------------------\n- Indexes project docs and code with OpenAI embeddings.\n- Supports semantic search for agent context, docs, and Q&A.\n- Simple CLI: build index, search index.\n\"\"\"\n\nimport os\nimport openai\nimport numpy as np\nimport pickle\n\n# Config (tweak paths/extensions as needed for your codebase)\nSEARCH_DIRS = [\"./docs\", \"./core\", \"./agents\", \"./services\"]\nEXTS = [\".md\", \".py\", \".ts\", \".tsx\"]\nEMBED_MODEL = \"text-embedding-3-small\"\nEMBED_INDEX = \"file_embeddings.pkl\"\n\nopenai.api_key = os.environ.get(\"OPENAI_API_KEY\")\n\ndef iter_files():\n    for root in SEARCH_DIRS:\n        for dirpath, _, filenames in os.walk(root):\n            for fname in filenames:\n                if any(fname.endswith(ext) for ext in EXTS):\n                    yield os.path.join(dirpath, fname)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 849, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c2995ace-d1d8-48ea-adb5-4eb3b660b4b4": {"__data__": {"id_": "c2995ace-d1d8-48ea-adb5-4eb3b660b4b4", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/delete_embeddings.py", "file_name": "delete_embeddings.py", "file_type": "text/x-python", "file_size": 2361, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3788a83f-8d6b-4231-ab7d-e18b12747e7e", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/delete_embeddings.py", "file_name": "delete_embeddings.py", "file_type": "text/x-python", "file_size": 2361, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "532315c2256591c4311118b9ba675990dc3e628f054bb92b70a70369b381192d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cfbfb3ac-109c-4cd6-824b-f5ff36ad8d9f", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/delete_embeddings.py", "file_name": "delete_embeddings.py", "file_type": "text/x-python", "file_size": 2361, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "291168d54c55e064596f67945918f534e55a30b858925832fe519c06d0d98ce0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d05dc8e2-8bc9-4211-b6f1-ed35f470b613", "node_type": "1", "metadata": {}, "hash": "f6a75bb686647940a1ef39f0a7435f28fe890ef33e77b287a8bfb31bb86dc813", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def embed_text(text):\n    \"\"\"Get OpenAI embedding for input text.\"\"\"\n    resp = openai.embeddings.create(input=text, model=EMBED_MODEL)\n    return np.array(resp.data[0].embedding)\n\ndef build_index():\n    \"\"\"Build and save the file embedding index.\"\"\"\n    index = []\n    for fpath in iter_files():\n        with open(fpath, encoding=\"utf-8\", errors=\"ignore\") as f:\n            text = f.read()[:8000]  # Truncate for OpenAI limit\n        emb = embed_text(text)\n        index.append({\n            \"file\": fpath,\n            \"embedding\": emb,\n            \"snippet\": text[:400]  # Preview for UI/context\n        })\n        print(f\"Indexed: {fpath}\")\n    with open(EMBED_INDEX, \"wb\") as out:\n        pickle.dump(index, out)\n    print(f\"Embedding index saved to {EMBED_INDEX}\")", "mimetype": "text/plain", "start_char_idx": 851, "end_char_idx": 1620, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d05dc8e2-8bc9-4211-b6f1-ed35f470b613": {"__data__": {"id_": "d05dc8e2-8bc9-4211-b6f1-ed35f470b613", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/delete_embeddings.py", "file_name": "delete_embeddings.py", "file_type": "text/x-python", "file_size": 2361, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3788a83f-8d6b-4231-ab7d-e18b12747e7e", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/delete_embeddings.py", "file_name": "delete_embeddings.py", "file_type": "text/x-python", "file_size": 2361, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "532315c2256591c4311118b9ba675990dc3e628f054bb92b70a70369b381192d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c2995ace-d1d8-48ea-adb5-4eb3b660b4b4", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/delete_embeddings.py", "file_name": "delete_embeddings.py", "file_type": "text/x-python", "file_size": 2361, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "21fe7adaed0b0974641d17bc0adf9c4f7eae3c753332d1891c33737efb88d047", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def search_index(query, top_k=5):\n    \"\"\"Return top_k most relevant files/snippets for a query.\"\"\"\n    with open(EMBED_INDEX, \"rb\") as f:\n        index = pickle.load(f)\n    q_emb = embed_text(query)\n    scores = []\n    for doc in index:\n        sim = np.dot(q_emb, doc[\"embedding\"])\n        scores.append((sim, doc))\n    scores.sort(reverse=True, key=lambda x: x[0])\n    return [doc for _, doc in scores[:top_k]]\n\nif __name__ == \"__main__\":\n    import sys\n    if len(sys.argv) > 1 and sys.argv[1] == \"search\":\n        query = \" \".join(sys.argv[2:]) or \"relay agent context\"\n        results = search_index(query)\n        for doc in results:\n            print(f\"{doc['file']}\\n---\\n{doc['snippet'][:200]}\\n\")\n    else:\n        build_index()", "mimetype": "text/plain", "start_char_idx": 1622, "end_char_idx": 2360, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6f52782e-68ae-48b9-848e-bdb1199136a5": {"__data__": {"id_": "6f52782e-68ae-48b9-848e-bdb1199136a5", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/docs_utils.py", "file_name": "docs_utils.py", "file_type": "text/x-python", "file_size": 4321, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b12a0c1d-1251-4686-8db4-b544b86ebaec", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/docs_utils.py", "file_name": "docs_utils.py", "file_type": "text/x-python", "file_size": 4321, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "088459d5435df74b28a5bdc91a43ddbaf3a56c2628e4819c36d57372719a8bb1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "25081a75-f83f-4503-853a-b1e53422fbe8", "node_type": "1", "metadata": {}, "hash": "8b4d0c2d814d14e7980a88ddc878dbfa630898384109eeaf276336e0be4f9240", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n# File: docs_utils.py\n# Directory: services/\n# Purpose : Support utilities for Relay doc tiering\n#           \u2022 Extract doc_id from file\n#           \u2022 Build registry of all docs grouped by ID\n#           \u2022 Determine which file version is canonical\n# \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\nimport re\nfrom collections import defaultdict\nfrom pathlib import Path\nfrom typing import Dict, List\n\n# \u2500\u2500\u2500 Constants \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nPROJECT_ROOT = Path(__file__).resolve().parents[1]\nBASE_DIR = PROJECT_ROOT / \"docs\"\nDOC_FOLDERS = [\"\", \"imported\", \"generated\"]  # relative to /docs/\n\n# \u2500\u2500\u2500 Extract doc_id from YAML frontmatter or filename \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 816, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "25081a75-f83f-4503-853a-b1e53422fbe8": {"__data__": {"id_": "25081a75-f83f-4503-853a-b1e53422fbe8", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/docs_utils.py", "file_name": "docs_utils.py", "file_type": "text/x-python", "file_size": 4321, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b12a0c1d-1251-4686-8db4-b544b86ebaec", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/docs_utils.py", "file_name": "docs_utils.py", "file_type": "text/x-python", "file_size": 4321, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "088459d5435df74b28a5bdc91a43ddbaf3a56c2628e4819c36d57372719a8bb1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6f52782e-68ae-48b9-848e-bdb1199136a5", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/docs_utils.py", "file_name": "docs_utils.py", "file_type": "text/x-python", "file_size": 4321, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "e6cc10ffa1d7840f293fff358e54a44269d959ca3ffc4edcd90f9ed0878599e3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1cc4d3f5-552a-4479-81da-1c58b3829c44", "node_type": "1", "metadata": {}, "hash": "02f49e4b12d975ccda757e22a4a741650aa48d21df7ae1bfe6acd5776f157c01", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def extract_doc_id(path: Path) -> str:\n    \"\"\"\n    Extract doc_id from a file's frontmatter or fallback to filename stem.\n    Assumes optional comment-style frontmatter: `doc_id: foo`\n    \"\"\"\n    try:\n        lines = path.read_text(encoding=\"utf-8\").splitlines()\n        for line in lines[:10]:\n            if \"doc_id:\" in line:\n                match = re.search(r\"doc_id:\\s*(\\S+)\", line)\n                if match:\n                    return match.group(1).strip()\n    except Exception:\n        pass\n\n    return path.stem  # fallback to filename without extension\n\n\n# \u2500\u2500\u2500 Build registry of doc_id \u2192 [all versions] \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500", "mimetype": "text/plain", "start_char_idx": 818, "end_char_idx": 1460, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1cc4d3f5-552a-4479-81da-1c58b3829c44": {"__data__": {"id_": "1cc4d3f5-552a-4479-81da-1c58b3829c44", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/docs_utils.py", "file_name": "docs_utils.py", "file_type": "text/x-python", "file_size": 4321, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b12a0c1d-1251-4686-8db4-b544b86ebaec", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/docs_utils.py", "file_name": "docs_utils.py", "file_type": "text/x-python", "file_size": 4321, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "088459d5435df74b28a5bdc91a43ddbaf3a56c2628e4819c36d57372719a8bb1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "25081a75-f83f-4503-853a-b1e53422fbe8", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/docs_utils.py", "file_name": "docs_utils.py", "file_type": "text/x-python", "file_size": 4321, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "e6e69a112a09c4afa93be000d9e7ff50a8bd9f0d8b04d8a664767511d5203b23", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dedb5320-1a68-41d3-9265-9a63dd46a81f", "node_type": "1", "metadata": {}, "hash": "8ca1980269ffedbcb5aeddf26ac4831c4e3dbf45f4484998bcef5b1373f55002", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def build_doc_registry() -> Dict[str, List[Path]]:\n    \"\"\"\n    Scans /docs folders and groups files by doc_id.\n    Returns dict of doc_id -> list of Path objects.\n    \"\"\"\n    registry: Dict[str, List[Path]] = defaultdict(list)\n\n    for folder in DOC_FOLDERS:\n        base = BASE_DIR / folder if folder else BASE_DIR\n        if not base.exists():\n            continue\n        for f in base.rglob(\"*.md\"):\n            try:\n                doc_id = extract_doc_id(f)\n                registry[doc_id].append(f)\n            except Exception:\n                continue\n\n    return registry\n\n\n# \u2500\u2500\u2500 Choose best version of a doc \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\ndef choose_canonical_path(paths: List[Path]) -> Path:\n    \"\"\"\n    Select the canonical version of a doc from multiple paths.\n    Prefers root-level /docs/ files, else chooses most recently modified.\n    \"\"\"\n    for p in paths:\n        if p.parent == BASE_DIR:  # root /docs/\n            return p\n    return max(paths, key=lambda p: p.stat().st_mtime)", "mimetype": "text/plain", "start_char_idx": 1462, "end_char_idx": 2475, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dedb5320-1a68-41d3-9265-9a63dd46a81f": {"__data__": {"id_": "dedb5320-1a68-41d3-9265-9a63dd46a81f", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/docs_utils.py", "file_name": "docs_utils.py", "file_type": "text/x-python", "file_size": 4321, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b12a0c1d-1251-4686-8db4-b544b86ebaec", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/docs_utils.py", "file_name": "docs_utils.py", "file_type": "text/x-python", "file_size": 4321, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "088459d5435df74b28a5bdc91a43ddbaf3a56c2628e4819c36d57372719a8bb1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1cc4d3f5-552a-4479-81da-1c58b3829c44", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/docs_utils.py", "file_name": "docs_utils.py", "file_type": "text/x-python", "file_size": 4321, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "15937bc2b6a4188f3b1d38e52c98f0de1f0ccbee3c15afc7f6209f87a8545825", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3792444c-c224-4373-86f7-e2a9b996ed6c", "node_type": "1", "metadata": {}, "hash": "44cf9e3900e768992bfa20c8aaf7d7e639a08b4e7f8165e4869e8abf5ccc82c1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def write_doc_metadata(path: Path, updates: dict):", "mimetype": "text/plain", "start_char_idx": 2477, "end_char_idx": 2527, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3792444c-c224-4373-86f7-e2a9b996ed6c": {"__data__": {"id_": "3792444c-c224-4373-86f7-e2a9b996ed6c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/docs_utils.py", "file_name": "docs_utils.py", "file_type": "text/x-python", "file_size": 4321, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b12a0c1d-1251-4686-8db4-b544b86ebaec", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/docs_utils.py", "file_name": "docs_utils.py", "file_type": "text/x-python", "file_size": 4321, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "088459d5435df74b28a5bdc91a43ddbaf3a56c2628e4819c36d57372719a8bb1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dedb5320-1a68-41d3-9265-9a63dd46a81f", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/docs_utils.py", "file_name": "docs_utils.py", "file_type": "text/x-python", "file_size": 4321, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "5e20c01cc200b08e4e95df31b949458a3f7f1f1dda623e36be3a35d0acbf0ae1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "53506a4f-b094-458b-a79f-d88711047b1f", "node_type": "1", "metadata": {}, "hash": "b39fd819615844c3dad149318eebdce3c5aa09f20e9d3e099167f8b9a3b288af", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"\"\"\n    Updates or inserts a metadata block (as comment) at the top of the markdown file.\n\n    Example block:\n    <!--\n    doc_id: foo\n    tier: global\n    pinned: true\n    -->\n    \"\"\"\n    if not path.exists():\n        raise FileNotFoundError(f\"{path} does not exist\")\n\n    lines = path.read_text(encoding=\"utf-8\").splitlines()\n    start, end = None, None\n\n    # Detect existing block\n    for i, line in enumerate(lines[:20]):\n        if line.strip() == \"<!--\":\n            start = i\n        elif line.strip() == \"-->\":\n            end = i\n            break\n\n    # Build updated block\n    metadata = {**updates}\n    if \"doc_id\" not in metadata:\n        metadata[\"doc_id\"] = extract_doc_id(path)\n\n    block = [\"<!--\"]\n    for key, val in metadata.items():\n        if val is not None:\n            block.append(f\"{key}: {str(val).lower() if isinstance(val, bool) else val}\")\n    block.append(\"-->\")\n\n    # Inject or replace block", "mimetype": "text/plain", "start_char_idx": 2532, "end_char_idx": 3458, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "53506a4f-b094-458b-a79f-d88711047b1f": {"__data__": {"id_": "53506a4f-b094-458b-a79f-d88711047b1f", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/docs_utils.py", "file_name": "docs_utils.py", "file_type": "text/x-python", "file_size": 4321, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b12a0c1d-1251-4686-8db4-b544b86ebaec", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/docs_utils.py", "file_name": "docs_utils.py", "file_type": "text/x-python", "file_size": 4321, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "088459d5435df74b28a5bdc91a43ddbaf3a56c2628e4819c36d57372719a8bb1", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3792444c-c224-4373-86f7-e2a9b996ed6c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/docs_utils.py", "file_name": "docs_utils.py", "file_type": "text/x-python", "file_size": 4321, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "242d84ae9ebb532fb2eced19b5049b016bf2e6cbe5d6dcbaaacf3ac8bcb61336", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if start is not None and end is not None:\n        new_lines = lines[:start] + block + lines[end + 1:]\n    else:\n        new_lines = block + [\"\"] + lines\n\n    path.write_text(\"\\n\".join(new_lines), encoding=\"utf-8\")", "mimetype": "text/plain", "start_char_idx": 3463, "end_char_idx": 3676, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9f942eeb-f102-48b5-83da-26421385b4dc": {"__data__": {"id_": "9f942eeb-f102-48b5-83da-26421385b4dc", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/env_checker.py", "file_name": "env_checker.py", "file_type": "text/x-python", "file_size": 1231, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4af69885-5b52-45f5-ba22-ba944a4acbc1", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/env_checker.py", "file_name": "env_checker.py", "file_type": "text/x-python", "file_size": 1231, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "ad89365b2bedfb0930fb333f1617c94b31ae91f4b996b885f502a157aba390f0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cd64f3a7-767d-4c46-8280-7b0d42ce72d0", "node_type": "1", "metadata": {}, "hash": "01a5cf802070eb12c8c85645fb1064c7bdf639da39dd53b17b59c964d077b234", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# services/env_checker.py\nimport os\nimport re\nfrom pathlib import Path\nfrom dotenv import dotenv_values\n\nSERVICES_DIR = Path(__file__).resolve().parents[1] / \"services\"\nENV_FILE = Path(__file__).resolve().parents[1] / \".env\"\n\nGETENV_REGEX = re.compile(r\"os\\.getenv\\([\"'](.+?)[\"']\")\n\ndef find_env_keys_in_code(path: Path):\n    found = {}\n    for file in path.rglob(\"*.py\"):\n        matches = GETENV_REGEX.findall(file.read_text(encoding=\"utf-8\"))\n        if matches:\n            found[file.name] = list(set(matches))\n    return found", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 532, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cd64f3a7-767d-4c46-8280-7b0d42ce72d0": {"__data__": {"id_": "cd64f3a7-767d-4c46-8280-7b0d42ce72d0", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/env_checker.py", "file_name": "env_checker.py", "file_type": "text/x-python", "file_size": 1231, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4af69885-5b52-45f5-ba22-ba944a4acbc1", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/env_checker.py", "file_name": "env_checker.py", "file_type": "text/x-python", "file_size": 1231, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "ad89365b2bedfb0930fb333f1617c94b31ae91f4b996b885f502a157aba390f0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9f942eeb-f102-48b5-83da-26421385b4dc", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/env_checker.py", "file_name": "env_checker.py", "file_type": "text/x-python", "file_size": 1231, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "44b64592a9223600c0f6db0f351a791453d97f0ad0307094232d5489a22cb149", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def check_env_keys():\n    code_env_usage = find_env_keys_in_code(SERVICES_DIR)\n    used_keys = sorted({k for keys in code_env_usage.values() for k in keys})\n    \n    # Load .env if available\n    env_file_values = dotenv_values(dotenv_path=ENV_FILE)\n    env_file_keys = set(env_file_values.keys())\n    runtime_env_keys = set(os.environ.keys())\n\n    # Compare\n    missing_keys = [k for k in used_keys if k not in env_file_keys and k not in runtime_env_keys]\n    unused_env_keys = sorted(env_file_keys - set(used_keys))\n\n    return {\n        \"used_keys\": used_keys,\n        \"missing_in_env\": missing_keys,\n        \"defined_but_unused\": unused_env_keys,\n        \"used_in_files\": code_env_usage,\n    }", "mimetype": "text/plain", "start_char_idx": 534, "end_char_idx": 1230, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "939ecfc0-1f7e-4547-b0a2-ed3bb8c9a581": {"__data__": {"id_": "939ecfc0-1f7e-4547-b0a2-ed3bb8c9a581", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/gmail.py", "file_name": "gmail.py", "file_type": "text/x-python", "file_size": 2867, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2707e462-9c9a-4f24-b5d4-671d469282e2", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/gmail.py", "file_name": "gmail.py", "file_type": "text/x-python", "file_size": 2867, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "0c0cafbd2c24497765b68ef44da5baaf2c07a76ed63142b552c6bd4cd2ff6e3c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "58406ed8-6d23-4632-ada7-5de2858f137d", "node_type": "1", "metadata": {}, "hash": "abd86540880a8460d2b59b2c375d1a082c22eb68a1368265fe755430d76744ae", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: services/gmail.py\n# Directory: services/\n# Purpose: Gmail read/write utility using Google OAuth creds (Relay control/email ops)\n\nimport os\nfrom googleapiclient.discovery import build\nfrom email.mime.text import MIMEText\nimport base64\nfrom pathlib import Path\nfrom google.oauth2.service_account import Credentials\n\nGMAIL_SCOPES = ['https://www.googleapis.com/auth/gmail.send', 'https://www.googleapis.com/auth/gmail.readonly']\nGOOGLE_CREDS_JSON = os.getenv(\"GOOGLE_CREDS_JSON\")  # Path to service account JSON\n\ndef get_gmail_service():\n    \"\"\"Build a Gmail API client using service account credentials.\"\"\"\n    creds = Credentials.from_service_account_file(\n        GOOGLE_CREDS_JSON,\n        scopes=GMAIL_SCOPES,\n    )\n    delegated_email = os.getenv(\"NOTIFY_FROM_EMAIL\")\n    if delegated_email:\n        creds = creds.with_subject(delegated_email)\n    return build('gmail', 'v1', credentials=creds)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 905, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "58406ed8-6d23-4632-ada7-5de2858f137d": {"__data__": {"id_": "58406ed8-6d23-4632-ada7-5de2858f137d", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/gmail.py", "file_name": "gmail.py", "file_type": "text/x-python", "file_size": 2867, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2707e462-9c9a-4f24-b5d4-671d469282e2", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/gmail.py", "file_name": "gmail.py", "file_type": "text/x-python", "file_size": 2867, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "0c0cafbd2c24497765b68ef44da5baaf2c07a76ed63142b552c6bd4cd2ff6e3c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "939ecfc0-1f7e-4547-b0a2-ed3bb8c9a581", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/gmail.py", "file_name": "gmail.py", "file_type": "text/x-python", "file_size": 2867, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "308171d605b14f839929f91b1d68bf7d9a5c1450b644682bbe24bcd99ca61744", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5d82d2c7-2952-4cc4-b587-9e53ca9100cb", "node_type": "1", "metadata": {}, "hash": "99dd43612d3f9dd0c7acf5e06ee97d1642e5b69d76e7c99622f6354e839be629", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def send_email(to_email, subject, body):\n    \"\"\"Send an email via Gmail API.\"\"\"\n    service = get_gmail_service()\n    message = MIMEText(body)\n    message['to'] = to_email\n    message['from'] = os.getenv(\"NOTIFY_FROM_EMAIL\")\n    message['subject'] = subject\n    raw = base64.urlsafe_b64encode(message.as_bytes()).decode()\n    return service.users().messages().send(userId=\"me\", body={'raw': raw}).execute()", "mimetype": "text/plain", "start_char_idx": 907, "end_char_idx": 1313, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5d82d2c7-2952-4cc4-b587-9e53ca9100cb": {"__data__": {"id_": "5d82d2c7-2952-4cc4-b587-9e53ca9100cb", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/gmail.py", "file_name": "gmail.py", "file_type": "text/x-python", "file_size": 2867, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2707e462-9c9a-4f24-b5d4-671d469282e2", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/gmail.py", "file_name": "gmail.py", "file_type": "text/x-python", "file_size": 2867, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "0c0cafbd2c24497765b68ef44da5baaf2c07a76ed63142b552c6bd4cd2ff6e3c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "58406ed8-6d23-4632-ada7-5de2858f137d", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/gmail.py", "file_name": "gmail.py", "file_type": "text/x-python", "file_size": 2867, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "45cd94b7f1b0cb7e00481ca5618d90b2cf27390e2509c69e039a8f35a91a20d0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "721e1c33-d865-4b67-9b1a-74dcc7b00aac", "node_type": "1", "metadata": {}, "hash": "401943651cfd696139571ccc5f64d232e099f55f48e6a4a6f083d78592f5ce3b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def list_emails(query=\"\", max_results=10):\n    \"\"\"List email messages in the inbox (by search query).\"\"\"\n    service = get_gmail_service()\n    results = service.users().messages().list(userId='me', q=query, maxResults=max_results).execute()\n    messages = results.get('messages', [])\n    emails = []\n    for m in messages:\n        msg = service.users().messages().get(userId='me', id=m['id'], format='metadata').execute()\n        headers = {h['name']: h['value'] for h in msg['payload']['headers']}\n        snippet = msg.get('snippet', '')\n        emails.append({\n            \"id\": m['id'],\n            \"snippet\": snippet,\n            \"from\": headers.get(\"From\"),\n            \"subject\": headers.get(\"Subject\"),\n            \"date\": headers.get(\"Date\"),\n        })\n    return emails", "mimetype": "text/plain", "start_char_idx": 1315, "end_char_idx": 2095, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "721e1c33-d865-4b67-9b1a-74dcc7b00aac": {"__data__": {"id_": "721e1c33-d865-4b67-9b1a-74dcc7b00aac", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/gmail.py", "file_name": "gmail.py", "file_type": "text/x-python", "file_size": 2867, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2707e462-9c9a-4f24-b5d4-671d469282e2", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/gmail.py", "file_name": "gmail.py", "file_type": "text/x-python", "file_size": 2867, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "0c0cafbd2c24497765b68ef44da5baaf2c07a76ed63142b552c6bd4cd2ff6e3c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5d82d2c7-2952-4cc4-b587-9e53ca9100cb", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/gmail.py", "file_name": "gmail.py", "file_type": "text/x-python", "file_size": 2867, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "5024e4a2964199c5bb308e9c25839da831036ba68bbb608e8c000786689a82a0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def get_email(email_id):\n    \"\"\"Fetch full content of a given email by ID.\"\"\"\n    service = get_gmail_service()\n    msg = service.users().messages().get(userId='me', id=email_id, format='full').execute()\n    headers = {h['name']: h['value'] for h in msg['payload']['headers']}\n    body = \"\"\n    if 'parts' in msg['payload']:\n        for part in msg['payload']['parts']:\n            if part['mimeType'] == 'text/plain':\n                body = base64.urlsafe_b64decode(part['body']['data']).decode()\n    else:\n        body = base64.urlsafe_b64decode(msg['payload']['body']['data']).decode()\n    return {\n        \"id\": email_id,\n        \"from\": headers.get(\"From\"),\n        \"subject\": headers.get(\"Subject\"),\n        \"date\": headers.get(\"Date\"),\n        \"body\": body\n    }", "mimetype": "text/plain", "start_char_idx": 2097, "end_char_idx": 2866, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1c292396-7429-4561-b3b4-dfb1e30f82dd": {"__data__": {"id_": "1c292396-7429-4561-b3b4-dfb1e30f82dd", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/google.py", "file_name": "google.py", "file_type": "text/x-python", "file_size": 1139, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fa8923d1-1b06-4cc6-903b-99fcdf67ff7f", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/google.py", "file_name": "google.py", "file_type": "text/x-python", "file_size": 1139, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "89d0b88dbbc2be6430393170b07a0124a20508643c35f7a8ab2ededa4f359b00", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9654c838-586b-4d17-9258-b5af6bfccfcd", "node_type": "1", "metadata": {}, "hash": "a1c911305d2d48683456cb3f32e680bb841bd1fce53189a6e41d47dadd3099d3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: services/google.py\n\"\"\"Utility helpers for fetching Google Docs content.\"\"\"\n\nfrom typing import List, Tuple\nfrom markdownify import markdownify as md\n\nfrom .google_docs_sync import (\n    get_google_service,\n    find_folder_id,\n    get_docs_in_folder,\n    COMMAND_CENTER_FOLDER_NAME,\n)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 291, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9654c838-586b-4d17-9258-b5af6bfccfcd": {"__data__": {"id_": "9654c838-586b-4d17-9258-b5af6bfccfcd", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/google.py", "file_name": "google.py", "file_type": "text/x-python", "file_size": 1139, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fa8923d1-1b06-4cc6-903b-99fcdf67ff7f", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/google.py", "file_name": "google.py", "file_type": "text/x-python", "file_size": 1139, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "89d0b88dbbc2be6430393170b07a0124a20508643c35f7a8ab2ededa4f359b00", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1c292396-7429-4561-b3b4-dfb1e30f82dd", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/google.py", "file_name": "google.py", "file_type": "text/x-python", "file_size": 1139, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "9817feb116d64324f0be3dbc9dfb7a85e5e633722d68b3bf837f3cd6a008c6a4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def fetch_drive_docs() -> List[Tuple[str, str]]:\n    \"\"\"Return (title, markdown) for docs in the COMMAND_CENTER folder.\"\"\"\n    drive_service, docs_service = get_google_service()\n    folder_id = find_folder_id(\n        drive_service, COMMAND_CENTER_FOLDER_NAME\n    )\n    files = get_docs_in_folder(drive_service, folder_id)\n\n    docs = []\n    for file in files:\n        doc = docs_service.documents().get(documentId=file[\"id\"]).execute()\n        elements = doc.get(\"body\", {}).get(\"content\", [])\n        html = \"\"\n        for element in elements:\n            if \"paragraph\" in element:\n                for part in element[\"paragraph\"].get(\"elements\", []):\n                    html += part.get(\"textRun\", {}).get(\"content\", \"\")\n                html += \"\\n\"\n        markdown = md(html)\n        docs.append((file[\"name\"], markdown))\n    return docs", "mimetype": "text/plain", "start_char_idx": 294, "end_char_idx": 1138, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8af9d9ad-2861-40f1-9b5d-741847d1fe88": {"__data__": {"id_": "8af9d9ad-2861-40f1-9b5d-741847d1fe88", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cb2eef9a-1534-4265-8ebd-78a05713ec1f", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "1b57793d0918b46e925442dfefc8216cf07f73fcfe272a954733a6fb22e61d33", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e8243208-03f2-4447-acb8-c8e8b61d0703", "node_type": "1", "metadata": {}, "hash": "96809ffbf1994e70ba2bd7a77ef7901a5bb74099401c3f0b8b2e074e91862d96", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: services/google_docs_sync.py\n# Directory: /services\n# Purpose: Synchronize Google Docs from the COMMAND_CENTER Drive folder into local Markdown files\n# Usage:\n#   1. Set env var GOOGLE_CREDS_JSON to a base64-encoded Google client secret JSON\n#   2. (Optional) Set env var GOOGLE_TOKEN_JSON to a base64-encoded OAuth token JSON for bootstrapping\n#   3. For local development, set ENV=local to allow interactive OAuth login\n#   4. Call sync_google_docs() to fetch and convert all docs into docs/imported/\n\nimport os\nimport base64\nfrom pathlib import Path\n\nfrom google.oauth2.credentials import Credentials\nfrom google_auth_oauthlib.flow import InstalledAppFlow\nfrom google.auth.transport.requests import Request\nfrom googleapiclient.discovery import build\nfrom markdownify import markdownify as md\n\n# === Configuration Constants ===\nSCOPES = [\n    \"https://www.googleapis.com/auth/drive.readonly\",\n    \"https://www.googleapis.com/auth/documents.readonly\",\n]\nCREDENTIALS_PATH = Path(\"/tmp/credentials.json\")", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1012, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e8243208-03f2-4447-acb8-c8e8b61d0703": {"__data__": {"id_": "e8243208-03f2-4447-acb8-c8e8b61d0703", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cb2eef9a-1534-4265-8ebd-78a05713ec1f", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "1b57793d0918b46e925442dfefc8216cf07f73fcfe272a954733a6fb22e61d33", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8af9d9ad-2861-40f1-9b5d-741847d1fe88", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "34e5d431939f8bd6877d9c1515a5640d897cf7fa1398e7eedd9edb05df5c6839", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "887f37c5-2278-4a5e-ad07-7b765bfbf176", "node_type": "1", "metadata": {}, "hash": "a8a96bfaec679ddc4c27582bb128dfe70c45ff679a3864dc67412b4595a230d4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "TOKEN_PATH = Path(\"frontend/sync/token.json\")\nIMPORT_PATH = Path(\"docs/imported\")\nIMPORT_PATH.mkdir(parents=True, exist_ok=True)\nCOMMAND_CENTER_FOLDER_NAME = \"COMMAND_CENTER\"\n\n# === Authentication and Service Setup ===", "mimetype": "text/plain", "start_char_idx": 1013, "end_char_idx": 1231, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "887f37c5-2278-4a5e-ad07-7b765bfbf176": {"__data__": {"id_": "887f37c5-2278-4a5e-ad07-7b765bfbf176", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cb2eef9a-1534-4265-8ebd-78a05713ec1f", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "1b57793d0918b46e925442dfefc8216cf07f73fcfe272a954733a6fb22e61d33", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e8243208-03f2-4447-acb8-c8e8b61d0703", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "c8e063b0be0985757fc93ed11c570d67d9be4dfe5d4d686e7986dc103a8f1c0e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5a3e4c9c-0a5e-431f-ba2d-61593395da37", "node_type": "1", "metadata": {}, "hash": "f998b82836b94f002322d516a89ec2bcc9e15f8ea7808325cbd9999b9541cb05", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def get_google_service():", "mimetype": "text/plain", "start_char_idx": 1232, "end_char_idx": 1257, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5a3e4c9c-0a5e-431f-ba2d-61593395da37": {"__data__": {"id_": "5a3e4c9c-0a5e-431f-ba2d-61593395da37", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cb2eef9a-1534-4265-8ebd-78a05713ec1f", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "1b57793d0918b46e925442dfefc8216cf07f73fcfe272a954733a6fb22e61d33", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "887f37c5-2278-4a5e-ad07-7b765bfbf176", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "695afe4fa0aabf13bf1136b54e0004920de9898d9535ffaa581ef15ae1496899", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b35180d-c81a-4762-8e7a-f8c758246070", "node_type": "1", "metadata": {}, "hash": "ae9fec0f221e4723213845f7f9f1fdd3f4fbe216af4c0674917c9439be448bcd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"\"\"\n    Ensure we have valid Google API credentials, then build Drive and Docs services.\n    - Writes out credentials.json from GOOGLE_CREDS_JSON if missing\n    - Bootstraps token.json from GOOGLE_TOKEN_JSON env var or runs interactive OAuth\n    \"\"\"\n    creds = None\n\n    # Write out credentials.json if not already present\n    if not CREDENTIALS_PATH.exists():\n        raw = os.getenv(\"GOOGLE_CREDS_JSON\")\n        if not raw:\n            raise FileNotFoundError(\"Missing GOOGLE_CREDS_JSON environment variable.\")\n        decoded = base64.b64decode(raw.encode()).decode()\n        CREDENTIALS_PATH.write_text(decoded)\n        print(f\"\u2705 Wrote client secrets to {CREDENTIALS_PATH}\")\n\n    # Bootstrap token.json from env, if provided", "mimetype": "text/plain", "start_char_idx": 1262, "end_char_idx": 1991, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8b35180d-c81a-4762-8e7a-f8c758246070": {"__data__": {"id_": "8b35180d-c81a-4762-8e7a-f8c758246070", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cb2eef9a-1534-4265-8ebd-78a05713ec1f", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "1b57793d0918b46e925442dfefc8216cf07f73fcfe272a954733a6fb22e61d33", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5a3e4c9c-0a5e-431f-ba2d-61593395da37", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3ca1587695e9e48203bbcdbcd6dc2d9b40818a96643f098a415ab82865fbc422", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "102fa38a-5ad9-4d44-96af-35595b12b576", "node_type": "1", "metadata": {}, "hash": "c7897001809bffb16ed20711ed0c7068cbef41f0079f7e2a543beec4a01af440", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if not TOKEN_PATH.exists() and os.getenv(\"GOOGLE_TOKEN_JSON\"):\n        token_raw = os.getenv(\"GOOGLE_TOKEN_JSON\")\n        try:\n            TOKEN_PATH.write_text(base64.b64decode(token_raw).decode())\n            print(f\"\u2705 Bootstrapped token.json to {TOKEN_PATH}\")\n        except Exception as e:\n            print(f\"\u274c Failed to decode GOOGLE_TOKEN_JSON: {e}\")\n\n    # Load existing credentials\n    if TOKEN_PATH.exists():\n        creds = Credentials.from_authorized_user_file(str(TOKEN_PATH), SCOPES)\n\n    # Refresh or start OAuth flow", "mimetype": "text/plain", "start_char_idx": 1996, "end_char_idx": 2528, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "102fa38a-5ad9-4d44-96af-35595b12b576": {"__data__": {"id_": "102fa38a-5ad9-4d44-96af-35595b12b576", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cb2eef9a-1534-4265-8ebd-78a05713ec1f", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "1b57793d0918b46e925442dfefc8216cf07f73fcfe272a954733a6fb22e61d33", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b35180d-c81a-4762-8e7a-f8c758246070", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "edce8e41d6a86f415f042de6eb2274f3a3d4c9f8776f6db7a5739412ba0597aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d038650c-7307-4812-92f8-596047000bd9", "node_type": "1", "metadata": {}, "hash": "f1c909f44bcb82922efca1cdb8acb02ae5f79e8c7062c5e1c59da763b3634ff0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if not creds or not creds.valid:\n        if creds and creds.expired and creds.refresh_token:\n            creds.refresh(Request())\n        else:\n            # Interactive login only allowed in local dev\n            if os.getenv(\"ENV\") == \"local\":\n                flow = InstalledAppFlow.from_client_secrets_file(str(CREDENTIALS_PATH), SCOPES)\n                creds = flow.run_local_server(port=0)\n                TOKEN_PATH.parent.mkdir(parents=True, exist_ok=True)\n                TOKEN_PATH.write_text(creds.to_json())\n                print(f\"\u2705 Saved new token.json to {TOKEN_PATH}\")\n            else:\n                raise RuntimeError(\n                    \"Missing valid credentials and interactive login is disabled in production.\"\n                )\n\n    # Build and return API clients\n    drive_service = build(\"drive\", \"v3\", credentials=creds)\n    docs_service = build(\"docs\", \"v1\", credentials=creds)\n    return drive_service, docs_service", "mimetype": "text/plain", "start_char_idx": 2533, "end_char_idx": 3479, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d038650c-7307-4812-92f8-596047000bd9": {"__data__": {"id_": "d038650c-7307-4812-92f8-596047000bd9", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cb2eef9a-1534-4265-8ebd-78a05713ec1f", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "1b57793d0918b46e925442dfefc8216cf07f73fcfe272a954733a6fb22e61d33", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "102fa38a-5ad9-4d44-96af-35595b12b576", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "e918b16bc3d950e3a7538d3c070765a99e46a5cb7e37aa6978d36f2c6a89977f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b40ce4a0-6129-48cc-a5ee-4e9557e4cf7c", "node_type": "1", "metadata": {}, "hash": "ab3e73f83b6243ed300eeb4d27f7444ea3c995ccc1e2eb113fe85257e9c015ca", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# === Google Docs Fetching Utilities ===\ndef find_folder_id(drive_service, folder_name: str) -> str:\n    \"\"\"\n    Find the Drive folder ID by name.\n    Returns folder ID or raises if not found.\n    \"\"\"\n    query = f\"mimeType='application/vnd.google-apps.folder' and name='{folder_name}'\"\n    result = (\n        drive_service.files()\n        .list(q=query, spaces=\"drive\", fields=\"files(id, name)\")\n        .execute()\n    )\n    files = result.get(\"files\", [])\n    if not files:\n        raise RuntimeError(f\"Folder '{folder_name}' not found in Drive.\")\n    return files[0][\"id\"]\n\n\ndef get_docs_in_folder(drive_service, folder_id: str) -> list:\n    \"\"\"\n    List all Google Docs files within the given folder ID.\n    \"\"\"\n    query = f\"'{folder_id}' in parents and mimeType='application/vnd.google-apps.document'\"\n    result = (\n        drive_service.files()\n        .list(q=query, fields=\"files(id, name)\")\n        .execute()\n    )\n    return result.get(\"files\", [])", "mimetype": "text/plain", "start_char_idx": 3481, "end_char_idx": 4442, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b40ce4a0-6129-48cc-a5ee-4e9557e4cf7c": {"__data__": {"id_": "b40ce4a0-6129-48cc-a5ee-4e9557e4cf7c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cb2eef9a-1534-4265-8ebd-78a05713ec1f", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "1b57793d0918b46e925442dfefc8216cf07f73fcfe272a954733a6fb22e61d33", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d038650c-7307-4812-92f8-596047000bd9", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "599df50fdb3a612d5e6c2d0a729e744214fc2e548375ca461ef79086d14b5795", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "14dfb7e8-5f2e-46c9-ba8c-e032cbcfcda3", "node_type": "1", "metadata": {}, "hash": "ed28666fb1f7c1ecb26443d04c87cbf043d2e1c23029b98fe4fbbd387078f931", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def fetch_and_save_doc(docs_service, file: dict) -> str:\n    \"\"\"\n    Fetch a Google Doc by ID, convert its content to Markdown, and save locally.\n    Returns the filename of the saved Markdown file.\n    \"\"\"\n    doc = docs_service.documents().get(documentId=file[\"id\"]).execute()\n    # Build plain-text HTML-like content\n    elements = doc.get(\"body\", {}).get(\"content\", [])\n    html = \"\"\n    for element in elements:\n        if \"paragraph\" in element:\n            for part in element[\"paragraph\"].get(\"elements\", []):\n                html += part.get(\"textRun\", {}).get(\"content\", \"\")\n            html += \"\\n\"\n    # Convert to Markdown\n    markdown = md(html)\n    # Prepare output filename\n    title_slug = file[\"name\"].replace(\" \", \"_\").lower()\n    out_path = IMPORT_PATH / f\"{title_slug}.md\"\n    out_path.write_text(markdown, encoding=\"utf-8\")\n    return out_path.name\n\n# === Main Entry Point ===", "mimetype": "text/plain", "start_char_idx": 4445, "end_char_idx": 5343, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "14dfb7e8-5f2e-46c9-ba8c-e032cbcfcda3": {"__data__": {"id_": "14dfb7e8-5f2e-46c9-ba8c-e032cbcfcda3", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cb2eef9a-1534-4265-8ebd-78a05713ec1f", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "1b57793d0918b46e925442dfefc8216cf07f73fcfe272a954733a6fb22e61d33", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b40ce4a0-6129-48cc-a5ee-4e9557e4cf7c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/google_docs_sync.py", "file_name": "google_docs_sync.py", "file_type": "text/x-python", "file_size": 6032, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "da1483a445a6cb9ab61f3c1c2e680190d20a152b2e02591fca8a2f059b11bf33", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def sync_google_docs() -> list:\n    \"\"\"\n    Main sync function.\n    - Authenticates\n    - Finds the COMMAND_CENTER folder\n    - Fetches and saves each doc to docs/imported/\n    Returns a list of saved filenames.\n    \"\"\"\n    drive_service, docs_service = get_google_service()\n    folder_id = find_folder_id(drive_service, COMMAND_CENTER_FOLDER_NAME)\n    files = get_docs_in_folder(drive_service, folder_id)\n    saved_files = [fetch_and_save_doc(docs_service, f) for f in files]\n    print(f\"\u2705 Synced {len(saved_files)} files:\", saved_files)\n    return saved_files\n\n# If run as a script, perform sync immediately\nenabled = __name__ == \"__main__\"\nif enabled:\n    sync_google_docs()", "mimetype": "text/plain", "start_char_idx": 5344, "end_char_idx": 6021, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "303f164d-fd4e-4912-b405-1a5d2495e0a9": {"__data__": {"id_": "303f164d-fd4e-4912-b405-1a5d2495e0a9", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2b1436a0-8117-433a-89ab-01ac92bfa271", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "2c007e2c843e0c490c6e0d256bc70fb86ef19f316c1519dcedb59ba278ca4dda", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ed222757-026e-4a8d-8a95-1b39a63512a3", "node_type": "1", "metadata": {}, "hash": "c477d98370cbdbf1bf52b3d855a779fd8a7d52d9d76d8e029b1466ce37813fb7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: services/graph.py\n# Purpose: Graph query helpers for MetaPlanner (e.g. similar query lookup)\n\nfrom services.neo4j_driver import neo4j_driver  # assumes driver is initialized separately\nfrom core.logging import log_event\n\n# === Fulltext similarity query using Neo4j index ===", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 282, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ed222757-026e-4a8d-8a95-1b39a63512a3": {"__data__": {"id_": "ed222757-026e-4a8d-8a95-1b39a63512a3", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2b1436a0-8117-433a-89ab-01ac92bfa271", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "2c007e2c843e0c490c6e0d256bc70fb86ef19f316c1519dcedb59ba278ca4dda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "303f164d-fd4e-4912-b405-1a5d2495e0a9", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "cd1d2f601e136da2a0cd79dc29eb8cbc209f4d94334df8b741741cfa62acca04", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2b1c1eb4-5a53-4ec4-9a87-a04682baff9b", "node_type": "1", "metadata": {}, "hash": "00f0dee0345fa841215ad94a138e5022e780acb2dff90022b6375b271ff17279", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async def query_similar_routes(query: str, top_k: int = 5) -> list[dict]:", "mimetype": "text/plain", "start_char_idx": 283, "end_char_idx": 356, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2b1c1eb4-5a53-4ec4-9a87-a04682baff9b": {"__data__": {"id_": "2b1c1eb4-5a53-4ec4-9a87-a04682baff9b", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2b1436a0-8117-433a-89ab-01ac92bfa271", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "2c007e2c843e0c490c6e0d256bc70fb86ef19f316c1519dcedb59ba278ca4dda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ed222757-026e-4a8d-8a95-1b39a63512a3", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "9d12edc3ba057ea482220a989a67db9803843973e9aaa015e1a6722570309634", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b9a0fed-97f7-46e3-b138-51c859d09d4c", "node_type": "1", "metadata": {}, "hash": "b55af1ce41ebf540ebe454b60f1aa280a6b79c1ab5522bc30b20e4b33f3964b4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"\"\"\n    Returns top K similar past queries and their associated routes and critic scores.\n    Requires a fulltext index on :Query(text) and proper ROUTED_TO links.\n    \"\"\"", "mimetype": "text/plain", "start_char_idx": 361, "end_char_idx": 532, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8b9a0fed-97f7-46e3-b138-51c859d09d4c": {"__data__": {"id_": "8b9a0fed-97f7-46e3-b138-51c859d09d4c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2b1436a0-8117-433a-89ab-01ac92bfa271", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "2c007e2c843e0c490c6e0d256bc70fb86ef19f316c1519dcedb59ba278ca4dda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2b1c1eb4-5a53-4ec4-9a87-a04682baff9b", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "5b43ffd59e249ed9f5a64b7fe7935e22f749f8983e94572d04af4a9016f23a69", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6b2e0036-b56e-4b6d-b319-dd01d42ab9c7", "node_type": "1", "metadata": {}, "hash": "6987ea7692d4d98674f24f4e42b1cb2c68fd4778239e4b109ba7363437feff04", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "try:\n        cypher = \"\"\"\n        CALL db.index.fulltext.queryNodes('queryTextIndex', $q) YIELD node, score\n        MATCH (node)-[:PLANNED_WITH]->(plan:Plan)-[:RAN_ON]->(agent:Agent)\n        OPTIONAL MATCH (plan)-[:VALIDATED_BY]->(c:Critic)\n        WITH plan, agent, score, COUNT(c) AS total, SUM(CASE WHEN c.passes THEN 1 ELSE 0 END) AS passed\n        RETURN agent.name AS route,\n               score,\n               passed * 1.0 / CASE WHEN total = 0 THEN 1 ELSE total END AS confidence\n        ORDER BY confidence DESC, score DESC\n        LIMIT $top_k\n        \"\"\"\n\n        records = await neo4j_driver.execute_read(\n            cypher,\n            parameters={\"q\": query, \"top_k\": top_k}\n        )\n\n        return [\n            {\n                \"route\": record[\"route\"],\n                \"confidence\": float(record[\"confidence\"]),\n                \"score\": float(record[\"score\"])\n            }\n            for record in records\n            if record[\"route\"]\n        ]", "mimetype": "text/plain", "start_char_idx": 537, "end_char_idx": 1507, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6b2e0036-b56e-4b6d-b319-dd01d42ab9c7": {"__data__": {"id_": "6b2e0036-b56e-4b6d-b319-dd01d42ab9c7", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2b1436a0-8117-433a-89ab-01ac92bfa271", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "2c007e2c843e0c490c6e0d256bc70fb86ef19f316c1519dcedb59ba278ca4dda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b9a0fed-97f7-46e3-b138-51c859d09d4c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "0d8b273ad2f1379b0aa43c1dbe4fd9db0feb482b41974e908f76b382e52775bd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4cc47649-9b37-4ab3-9477-30bb9ce42dba", "node_type": "1", "metadata": {}, "hash": "8d8d0dd77c91626d850e8b1953a0e0ec42d8d300dec84fcd5841362623cc7d7a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "except Exception as e:\n        log_event(\"graph_query_fail\", {\"error\": str(e)})\n        return []", "mimetype": "text/plain", "start_char_idx": 1513, "end_char_idx": 1610, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4cc47649-9b37-4ab3-9477-30bb9ce42dba": {"__data__": {"id_": "4cc47649-9b37-4ab3-9477-30bb9ce42dba", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2b1436a0-8117-433a-89ab-01ac92bfa271", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "2c007e2c843e0c490c6e0d256bc70fb86ef19f316c1519dcedb59ba278ca4dda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6b2e0036-b56e-4b6d-b319-dd01d42ab9c7", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "fb027060d399b6c068b43947e439fd47bb728ea327a7f98334e497af63abb046", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "be4b3bd9-8c14-4676-a622-0dd28b578b0c", "node_type": "1", "metadata": {}, "hash": "2797d10f6f84763114602da96a08527808dba1c3739af04db425eb1563b8f190", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# === Generate text summary of relevant prior routes ===", "mimetype": "text/plain", "start_char_idx": 1611, "end_char_idx": 1667, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "be4b3bd9-8c14-4676-a622-0dd28b578b0c": {"__data__": {"id_": "be4b3bd9-8c14-4676-a622-0dd28b578b0c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2b1436a0-8117-433a-89ab-01ac92bfa271", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "2c007e2c843e0c490c6e0d256bc70fb86ef19f316c1519dcedb59ba278ca4dda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4cc47649-9b37-4ab3-9477-30bb9ce42dba", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "6d5d979d31cd26099f17d2555ca80571513e3f76243a3b335449b781444af12f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e795706d-3b62-415a-9a5d-6a10ebeaf983", "node_type": "1", "metadata": {}, "hash": "bce76fa6e89c163c4c204a6341d0309b1d4b9a5ce2fed7ea2009aa729d49448f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async def summarize_recent_context(query: str, top_k: int = 5) -> str:", "mimetype": "text/plain", "start_char_idx": 1668, "end_char_idx": 1738, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e795706d-3b62-415a-9a5d-6a10ebeaf983": {"__data__": {"id_": "e795706d-3b62-415a-9a5d-6a10ebeaf983", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2b1436a0-8117-433a-89ab-01ac92bfa271", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "2c007e2c843e0c490c6e0d256bc70fb86ef19f316c1519dcedb59ba278ca4dda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "be4b3bd9-8c14-4676-a622-0dd28b578b0c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "638eadf52c2ad4b44ebd60768ef439c24da45732f3d3faba81962f3fd6ada0b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f9491840-f0e7-4f37-a374-516f9c7657f1", "node_type": "1", "metadata": {}, "hash": "42db46db08dcc65248f573c88e883ffb73d1835cac444d1cbd3cbcc6329b8a43", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"\"\"\n    Returns a markdown-style summary of recent graph memory relevant to the query.\n    Used for injecting graph-derived intelligence into planner context.\n    \"\"\"", "mimetype": "text/plain", "start_char_idx": 1743, "end_char_idx": 1909, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f9491840-f0e7-4f37-a374-516f9c7657f1": {"__data__": {"id_": "f9491840-f0e7-4f37-a374-516f9c7657f1", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2b1436a0-8117-433a-89ab-01ac92bfa271", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "2c007e2c843e0c490c6e0d256bc70fb86ef19f316c1519dcedb59ba278ca4dda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e795706d-3b62-415a-9a5d-6a10ebeaf983", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "eea5f877ee8f62fb21e4e36d95cab7d312595488adb3691b1f34164e80c53df1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "05bc815b-f798-4363-ba7d-a0040ea64f72", "node_type": "1", "metadata": {}, "hash": "e385f6561c689f83ec1384b84c32a62932d3f1dbdbb1d7e884dde4c71402acdb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "try:", "mimetype": "text/plain", "start_char_idx": 537, "end_char_idx": 541, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "05bc815b-f798-4363-ba7d-a0040ea64f72": {"__data__": {"id_": "05bc815b-f798-4363-ba7d-a0040ea64f72", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2b1436a0-8117-433a-89ab-01ac92bfa271", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "2c007e2c843e0c490c6e0d256bc70fb86ef19f316c1519dcedb59ba278ca4dda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f9491840-f0e7-4f37-a374-516f9c7657f1", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "ae6342cae8e4f8ed17e034ea5fd3d7300bf11c56a509dbf5f3372e2e0d1af521", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0f2af6b1-711c-4f38-bee6-1f6fcc4fa583", "node_type": "1", "metadata": {}, "hash": "1a5a44d95a9d8a5257d4ede47176596c20c06aa9387d371e706ef3741bb3170b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "cypher = \"\"\"\n        CALL db.index.fulltext.queryNodes('queryTextIndex', $q) YIELD node, score\n        MATCH (node)-[:PLANNED_WITH]->(plan:Plan)-[:RAN_ON]->(agent:Agent)\n        OPTIONAL MATCH (plan)-[:VALIDATED_BY]->(c:Critic)\n        WITH plan, agent, score,\n             COUNT(c) AS total,\n             SUM(CASE WHEN c.passes THEN 1 ELSE 0 END) AS passed\n        RETURN plan.route AS route,\n               agent.name AS agent,\n               passed * 1.0 / CASE WHEN total = 0 THEN 1 ELSE total END AS confidence,\n               score\n        ORDER BY confidence DESC, score DESC\n        LIMIT $top_k\n        \"\"\"\n\n        records = await neo4j_driver.execute_read(cypher, {\"q\": query, \"top_k\": top_k})\n        if not records:\n            return \"\"\n\n        summary = [\"### \ud83d\udd0e Graph Memory Summary\"]\n        for r in records:\n            summary.append(\n                f\"- `{r['route']}` via `{r['agent']}` \u2192 \"\n                f\"Confidence: {r['confidence']:.0%} \u00b7 Relevance Score: {r['score']:.2f}\"\n            )", "mimetype": "text/plain", "start_char_idx": 1927, "end_char_idx": 2942, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0f2af6b1-711c-4f38-bee6-1f6fcc4fa583": {"__data__": {"id_": "0f2af6b1-711c-4f38-bee6-1f6fcc4fa583", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2b1436a0-8117-433a-89ab-01ac92bfa271", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "2c007e2c843e0c490c6e0d256bc70fb86ef19f316c1519dcedb59ba278ca4dda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "05bc815b-f798-4363-ba7d-a0040ea64f72", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "b2be58ca3ba0cb4d5c9dedc42bfc2015720981fa4733e8a9f038461176a3226a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "755799a0-a80d-48ed-b961-103bbed23481", "node_type": "1", "metadata": {}, "hash": "f952f38ee93e939729924c0fbd6fe8a3556c7cd58db3e7030599be6da7c5f4ea", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "return \"\\n\".join(summary)", "mimetype": "text/plain", "start_char_idx": 2952, "end_char_idx": 2977, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "755799a0-a80d-48ed-b961-103bbed23481": {"__data__": {"id_": "755799a0-a80d-48ed-b961-103bbed23481", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2b1436a0-8117-433a-89ab-01ac92bfa271", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "2c007e2c843e0c490c6e0d256bc70fb86ef19f316c1519dcedb59ba278ca4dda", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f2af6b1-711c-4f38-bee6-1f6fcc4fa583", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/graph.py", "file_name": "graph.py", "file_type": "text/x-python", "file_size": 3089, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "3030749870890d62198768c2a961adea1d642314ee4ddddd7c2d78857528b5f2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "except Exception as e:\n        log_event(\"graph_summary_fail\", {\"error\": str(e)})\n        return \"\"", "mimetype": "text/plain", "start_char_idx": 2983, "end_char_idx": 3082, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "59a6496b-fb3d-4918-95e6-d573b974705f": {"__data__": {"id_": "59a6496b-fb3d-4918-95e6-d573b974705f", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a666f235-dca5-434f-a0ed-5218b0fba946", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "a310a55d87c6f1582ec21a2d021ca3b87ae0febfee4880ebb7000c76ba306e8a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f8a7c431-5fe3-4137-9389-0485bba938f8", "node_type": "1", "metadata": {}, "hash": "a2f0f2c6c30e487409475ab6d741f9cbe937c994930b8794baf7ed17a2b591ef", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: services/indexer.py\n# Purpose: Recursively index code and docs with tier metadata for prioritized semantic search.\n# Stack: LlamaIndex, OpenAI, Python 3.12+\n# Usage:\n#   - For dev, run: WIPE_INDEX=true python services/indexer.py\n#   - For prod, run WITHOUT WIPE_INDEX, and only if you intend to update the index.\n\nimport os\nimport glob\nimport sys\nfrom pathlib import Path\nfrom llama_index.core import SimpleDirectoryReader, VectorStoreIndex, Document\nfrom llama_index.embeddings.openai import OpenAIEmbedding\nfrom llama_index.core.node_parser import CodeSplitter, SentenceSplitter\nfrom services.config import INDEX_DIR\n\nimport shutil\n\n# --- Guard: WIPE_INDEX only deletes if explicitly set ---\nWIPE_INDEX = os.getenv(\"WIPE_INDEX\", \"false\").lower() == \"true\"", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 765, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f8a7c431-5fe3-4137-9389-0485bba938f8": {"__data__": {"id_": "f8a7c431-5fe3-4137-9389-0485bba938f8", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a666f235-dca5-434f-a0ed-5218b0fba946", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "a310a55d87c6f1582ec21a2d021ca3b87ae0febfee4880ebb7000c76ba306e8a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "59a6496b-fb3d-4918-95e6-d573b974705f", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "15395a1b882615d7c56a79095fa582a197edcaaa46e99d5e3a34dba05e6d2caf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "414d859e-6a52-4ca2-a1e7-d49cb3e8aa32", "node_type": "1", "metadata": {}, "hash": "ec6b7d67157f571c98020ce8d1671e4b7d190e4c206eedfbc4152da52bdc0b69", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if WIPE_INDEX:\n    if os.path.exists(INDEX_DIR):\n        print(\"WARNING: WIPE_INDEX is set\u2014deleting and recreating index directory.\")\n        shutil.rmtree(INDEX_DIR)\n    os.makedirs(INDEX_DIR, exist_ok=True)\nelse:\n    print(\"WIPE_INDEX not set\u2014existing index will be updated or extended if run.\")\n\n# ---- 1. Define priority tiers and associated paths ----\nPRIORITY_INDEX_PATHS = [\n    (\"global\", [\"./docs/generated/global_context.md\", \"./docs/generated/global_context.auto.md\"]),\n    (\"context\", [\"./context/\"]),  # Cross-project overlays\n    (\"project_summary\", [\"./docs/PROJECT_SUMMARY.md\", \"./docs/RELAY_CODE_UPDATE.md\", \"./docs/context-commandcenter.md\"]),\n    (\"project_docs\", [\"./docs/imported/\", \"./docs/kb/\", \"./docs/*.md\"]),\n    (\"code\", [\"./services/\", \"./routes/\", \"./frontend/\", \"./src/\", \"./backend/\"]),\n]\n\n# ---- 2. Exclude Rules for Files, Extensions, and Folders ----\nIGNORED_FILENAMES = {\n    \"package-lock.json\", \"yarn.lock\", \".env\", \".DS_Store\", \".gitignore\",\n}", "mimetype": "text/plain", "start_char_idx": 766, "end_char_idx": 1747, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "414d859e-6a52-4ca2-a1e7-d49cb3e8aa32": {"__data__": {"id_": "414d859e-6a52-4ca2-a1e7-d49cb3e8aa32", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a666f235-dca5-434f-a0ed-5218b0fba946", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "a310a55d87c6f1582ec21a2d021ca3b87ae0febfee4880ebb7000c76ba306e8a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f8a7c431-5fe3-4137-9389-0485bba938f8", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "ce55b1bfba7c3932db9eb407e8754e59cb50a56d104a2a936b6695becf8dbde5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5f50ea3d-df11-4435-afb4-234847694bfc", "node_type": "1", "metadata": {}, "hash": "51ea6e08f41a181858d4a8447f035829bbec3652c30db78ec661a501c1240740", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "IGNORED_EXTENSIONS = {\n    \".lock\", \".log\", \".exe\", \".bin\", \".jpg\", \".jpeg\", \".png\", \".gif\", \".pdf\", \".ico\",\n}\nIGNORED_FOLDERS = {\n    \"node_modules\", \".git\", \"__pycache__\", \"dist\", \"build\", \".venv\", \"env\",\n}\nMAX_FILE_SIZE_MB = 2  # Optional: skip files over 2 MB (adjust as needed)", "mimetype": "text/plain", "start_char_idx": 1748, "end_char_idx": 2030, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5f50ea3d-df11-4435-afb4-234847694bfc": {"__data__": {"id_": "5f50ea3d-df11-4435-afb4-234847694bfc", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a666f235-dca5-434f-a0ed-5218b0fba946", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "a310a55d87c6f1582ec21a2d021ca3b87ae0febfee4880ebb7000c76ba306e8a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "414d859e-6a52-4ca2-a1e7-d49cb3e8aa32", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "ae615d7d3b725393c2301304ce38559539fad95672305a80d7d50af64657b580", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4a7ae048-efac-4bb6-bc87-4cc87bf50646", "node_type": "1", "metadata": {}, "hash": "2ae3e6e94e38c860979de258a489a10d14d8bc05633cea0a0bd5d87c83356dc0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def should_index_file(filepath: str, tier: str) -> bool:\n    \"\"\"Returns True if a file should be indexed, otherwise False.\"\"\"\n    filename = os.path.basename(filepath)\n    ext = os.path.splitext(filename)[1].lower()\n    if filename in IGNORED_FILENAMES or ext in IGNORED_EXTENSIONS:\n        return False\n    # Ignore by folder in path\n    parts = filepath.replace(\"\\\\\", \"/\").split(\"/\")\n    if any(folder in parts for folder in IGNORED_FOLDERS):\n        return False\n    # Ignore big files\n    if os.path.isfile(filepath):\n        if os.path.getsize(filepath) > MAX_FILE_SIZE_MB * 1024 * 1024:\n            return False\n    # For code tier, allow a broad set of code/doc files for review\n    if tier == \"code\":\n        return ext in {\".py\", \".js\", \".ts\", \".tsx\", \".java\", \".go\", \".cpp\", \".json\", \".md\"}\n    return True\n\n# ---- 3. Embedding Model ----\nmodel_name = (\n    os.getenv(\"KB_EMBED_MODEL\")\n    or os.getenv(\"OPENAI_EMBED_MODEL\")\n    or \"text-embedding-3-large\"\n)", "mimetype": "text/plain", "start_char_idx": 2032, "end_char_idx": 3000, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4a7ae048-efac-4bb6-bc87-4cc87bf50646": {"__data__": {"id_": "4a7ae048-efac-4bb6-bc87-4cc87bf50646", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a666f235-dca5-434f-a0ed-5218b0fba946", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "a310a55d87c6f1582ec21a2d021ca3b87ae0febfee4880ebb7000c76ba306e8a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5f50ea3d-df11-4435-afb4-234847694bfc", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "1105a50825a5fa8da38e28f2f2a32e8519ad0fca7ac01bfa0c188fe8cb7dc23a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fce6bef7-f0bb-4c2c-a2ec-1275586627d8", "node_type": "1", "metadata": {}, "hash": "7f82ecf969cb25d03e2258cf3f4f873d67ebb8d80775c2fcfebcb504cb03067b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "embed_model = OpenAIEmbedding(\n    model=model_name,\n    dimensions=3072 if model_name == \"text-embedding-3-large\" else None\n)\n\n# ---- 4. Language detection for code files ----\ndef get_language_from_path(file_path: str) -> str:\n    \"\"\"Returns the code language for a given file path by extension.\"\"\"\n    file_path = file_path.lower()\n    if file_path.endswith(\".py\"):\n        return \"python\"\n    elif file_path.endswith((\".js\", \".jsx\")):\n        return \"javascript\"\n    elif file_path.endswith((\".ts\", \".tsx\")):\n        return \"typescript\"\n    elif file_path.endswith(\".java\"):\n        return \"java\"\n    elif file_path.endswith(\".go\"):\n        return \"go\"\n    elif file_path.endswith(\".cpp\"):\n        return \"cpp\"\n    return \"python\"  # fallback", "mimetype": "text/plain", "start_char_idx": 3001, "end_char_idx": 3746, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fce6bef7-f0bb-4c2c-a2ec-1275586627d8": {"__data__": {"id_": "fce6bef7-f0bb-4c2c-a2ec-1275586627d8", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a666f235-dca5-434f-a0ed-5218b0fba946", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "a310a55d87c6f1582ec21a2d021ca3b87ae0febfee4880ebb7000c76ba306e8a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4a7ae048-efac-4bb6-bc87-4cc87bf50646", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "6c64d6addee23d51f2978ad2d1c481f2094d62bcd0ca4f8ed93c786db9b45a57", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "24695976-1410-4da9-af3d-397fda177292", "node_type": "1", "metadata": {}, "hash": "85dd105bf5799d5cdea49137eedc8f55dbabc354c5f06ac89fbdf06a954909d6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def collect_code_context(files: list[str], base_dir: str = \"./\") -> str:\n    \"\"\"Read and join contents of files for prompt context.\"\"\"\n    contents: list[str] = []\n    for f in files:\n        path = Path(base_dir) / f\n        if path.exists() and path.is_file():\n            try:\n                contents.append(f\"### {f}\\n\" + path.read_text())\n            except Exception:\n                continue\n    return \"\\n\\n\".join(contents)", "mimetype": "text/plain", "start_char_idx": 3748, "end_char_idx": 4180, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "24695976-1410-4da9-af3d-397fda177292": {"__data__": {"id_": "24695976-1410-4da9-af3d-397fda177292", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a666f235-dca5-434f-a0ed-5218b0fba946", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "a310a55d87c6f1582ec21a2d021ca3b87ae0febfee4880ebb7000c76ba306e8a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fce6bef7-f0bb-4c2c-a2ec-1275586627d8", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "eaef2d017ad4446a8cfa70132ad6bd440be7ea6d961cb12b1e252449e242c9ea", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "baecafb1-fe67-41f6-b290-1bb0c365f392", "node_type": "1", "metadata": {}, "hash": "6f2add228d7fdadd6337c11426eb5f2a49302f6d244ad1610490ce9c60a31604", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def index_directories():", "mimetype": "text/plain", "start_char_idx": 4182, "end_char_idx": 4206, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "baecafb1-fe67-41f6-b290-1bb0c365f392": {"__data__": {"id_": "baecafb1-fe67-41f6-b290-1bb0c365f392", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a666f235-dca5-434f-a0ed-5218b0fba946", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "a310a55d87c6f1582ec21a2d021ca3b87ae0febfee4880ebb7000c76ba306e8a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "24695976-1410-4da9-af3d-397fda177292", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "292377c972fe7d0eb5edccf46746fa4c5067d10ff863b23f72816d30b32e435a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f5e43563-2ce7-4c46-a0d1-e3fea5d3dc2c", "node_type": "1", "metadata": {}, "hash": "4c190392a242c8e3246afe9f02a5061228c0485d10e0fd19138fad143e27d11a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"\"\"Scans all PRIORITY_INDEX_PATHS, splits, tags with tier, and embeds for semantic search.\"\"\"\n    documents = []\n    print(f\"[Indexer] Starting directory scan for priority tiers...\")", "mimetype": "text/plain", "start_char_idx": 4211, "end_char_idx": 4393, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f5e43563-2ce7-4c46-a0d1-e3fea5d3dc2c": {"__data__": {"id_": "f5e43563-2ce7-4c46-a0d1-e3fea5d3dc2c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a666f235-dca5-434f-a0ed-5218b0fba946", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "a310a55d87c6f1582ec21a2d021ca3b87ae0febfee4880ebb7000c76ba306e8a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "baecafb1-fe67-41f6-b290-1bb0c365f392", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "6f5429784629819f45362f064b5c4eda994e5cf1dfe8252f74490a3d9dbe6e6f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "33795aa5-5498-4d61-a914-4a5a4a924717", "node_type": "1", "metadata": {}, "hash": "4328f694e0174b1a979f62aba16cf7844d4e8be16bd3ad902711bc2c0d8e0f5d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "for tier, paths in PRIORITY_INDEX_PATHS:", "mimetype": "text/plain", "start_char_idx": 4398, "end_char_idx": 4438, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "33795aa5-5498-4d61-a914-4a5a4a924717": {"__data__": {"id_": "33795aa5-5498-4d61-a914-4a5a4a924717", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a666f235-dca5-434f-a0ed-5218b0fba946", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "a310a55d87c6f1582ec21a2d021ca3b87ae0febfee4880ebb7000c76ba306e8a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f5e43563-2ce7-4c46-a0d1-e3fea5d3dc2c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "c7e3d121a46312354c1f4d14e847f4859777b658b66fef4c5984562a54f0f990", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5736b3fa-57ae-4e17-978a-bcb3508a5ddf", "node_type": "1", "metadata": {}, "hash": "b0e986d162963886b95659afda473766dd173553d05d6958c32796a656b84d3c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "for path in paths:", "mimetype": "text/plain", "start_char_idx": 4447, "end_char_idx": 4465, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5736b3fa-57ae-4e17-978a-bcb3508a5ddf": {"__data__": {"id_": "5736b3fa-57ae-4e17-978a-bcb3508a5ddf", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a666f235-dca5-434f-a0ed-5218b0fba946", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "a310a55d87c6f1582ec21a2d021ca3b87ae0febfee4880ebb7000c76ba306e8a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "33795aa5-5498-4d61-a914-4a5a4a924717", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "0de9ca2f242db8b6a482d6dfe64151925fb197ca14cc5ad3b536a34b2570722e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "05ec0a68-e250-412e-9d55-48ea1ee42099", "node_type": "1", "metadata": {}, "hash": "267d40dc656c91cf9d825357811d093adafdb1b990c3dbf68f3b6b4f5253a729", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if path.endswith(\"/\"):\n                if os.path.exists(path):\n                    docs = SimpleDirectoryReader(path, recursive=True).load_data()\n                    filtered_docs = []\n                    for d in docs:\n                        file_path = d.metadata.get(\"file_path\") or d.metadata.get(\"filename\") or \"\"\n                        if should_index_file(file_path, tier):\n                            d.metadata = d.metadata or {}\n                            d.metadata[\"tier\"] = tier\n                            filtered_docs.append(d)\n                    documents.extend(filtered_docs)", "mimetype": "text/plain", "start_char_idx": 4478, "end_char_idx": 5077, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "05ec0a68-e250-412e-9d55-48ea1ee42099": {"__data__": {"id_": "05ec0a68-e250-412e-9d55-48ea1ee42099", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a666f235-dca5-434f-a0ed-5218b0fba946", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "a310a55d87c6f1582ec21a2d021ca3b87ae0febfee4880ebb7000c76ba306e8a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5736b3fa-57ae-4e17-978a-bcb3508a5ddf", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "a8a09759d49b6581b1f4e6d3e4af9eef5862f6a7632d53a585a566e9e4860b8d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c95604aa-e6f4-4f00-96e7-24427132c373", "node_type": "1", "metadata": {}, "hash": "2e1c12362478e8b9d8ca197c4ccd60773bd013c9efe4036e433cc7e908e53044", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "elif \"*\" in path or path.endswith(\".md\"):\n                for f in glob.glob(path):\n                    if os.path.isfile(f) and should_index_file(f, tier):\n                        with open(f, \"r\", encoding=\"utf-8\") as file:\n                            text = file.read()\n                        doc = Document(\n                            text=text,\n                            metadata={\"tier\": tier, \"file_path\": f}\n                        )\n                        documents.append(doc)", "mimetype": "text/plain", "start_char_idx": 5090, "end_char_idx": 5581, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c95604aa-e6f4-4f00-96e7-24427132c373": {"__data__": {"id_": "c95604aa-e6f4-4f00-96e7-24427132c373", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a666f235-dca5-434f-a0ed-5218b0fba946", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "a310a55d87c6f1582ec21a2d021ca3b87ae0febfee4880ebb7000c76ba306e8a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "05ec0a68-e250-412e-9d55-48ea1ee42099", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "af9f5dd6356a53250ad3c2b9e67ed03e9c9b223072a76a1eb5706e0d4761d181", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "53799397-28be-4604-946d-f7ab9729b1f9", "node_type": "1", "metadata": {}, "hash": "51147633586a7cacb59630c038a3c2943aee8d2147c16ab28d621982ba9909d2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "print(f\"[Indexer] Total documents collected: {len(documents)}\")\n\n    # --- 5. Chunking: Get nodes (split text/code), flatten for indexing ---\n    all_chunked_nodes = []\n    text_splitter = SentenceSplitter(chunk_size=1024)\n    for doc in documents:\n        file_path = doc.metadata.get('file_path', '')\n        if file_path.endswith(('.py', '.js', '.ts', '.tsx', '.java', '.go', '.cpp')):\n            language = get_language_from_path(file_path)\n            code_splitter = CodeSplitter(language=language, max_chars=1024, chunk_lines=30)\n            nodes = code_splitter.get_nodes_from_documents([doc])\n            all_chunked_nodes.extend(nodes)\n        else:\n            nodes = text_splitter.get_nodes_from_documents([doc])\n            all_chunked_nodes.extend(nodes)\n    print(f\"[Indexer] Total nodes to index: {len(all_chunked_nodes)}\")\n\n    if not all_chunked_nodes:\n        print(\"[ERROR] No nodes to index! Aborting persist step.\")\n        sys.exit(1)\n\n    # --- 6. Index & Persist ---", "mimetype": "text/plain", "start_char_idx": 5586, "end_char_idx": 6580, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "53799397-28be-4604-946d-f7ab9729b1f9": {"__data__": {"id_": "53799397-28be-4604-946d-f7ab9729b1f9", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a666f235-dca5-434f-a0ed-5218b0fba946", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "a310a55d87c6f1582ec21a2d021ca3b87ae0febfee4880ebb7000c76ba306e8a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c95604aa-e6f4-4f00-96e7-24427132c373", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "44b718e25da38c122eaf49ae97d89fd67adfc592a7eaf815bdbaa637b5abaf45", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "77ca0d4f-906d-4ebd-b1b8-7635a226b11e", "node_type": "1", "metadata": {}, "hash": "cc95b192869dccba2557421e6547e854faedcc6a794ebe9431be3f3becc354c1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "index = VectorStoreIndex(\n        nodes=all_chunked_nodes,\n        embed_model=embed_model,\n        show_progress=True\n    )\n    index.storage_context.persist(persist_dir=\"./data/index\")\n    index.storage_context.persist(persist_dir=str(INDEX_DIR))\n    print(\"[Indexer] Indexing complete! Prioritized tiers saved to ./data/index.\")", "mimetype": "text/plain", "start_char_idx": 6585, "end_char_idx": 6916, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "77ca0d4f-906d-4ebd-b1b8-7635a226b11e": {"__data__": {"id_": "77ca0d4f-906d-4ebd-b1b8-7635a226b11e", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a666f235-dca5-434f-a0ed-5218b0fba946", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "a310a55d87c6f1582ec21a2d021ca3b87ae0febfee4880ebb7000c76ba306e8a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "53799397-28be-4604-946d-f7ab9729b1f9", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/indexer.py", "file_name": "indexer.py", "file_type": "text/x-python", "file_size": 6973, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "1666ebc365124f8a2b6eeb4a7407647808775a5f1a08cca72662a6eba714b2df", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if __name__ == \"__main__\":\n    index_directories()", "mimetype": "text/plain", "start_char_idx": 6918, "end_char_idx": 6968, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a2b3fc7f-c005-4983-9725-3659d0ee54d9": {"__data__": {"id_": "a2b3fc7f-c005-4983-9725-3659d0ee54d9", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "bf70458ac56cd4eebc965f990732e5e335fc9d8f75c12baf1a99cbebaedf434a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "47bcaa45-7db8-49fd-a06e-e6f0b24a7bb4", "node_type": "1", "metadata": {}, "hash": "427f2fc4dbb6efd5d0cfb2c5409fc1fa600cfb49b456c11ba122f8f3f60dd82f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n# File: services/kb.py\n# Purpose: Full-featured semantic KB for LlamaIndex (robust chunking, tiering, filtering, search)\n#           - Aggressive junk filtering & deduplication\n#           - Tier-aware, content-boosted ranking\n#           - Context-rich node metadata for intelligent agent answers\n#           - CLI & debug\n# Updated: 2025-06-30 (Debug hardening for startup hangs)\n# \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\nimport os\nimport json\nimport shutil\nimport logging\nfrom pathlib import Path\nfrom typing import List, Optional, Dict, Any\n\nfrom services.config import INDEX_DIR, INDEX_ROOT\n\nfrom llama_index.core import (\n    SimpleDirectoryReader,\n    StorageContext,\n    VectorStoreIndex,\n    load_index_from_storage,\n)\nfrom llama_index.core.extractors import TitleExtractor\nfrom llama_index.core.ingestion import IngestionPipeline\nfrom llama_index.core.node_parser import SentenceSplitter", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1016, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "47bcaa45-7db8-49fd-a06e-e6f0b24a7bb4": {"__data__": {"id_": "47bcaa45-7db8-49fd-a06e-e6f0b24a7bb4", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "bf70458ac56cd4eebc965f990732e5e335fc9d8f75c12baf1a99cbebaedf434a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a2b3fc7f-c005-4983-9725-3659d0ee54d9", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "f21dc692d6034649215f45dd1a10160057e36decc477aed9a615ab81571c98fd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2e7b5211-7bec-4bbd-ba1e-81a3368db65a", "node_type": "1", "metadata": {}, "hash": "9b68a34d298adac9464f9ac6ff78f3a525a7d04e612f9b50c43e1ab19bcae4dd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "from llama_index.embeddings.openai import OpenAIEmbedding\n\n# \u2500\u2500\u2500 Logging \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nlogging.basicConfig(\n    level=logging.INFO,\n    format=\"%(asctime)s %(levelname)-7s %(name)s  %(message)s\",\n    datefmt=\"%Y-%m-%d %H:%M:%S\",\n)\nlogger = logging.getLogger(__name__)\nlogger.info(\"\ud83d\udd25 Robust KB loaded (Echo edition)\")\n\n# \u2500\u2500\u2500 Model configuration \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nMODEL_NAME = (\n    os.getenv(\"KB_EMBED_MODEL\")\n    or os.getenv(\"OPENAI_EMBED_MODEL\")\n    or \"text-embedding-3-large\"\n)\nif MODEL_NAME == \"text-embedding-3-large\":\n    EMBED_MODEL = OpenAIEmbedding(model=MODEL_NAME, dimensions=3072)\nelse:\n    EMBED_MODEL = OpenAIEmbedding(model=MODEL_NAME)\n\n# \u2500\u2500\u2500 Aggressive filtering \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500", "mimetype": "text/plain", "start_char_idx": 1017, "end_char_idx": 1831, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2e7b5211-7bec-4bbd-ba1e-81a3368db65a": {"__data__": {"id_": "2e7b5211-7bec-4bbd-ba1e-81a3368db65a", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "bf70458ac56cd4eebc965f990732e5e335fc9d8f75c12baf1a99cbebaedf434a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "47bcaa45-7db8-49fd-a06e-e6f0b24a7bb4", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "9e0aa57ea15e60fafd948fd8086438ea900c10280e920d9420e76eece2cca490", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "10e3babd-88b3-4681-bccc-d5567a2e4bdc", "node_type": "1", "metadata": {}, "hash": "9ac1323a6f05e6fd1b555c4251f2e9b2fca689cac928136570f9ec77a278cddd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "IGNORED_FILENAMES = {\n    \"package-lock.json\", \"yarn.lock\", \"pnpm-lock.yaml\", \".env\", \".DS_Store\", \".gitignore\",\n    \"poetry.lock\", \"Pipfile.lock\", \"requirements.txt\", \".dockerignore\",\n    \"Dockerfile\", \"Makefile\", \"tsconfig.json\", \"jsconfig.json\", \"node_modules\",\n    \"README.md\", \"LICENSE\", \"Thumbs.db\", \"desktop.ini\", \"mypy.ini\", \"pyrightconfig.json\",\n}\nIGNORED_EXTENSIONS = {\n    \".lock\", \".log\", \".exe\", \".bin\", \".jpg\", \".jpeg\", \".png\", \".gif\", \".pdf\", \".ico\",\n    \".tgz\", \".zip\", \".tar\", \".gz\", \".mp4\", \".mov\", \".wav\", \".pyc\", \".so\", \".dll\",\n}\nIGNORED_FOLDERS = {\n    \"node_modules\", \".git\", \"__pycache__\", \"dist\", \"build\", \".venv\", \"env\", \".mypy_cache\", \".pytest_cache\",\n}\nMAX_FILE_SIZE_MB = 2", "mimetype": "text/plain", "start_char_idx": 1832, "end_char_idx": 2532, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "10e3babd-88b3-4681-bccc-d5567a2e4bdc": {"__data__": {"id_": "10e3babd-88b3-4681-bccc-d5567a2e4bdc", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "bf70458ac56cd4eebc965f990732e5e335fc9d8f75c12baf1a99cbebaedf434a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2e7b5211-7bec-4bbd-ba1e-81a3368db65a", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "475dfca64984546a3984bc1c308d60c30d64462372f6af3f33925c8626e34dcb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a8c515ff-a960-4f63-b961-2160be16ccc1", "node_type": "1", "metadata": {}, "hash": "ace247de50e36ff9aee41854fed08cc280f6e627fbbdbf0a48b9cb28ec2be007", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def should_index_file(filepath: str, tier: str) -> bool:\n    filename = os.path.basename(filepath)\n    ext = os.path.splitext(filename)[1].lower()\n    if filename in IGNORED_FILENAMES or ext in IGNORED_EXTENSIONS:\n        return False\n    parts = filepath.replace(\"\\\\\", \"/\").split(\"/\")\n    if any(folder in parts for folder in IGNORED_FOLDERS):\n        return False\n    if os.path.isfile(filepath):\n        if os.path.getsize(filepath) > MAX_FILE_SIZE_MB * 1024 * 1024:\n            return False\n    if tier == \"code\":\n        return ext in {\".py\", \".js\", \".ts\", \".tsx\", \".java\", \".go\", \".cpp\", \".json\", \".md\"}\n    return True\n\n# \u2500\u2500\u2500 Index cache \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n_INDEX_CACHE: Optional[VectorStoreIndex] = None\n\n# \u2500\u2500\u2500 Scrub any stale model folders \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500", "mimetype": "text/plain", "start_char_idx": 2534, "end_char_idx": 3365, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a8c515ff-a960-4f63-b961-2160be16ccc1": {"__data__": {"id_": "a8c515ff-a960-4f63-b961-2160be16ccc1", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "bf70458ac56cd4eebc965f990732e5e335fc9d8f75c12baf1a99cbebaedf434a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "10e3babd-88b3-4681-bccc-d5567a2e4bdc", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "d2a44ef529619a29ce749546c6e083858badf5e71c22b9b5fbb08114f9fcf912", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "36bb4775-952c-4d74-9207-3aa34e10b781", "node_type": "1", "metadata": {}, "hash": "2036f4ae667586ab27f96fce6d4c1205962b3675875aa6c1e243a8bf8e32be83", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "for path in INDEX_ROOT.iterdir():\n    if path.is_dir() and path.name != MODEL_NAME:\n        logger.warning(\"Removing stale index folder %s\", path)\n        shutil.rmtree(path, ignore_errors=True)\n\n# \u2500\u2500\u2500 Ingestion pipeline \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nROOT = Path(__file__).resolve().parent\nCODE_DIRS = [ROOT.parent / p for p in (\"src\", \"backend\", \"frontend\", \"services\", \"routes\")]\nDOCS_DIR = ROOT.parent / \"docs\"\nCHUNK_SIZE, CHUNK_OVERLAP = 1024, 200\n\nINGEST_PIPELINE = IngestionPipeline(\n    transformations=[\n        TitleExtractor(llm=None),\n        SentenceSplitter(chunk_size=CHUNK_SIZE, chunk_overlap=CHUNK_OVERLAP),\n        EMBED_MODEL,\n    ]\n)\n\n# \u2500\u2500\u2500 Dimension helpers \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\ndef _vector_dim_current() -> int:\n    return len(EMBED_MODEL.get_text_embedding(\"dim_check\"))", "mimetype": "text/plain", "start_char_idx": 3366, "end_char_idx": 4214, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "36bb4775-952c-4d74-9207-3aa34e10b781": {"__data__": {"id_": "36bb4775-952c-4d74-9207-3aa34e10b781", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "bf70458ac56cd4eebc965f990732e5e335fc9d8f75c12baf1a99cbebaedf434a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a8c515ff-a960-4f63-b961-2160be16ccc1", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "1e78eac6cfd83c4d5a4c3deaf6fc61838117ac9f457a30f478cfb5123d2b3227", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d5631e2e-1118-45d3-a779-24c85fe903e5", "node_type": "1", "metadata": {}, "hash": "edcfffe53e6c9304d013c4d58d6132d244b39f2b976a5f49a05e52fd8f09f5d1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def _vector_dim_stored() -> int:\n    vs_file = INDEX_DIR / \"vector_store.json\"\n    if not vs_file.exists():\n        return -1\n    store = json.loads(vs_file.read_text())\n    for rec in store.values():\n        if isinstance(rec, dict) and isinstance(rec.get(\"embedding\"), list):\n            return len(rec[\"embedding\"])\n    return -1\n\nEXPECTED_DIM = None  # placeholder\n\ndef ensure_vector_dim_initialized():\n    global EXPECTED_DIM\n    if EXPECTED_DIM is None:\n        EXPECTED_DIM = _vector_dim_current()\n\n# \u2500\u2500\u2500 Public helpers \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\ndef index_is_valid() -> bool:\n    stored = _vector_dim_stored()\n    valid = stored == EXPECTED_DIM and stored > 0\n    logger.info(\"[index_is_valid] stored=%s current=%d \u2192 %s\", stored, EXPECTED_DIM, valid)\n    return valid", "mimetype": "text/plain", "start_char_idx": 4216, "end_char_idx": 5021, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d5631e2e-1118-45d3-a779-24c85fe903e5": {"__data__": {"id_": "d5631e2e-1118-45d3-a779-24c85fe903e5", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "bf70458ac56cd4eebc965f990732e5e335fc9d8f75c12baf1a99cbebaedf434a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "36bb4775-952c-4d74-9207-3aa34e10b781", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "d2974e4046d41fc61430d4e052bee08c75ecb8073669ecb3207faec6e1dce560", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ec1923c2-df1b-4855-8a0a-f336ab815318", "node_type": "1", "metadata": {}, "hash": "9c3db7021e3eed79b13f2c7eeebf3e0dc1f0d1fff887148878182d66a6aa287f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def embed_all(verbose: bool = False) -> None:", "mimetype": "text/plain", "start_char_idx": 5023, "end_char_idx": 5068, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ec1923c2-df1b-4855-8a0a-f336ab815318": {"__data__": {"id_": "ec1923c2-df1b-4855-8a0a-f336ab815318", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "bf70458ac56cd4eebc965f990732e5e335fc9d8f75c12baf1a99cbebaedf434a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d5631e2e-1118-45d3-a779-24c85fe903e5", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "ad69406aec14dafdaf3880e63c38658837729296f6c17fdb8d5be054f5053492", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d751cccc-ecb3-449a-9688-83bd9bf60b2a", "node_type": "1", "metadata": {}, "hash": "5a674f94ebb7381574f4a30dab34f7ba1d8ac5ea2ed6680fbca02b81bd526e9e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"\"\"Rebuild the full semantic index, applying file exclusion and content deduplication.\"\"\"\n    logger.info(\"\ud83d\udcda Re-indexing KB with model %s\", MODEL_NAME)\n\n    docs: List = []\n    tier_paths = [\n        (\"global\", [DOCS_DIR / \"generated/global_context.md\", DOCS_DIR / \"generated/global_context.auto.md\"]),\n        (\"context\", [ROOT.parent / \"context/\"]),\n        (\"project_summary\", [\n            DOCS_DIR / \"PROJECT_SUMMARY.md\",\n            DOCS_DIR / \"RELAY_CODE_UPDATE.md\",\n            DOCS_DIR / \"context-commandcenter.md\"\n        ]),\n        (\"project_docs\", [DOCS_DIR / \"imported/\", DOCS_DIR / \"kb/\", DOCS_DIR.glob(\"*.md\")]),\n        (\"code\", CODE_DIRS),\n    ]\n\n    # Aggressively filter and tag all docs with tier/metadata", "mimetype": "text/plain", "start_char_idx": 5073, "end_char_idx": 5799, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d751cccc-ecb3-449a-9688-83bd9bf60b2a": {"__data__": {"id_": "d751cccc-ecb3-449a-9688-83bd9bf60b2a", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "bf70458ac56cd4eebc965f990732e5e335fc9d8f75c12baf1a99cbebaedf434a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ec1923c2-df1b-4855-8a0a-f336ab815318", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "88f4c773a9bb1341fc4fb56c4db0edade2862cb6c861bf1dc31925b16a8ebc1b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "28d4aa8a-fc3c-4256-8001-ebf3989a8a4e", "node_type": "1", "metadata": {}, "hash": "b244776fff8c46e9caebda148bcb3c96e4cc766f689274396704355e3c2152aa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "for tier, paths in tier_paths:", "mimetype": "text/plain", "start_char_idx": 5804, "end_char_idx": 5834, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "28d4aa8a-fc3c-4256-8001-ebf3989a8a4e": {"__data__": {"id_": "28d4aa8a-fc3c-4256-8001-ebf3989a8a4e", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "bf70458ac56cd4eebc965f990732e5e335fc9d8f75c12baf1a99cbebaedf434a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d751cccc-ecb3-449a-9688-83bd9bf60b2a", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "844c4ba6559190f2fd056b8de2b4c2a33bbaeef8c2c6f6d589176721186d0295", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "152d65b6-df48-4693-bfef-f2d3545879db", "node_type": "1", "metadata": {}, "hash": "ca0f0e2c4e31c3de06c772f22a6f574a3213ab82e423b629411e351096806efa", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "for path in paths:\n            # Folder: Use LlamaIndex reader (recursively)", "mimetype": "text/plain", "start_char_idx": 5843, "end_char_idx": 5919, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "152d65b6-df48-4693-bfef-f2d3545879db": {"__data__": {"id_": "152d65b6-df48-4693-bfef-f2d3545879db", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "bf70458ac56cd4eebc965f990732e5e335fc9d8f75c12baf1a99cbebaedf434a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "28d4aa8a-fc3c-4256-8001-ebf3989a8a4e", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "5e6b01df74c9c973329bfd12b2dd3c5b3e2b145a32661e7a1cbc2960b3133efc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "052aab5a-bd42-400e-b9be-418cc0917e28", "node_type": "1", "metadata": {}, "hash": "7116ff60ff0a10267897f2fc3483b6fc86aed91edd722aa3ea9ee6c43515b8b8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if isinstance(path, Path) and path.is_dir():\n                docs_ = SimpleDirectoryReader(str(path), recursive=True).load_data() if path.exists() else []\n                docs_ = [d for d in docs_ if should_index_file(\n                    d.metadata.get(\"file_path\") or d.metadata.get(\"filename\") or \"\", tier)]\n                for d in docs_:\n                    d.metadata = d.metadata or {}\n                    d.metadata[\"tier\"] = tier\n                docs.extend(docs_)\n            # Glob or single file\n            elif hasattr(path, \"__iter__\") and not isinstance(path, str):\n                for f in path:\n                    if f and os.path.isfile(f) and should_index_file(str(f), tier):\n                        with open(f, \"r\", encoding=\"utf-8\") as file:\n                            text = file.read()\n                        from llama_index.core import Document\n                        doc = Document(text=text, metadata={\"tier\": tier, \"file_path\": str(f)})\n                        docs.append(doc)", "mimetype": "text/plain", "start_char_idx": 5932, "end_char_idx": 6943, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "052aab5a-bd42-400e-b9be-418cc0917e28": {"__data__": {"id_": "052aab5a-bd42-400e-b9be-418cc0917e28", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "bf70458ac56cd4eebc965f990732e5e335fc9d8f75c12baf1a99cbebaedf434a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "152d65b6-df48-4693-bfef-f2d3545879db", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "112f6956f1515916e2f3907ca3b6c0efea001de258deb2ce2bfd88aab656dc5d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8cee292e-0f75-47a9-924f-c6dc64853467", "node_type": "1", "metadata": {}, "hash": "63f4d6c0130949ab29bc5c14b97c8b34b3b69a697c76880c4f485e1d964712e8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "elif isinstance(path, Path) and path.is_file():\n                if should_index_file(str(path), tier):\n                    with open(path, \"r\", encoding=\"utf-8\") as file:\n                        text = file.read()\n                    from llama_index.core import Document\n                    doc = Document(text=text, metadata={\"tier\": tier, \"file_path\": str(path)})\n                    docs.append(doc)", "mimetype": "text/plain", "start_char_idx": 6956, "end_char_idx": 7359, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8cee292e-0f75-47a9-924f-c6dc64853467": {"__data__": {"id_": "8cee292e-0f75-47a9-924f-c6dc64853467", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "bf70458ac56cd4eebc965f990732e5e335fc9d8f75c12baf1a99cbebaedf434a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "052aab5a-bd42-400e-b9be-418cc0917e28", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "87ccaa700742d471c1c2d22573d741ba7fb1c91e1acb53e021d7bb28ff263bc0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "24f995f0-78c7-4641-a0b1-24207b3660f2", "node_type": "1", "metadata": {}, "hash": "ddd123677328fb5a59c7a9f9c6e1043aa8d9d365b95b1b5569b89aa2673a19e4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Deduplicate by file_path and text hash\n    seen = set()\n    deduped_docs = []\n    import hashlib\n    for d in docs:\n        fp = d.metadata.get(\"file_path\", \"NOFILE\")\n        content_hash = hashlib.md5(d.text.encode(\"utf-8\")).hexdigest()\n        key = (fp, content_hash)\n        if key not in seen:\n            seen.add(key)\n            deduped_docs.append(d)\n    docs = deduped_docs\n\n    # \u2500\u2500\u2500 NEW: Debug output for document loading \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n    logger.info(f\"[KB] Docs loaded for indexing: {len(docs)}\")\n    for d in docs[:5]:\n        logger.info(f\"[KB] Sample doc: {d.metadata.get('file_path')} ({len(d.text)} chars)\")\n    if len(docs) == 0:\n        logger.error(\"[KB] No valid docs to index! Aborting index build to avoid hang.\")\n        raise RuntimeError(\"No valid docs for KB index. Please check your docs/code directory population.\")\n\n    # \u2500\u2500\u2500 NEW: Wrap embedding in try/except for logging \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500", "mimetype": "text/plain", "start_char_idx": 7365, "end_char_idx": 8281, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "24f995f0-78c7-4641-a0b1-24207b3660f2": {"__data__": {"id_": "24f995f0-78c7-4641-a0b1-24207b3660f2", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "bf70458ac56cd4eebc965f990732e5e335fc9d8f75c12baf1a99cbebaedf434a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8cee292e-0f75-47a9-924f-c6dc64853467", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "7e13039084a2000fd0c060516274452a38b74eba087a65f089c53621c7a8486c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "963ddaeb-e1ad-4637-96ef-56c1ca3d1497", "node_type": "1", "metadata": {}, "hash": "3038aa62821288f45f17ce374e903ba964af2c5fe02cf4dc31425de327e92a59", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "try:\n        nodes = INGEST_PIPELINE.run(documents=docs)\n    except Exception as e:\n        logger.exception(\"[KB] Failed in INGEST_PIPELINE.run\")\n        raise\n\n    logger.info(\"Generated %d vector nodes\", len(nodes))\n    index = VectorStoreIndex(nodes=nodes, embed_model=EMBED_MODEL)\n    index.storage_context.persist(persist_dir=str(INDEX_DIR))\n    logger.info(\"\u2705 Index persisted \u2192 %s\", INDEX_DIR)", "mimetype": "text/plain", "start_char_idx": 8286, "end_char_idx": 8686, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "963ddaeb-e1ad-4637-96ef-56c1ca3d1497": {"__data__": {"id_": "963ddaeb-e1ad-4637-96ef-56c1ca3d1497", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "bf70458ac56cd4eebc965f990732e5e335fc9d8f75c12baf1a99cbebaedf434a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "24f995f0-78c7-4641-a0b1-24207b3660f2", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "d5319133acb8730b729224cedd32d7fcad9771ba6903e58810e3f334436ed8f6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "90403812-44e0-46d9-be67-38a6e2714b1f", "node_type": "1", "metadata": {}, "hash": "31a1b5dfd41f5584c4087286f02a6a280ffad9c4fd5bfb1f7771e16e2ff74d96", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def get_index() -> VectorStoreIndex:\n    \"\"\"Return a cached or loaded index, rebuilding if missing or mismatched.\"\"\"\n    global _INDEX_CACHE\n    if _INDEX_CACHE is not None and index_is_valid():\n        return _INDEX_CACHE\n    if not index_is_valid():\n        embed_all()\n    ctx = StorageContext.from_defaults(persist_dir=str(INDEX_DIR))\n    _INDEX_CACHE = load_index_from_storage(ctx, embed_model=EMBED_MODEL)\n    return _INDEX_CACHE\n\n# \u2500\u2500\u2500 Core search used by routes \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500", "mimetype": "text/plain", "start_char_idx": 8688, "end_char_idx": 9202, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "90403812-44e0-46d9-be67-38a6e2714b1f": {"__data__": {"id_": "90403812-44e0-46d9-be67-38a6e2714b1f", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "bf70458ac56cd4eebc965f990732e5e335fc9d8f75c12baf1a99cbebaedf434a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "963ddaeb-e1ad-4637-96ef-56c1ca3d1497", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "0c2e1a55a3c839978e8f15c30c59357c8b937d316534336869cf74064f276dc0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09f3da52-f881-4e3e-a0fc-534480631ac5", "node_type": "1", "metadata": {}, "hash": "4238bdc78c0f5157024e3d0f44c2cfb0afc3ee7e125f2f87279b8086501856dc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def search(\n    query: str,\n    k: int = 8,\n    search_type: str = \"all\",\n    score_threshold: Optional[float] = None,\n    user_id: Optional[str] = None,\n    explain: bool = False,\n    min_global: int = 1,\n) -> List[dict]:", "mimetype": "text/plain", "start_char_idx": 9203, "end_char_idx": 9425, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "09f3da52-f881-4e3e-a0fc-534480631ac5": {"__data__": {"id_": "09f3da52-f881-4e3e-a0fc-534480631ac5", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "bf70458ac56cd4eebc965f990732e5e335fc9d8f75c12baf1a99cbebaedf434a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "90403812-44e0-46d9-be67-38a6e2714b1f", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "02dd4a918c314bf5390463f50dc0ab7c7b3fdc7906af0d3335cde1296dadc8b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3b684c45-950a-4ef6-b4b9-05ded2e0432d", "node_type": "1", "metadata": {}, "hash": "9a7c7d43e38db331acf654a4c0a0af1c88983b4c25a179e1ca7d3d71737bfb76", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"\"\"\n    Tier-priority semantic search: returns top results ordered by tier.\n    - Always tries to surface global/context/project summary results first.\n    - Still returns code/project_docs if more space is available.\n    - Junk/unknown tier results are de-prioritized unless nothing else is found.\n    \"\"\"\n    PRIORITY_TIERS = [\n        \"global\", \"context\", \"project_summary\", \"project_docs\", \"code\",\n    ]\n\n    qe = get_index().as_query_engine(similarity_top_k=k * 3)\n    raw = qe.query(query)\n    tiered: Dict[str, List[Any]] = {tier: [] for tier in PRIORITY_TIERS}\n    unknown = []", "mimetype": "text/plain", "start_char_idx": 9430, "end_char_idx": 10015, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3b684c45-950a-4ef6-b4b9-05ded2e0432d": {"__data__": {"id_": "3b684c45-950a-4ef6-b4b9-05ded2e0432d", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "bf70458ac56cd4eebc965f990732e5e335fc9d8f75c12baf1a99cbebaedf434a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "09f3da52-f881-4e3e-a0fc-534480631ac5", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "b5af8b815c28a1aadb854f35e83950247572553d038169cbc89f01e75aab7fec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d5b075f2-38d7-4371-91a1-86a0e111c9ba", "node_type": "1", "metadata": {}, "hash": "9a8d6d1bf3b0a56619615cea9c73a549cca59a880e58548ce84f6beaeab813a5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "for n in getattr(raw, \"source_nodes\", []):\n        if score_threshold is not None and n.score < score_threshold:\n            continue\n        tier = n.node.metadata.get(\"tier\", \"unknown\")\n        hit = {\n            \"id\": n.node.node_id,\n            \"snippet\": n.node.text,\n            \"similarity\": n.score,\n            \"tier\": tier,\n            \"path\": n.node.metadata.get(\"file_path\"),\n            \"title\": n.node.metadata.get(\"title\", n.node.metadata.get(\"file_path\") or \"Untitled\"),\n            \"meta\": n.node.metadata,\n        }\n        if tier in PRIORITY_TIERS:\n            tiered[tier].append(hit)\n        else:\n            unknown.append(hit)\n\n    # 1. First, fill with all global/context/summary docs, up to at least min_global if available\n    prioritized = []\n    for tier in [\"global\", \"context\", \"project_summary\"]:\n        prioritized.extend(tiered[tier][:k])\n    if len(prioritized) < min_global:\n        for tier in [\"project_docs\"]:\n            prioritized.extend(tiered[tier][:k - len(prioritized)])", "mimetype": "text/plain", "start_char_idx": 10020, "end_char_idx": 11039, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d5b075f2-38d7-4371-91a1-86a0e111c9ba": {"__data__": {"id_": "d5b075f2-38d7-4371-91a1-86a0e111c9ba", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "bf70458ac56cd4eebc965f990732e5e335fc9d8f75c12baf1a99cbebaedf434a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b684c45-950a-4ef6-b4b9-05ded2e0432d", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "3b57b46fe94f76f85ffe60fa540c841df344359a79ff2255119f1d2146f4ef67", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3d7b14fb-d5a8-4b14-a90a-931425ad6ca9", "node_type": "1", "metadata": {}, "hash": "d1c1a3dc1eba7cd247dd1fc9d4eefc8c2bf1cf153bafe81ab3984e21a7e7bb63", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if len(prioritized) < k:\n        prioritized.extend(tiered[\"code\"][:k - len(prioritized)])\n    if len(prioritized) < k:\n        prioritized.extend(unknown[:(k - len(prioritized))])\n\n    # Remove exact duplicates (by snippet or file path)\n    seen = set()\n    out = []\n    for h in prioritized:\n        key = (h[\"snippet\"], h[\"path\"])\n        if key not in seen:\n            seen.add(key)\n            out.append(h)\n\n    # If explain, add debug info\n    if explain:\n        print(\"[KB Search Debug]\")\n        for idx, h in enumerate(out):\n            print(f\"{idx+1:2d}. {h['tier']}: {h['title']} (score={h['similarity']:.3f})\")\n            print(f\"    Path: {h['path']}\")\n            print(f\"    Snippet: {h['snippet'][:200].replace(chr(10),' ')}\")\n        print(f\"\\nReturned {len(out)} results (out of {len(prioritized)})\")\n\n    return out[:k]", "mimetype": "text/plain", "start_char_idx": 11044, "end_char_idx": 11887, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3d7b14fb-d5a8-4b14-a90a-931425ad6ca9": {"__data__": {"id_": "3d7b14fb-d5a8-4b14-a90a-931425ad6ca9", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "bf70458ac56cd4eebc965f990732e5e335fc9d8f75c12baf1a99cbebaedf434a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d5b075f2-38d7-4371-91a1-86a0e111c9ba", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "4abd6dd7019220fcef8ca94d720e304681bb4266250a45db91fc6a39caa1da88", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9a952462-c0a7-471f-b4e8-45085548232a", "node_type": "1", "metadata": {}, "hash": "b2f89c750386faa3d2e438e655e79acd54ec47738038edcf20fda2c11ec588dc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def api_search(query: str, k: int = 4, search_type: str = \"all\") -> List[dict]:\n    return search(query=query, k=k, search_type=search_type)\n\ndef query_index(query: str, k: int = 4) -> str:\n    \"\"\"Return formatted search snippets for a query.\"\"\"\n    results = search(query, k=k)\n    return \"\\n\\n\".join(f\"{r['title']}:\\n{r['snippet']}\" for r in results)\n\ndef api_reindex(verbose: bool = False) -> dict:\n    global _INDEX_CACHE\n    embed_all(verbose=verbose)\n    _INDEX_CACHE = None\n    return {\n        \"status\": \"ok\",\n        \"message\": \"Re-index complete\",\n        \"index_dir\": str(INDEX_DIR),\n        \"model\": MODEL_NAME,\n    }\n\ndef get_recent_summaries(user_id: str) -> list[str]:\n    return [\"No summary implemented yet.\"]\n\n# \u2500\u2500\u2500 CLI tools & debugging \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500", "mimetype": "text/plain", "start_char_idx": 11889, "end_char_idx": 12694, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9a952462-c0a7-471f-b4e8-45085548232a": {"__data__": {"id_": "9a952462-c0a7-471f-b4e8-45085548232a", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "bf70458ac56cd4eebc965f990732e5e335fc9d8f75c12baf1a99cbebaedf434a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3d7b14fb-d5a8-4b14-a90a-931425ad6ca9", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 14796, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "2eb5e5e8af63e251b6aa1e080859cf53b3e57641a087f123f4def8860a9f2287", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def _kb_cli():\n    import sys\n    import time\n    if len(sys.argv) > 1 and sys.argv[1] == \"search\":\n        q = \" \".join(sys.argv[2:]) or \"test\"\n        print(f\"\\n[KB CLI] Query: {q}\\n\")\n        t0 = time.time()\n        hits = search(q, k=10, explain=True)\n        print(f\"\u23f1\ufe0f  Search time: {time.time() - t0:.2f}s\\n\")\n        for h in hits:\n            print(f\"{h['title']} (score={h['similarity']:.2f}): {h['snippet'][:120].replace(chr(10),' ')}\u2026\")\n    else:\n        print(\"[KB CLI] Rebuilding index...\")\n        embed_all(verbose=True)\n        print(\"Index rebuild complete.\")\n\nif __name__ == \"__main__\":\n    _kb_cli()", "mimetype": "text/plain", "start_char_idx": 12695, "end_char_idx": 13315, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "331a17c2-a6b2-49d8-80c2-8f51e16f9c92": {"__data__": {"id_": "331a17c2-a6b2-49d8-80c2-8f51e16f9c92", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/logger.py", "file_name": "logger.py", "file_type": "text/x-python", "file_size": 546, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2dfefa9c-8e8c-4d89-b6ff-dd9955e1ee8d", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/logger.py", "file_name": "logger.py", "file_type": "text/x-python", "file_size": 546, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "b0e0d1d1424992147b326465648b1d852095cc6dd4a852552b391b72f3bc7897", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# services/logger.py\r\n\r\nimport logging\r\nfrom datetime import datetime\r\n\r\n# Basic logging config\r\nlogging.basicConfig(\r\n    level=logging.INFO,\r\n    format=\"%(asctime)s - %(levelname)s - %(message)s\",\r\n)\r\n\r\ndef log_info(message: str):\r\n    logging.info(message)\r\n\r\ndef log_warning(message: str):\r\n    logging.warning(message)\r\n\r\ndef log_error(message: str):\r\n    logging.error(message)\r\n\r\ndef log_event(event: str, data: dict = {}):\r\n    timestamp = datetime.utcnow().isoformat()\r\n    logging.info(f\"{timestamp} - EVENT: {event} | DATA: {data}\")", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 544, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "82a46837-f211-4bfe-92aa-f52312498e69": {"__data__": {"id_": "82a46837-f211-4bfe-92aa-f52312498e69", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/logs.py", "file_name": "logs.py", "file_type": "text/x-python", "file_size": 1046, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8c2c9253-c07d-427b-9983-26b4a3030368", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/logs.py", "file_name": "logs.py", "file_type": "text/x-python", "file_size": 1046, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "0ee4d6f27b2623a84cd48401baf0b231777ac137d9a246974da6c179bf599b15", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4fb3ba42-e65a-4f7c-ad44-ad83a91a38b2", "node_type": "1", "metadata": {}, "hash": "2cbe34354d7d06cb429d537dd9259746912464f56a7499ec5a4acf2a53d702f4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# services/logs.py\nfrom datetime import datetime\nimport json\nimport pathlib\nimport requests\n\nLOG_PATH = pathlib.Path(\"logs/session_log.jsonl\")\nLOG_PATH.parent.mkdir(parents=True, exist_ok=True)\n\n# === Basic logging ===\ndef log_entry(source: str, message: str):\n    \"\"\"\n    Write a new line to the session log.\n    \"\"\"\n    entry = {\n        \"time\": datetime.utcnow().isoformat(),\n        \"source\": source,\n        \"message\": message,\n    }\n    with LOG_PATH.open(\"a\", encoding=\"utf-8\") as f:\n        f.write(json.dumps(entry) + \"\\n\")\n\n# === Retrieve recent logs ===\ndef get_recent_logs(n=100):\n    if not LOG_PATH.exists():\n        return []\n    lines = LOG_PATH.read_text(encoding=\"utf-8\").splitlines()\n    return [json.loads(line) for line in lines[-n:]]\n\n# === Smart logger: log and auto-update context ===", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 808, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4fb3ba42-e65a-4f7c-ad44-ad83a91a38b2": {"__data__": {"id_": "4fb3ba42-e65a-4f7c-ad44-ad83a91a38b2", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/logs.py", "file_name": "logs.py", "file_type": "text/x-python", "file_size": 1046, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8c2c9253-c07d-427b-9983-26b4a3030368", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/logs.py", "file_name": "logs.py", "file_type": "text/x-python", "file_size": 1046, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "0ee4d6f27b2623a84cd48401baf0b231777ac137d9a246974da6c179bf599b15", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "82a46837-f211-4bfe-92aa-f52312498e69", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/logs.py", "file_name": "logs.py", "file_type": "text/x-python", "file_size": 1046, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "14b083600e2ab9f0390d0e6122a9075c64a3dc2906c4b18d7a74c4f089167d63", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def log_and_refresh(source: str, message: str):\n    log_entry(source, message)\n    try:\n        requests.post(\"http://localhost:8000/context/update\", timeout=2)\n    except Exception:\n        pass  # fail silently if context update fails", "mimetype": "text/plain", "start_char_idx": 809, "end_char_idx": 1045, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "648811a8-041e-43ee-b48c-9301c8ef2f04": {"__data__": {"id_": "648811a8-041e-43ee-b48c-9301c8ef2f04", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/memory.py", "file_name": "memory.py", "file_type": "text/x-python", "file_size": 2117, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f19298e0-cb64-4144-b892-97baef329270", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/memory.py", "file_name": "memory.py", "file_type": "text/x-python", "file_size": 2117, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "0a82d78579460cd3993095b707cb39dfe1b4336848ee5c1484fca7a616c544d4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0e1cad43-0877-4350-af91-884ca804e464", "node_type": "1", "metadata": {}, "hash": "f0a8b17359f8153135a5b29938f675666b5817fbe09e6973bf044d9d921d51ff", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: services/memory.py\n# Directory: services/\n# Purpose: Persist detailed session memory logs for /ask endpoint with deep context/usage auditing.\n# Features:\n#   - Logs timestamp, user, query, topics, files, and summary\n#   - Adds context_files, context_length, prompt_length, response_length, global_context_used, fallback flag\n#   - Used for MemoryPanel deep analysis and context diagnostics\n\nimport os\nimport json\nimport datetime\n\nSESSION_DIR = \"./logs/sessions\"", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 469, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0e1cad43-0877-4350-af91-884ca804e464": {"__data__": {"id_": "0e1cad43-0877-4350-af91-884ca804e464", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/memory.py", "file_name": "memory.py", "file_type": "text/x-python", "file_size": 2117, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f19298e0-cb64-4144-b892-97baef329270", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/memory.py", "file_name": "memory.py", "file_type": "text/x-python", "file_size": 2117, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "0a82d78579460cd3993095b707cb39dfe1b4336848ee5c1484fca7a616c544d4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "648811a8-041e-43ee-b48c-9301c8ef2f04", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/memory.py", "file_name": "memory.py", "file_type": "text/x-python", "file_size": 2117, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "fe1428a9760452045675897bd67b5e58dd3c70bd092270417e5e7435ffd4c65b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "94ec48ac-05b4-45c0-9e55-87460566c0fb", "node_type": "1", "metadata": {}, "hash": "09d0b0dcb2e96a7a5f33a465dc34381bf0b510b2d439fecb8476784f8458cfff", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def summarize_memory_entry(\n    prompt: str,\n    response: str,\n    context: str = \"\",\n    actions: list = None,\n    user_id: str = \"anonymous\",\n    topics: list = None,\n    files: list = None,\n    context_files: list = None,\n    used_global_context: bool = False,\n    fallback: bool = False,\n    prompt_length: int = None,\n    response_length: int = None\n):", "mimetype": "text/plain", "start_char_idx": 471, "end_char_idx": 829, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "94ec48ac-05b4-45c0-9e55-87460566c0fb": {"__data__": {"id_": "94ec48ac-05b4-45c0-9e55-87460566c0fb", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/memory.py", "file_name": "memory.py", "file_type": "text/x-python", "file_size": 2117, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f19298e0-cb64-4144-b892-97baef329270", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/memory.py", "file_name": "memory.py", "file_type": "text/x-python", "file_size": 2117, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "0a82d78579460cd3993095b707cb39dfe1b4336848ee5c1484fca7a616c544d4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0e1cad43-0877-4350-af91-884ca804e464", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/memory.py", "file_name": "memory.py", "file_type": "text/x-python", "file_size": 2117, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "13fdd9bf16731bf2943503004d9a6732f16c3eb8d99dd901dadec9fa4b09e792", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09daccee-d5ce-4182-9dba-80bf9662ec44", "node_type": "1", "metadata": {}, "hash": "78c52f25ce7a63aa15f430f03b6ff923ccf6a4ef64c9e404f0897d7967e8fc81", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"\"\"\n    Build a detailed memory entry for each session event.\n    Includes advanced context diagnostics for frontend insight.\n    \"\"\"\n    return {\n        \"timestamp\": datetime.datetime.utcnow().isoformat(),\n        \"user\": user_id,\n        \"query\": prompt,\n        \"topics\": topics or [],\n        \"files\": files or [],\n        \"context_files\": context_files or [],\n        \"context_length\": len(context or \"\"),\n        \"prompt_length\": prompt_length or (len(prompt) + len(context or \"\")),\n        \"response_length\": response_length or len(response or \"\"),\n        \"used_global_context\": used_global_context,\n        \"fallback\": fallback,\n        \"actions\": actions or [],\n        \"summary\": response  # Optionally replace with GPT summary if you want\n    }", "mimetype": "text/plain", "start_char_idx": 834, "end_char_idx": 1591, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "09daccee-d5ce-4182-9dba-80bf9662ec44": {"__data__": {"id_": "09daccee-d5ce-4182-9dba-80bf9662ec44", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/memory.py", "file_name": "memory.py", "file_type": "text/x-python", "file_size": 2117, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f19298e0-cb64-4144-b892-97baef329270", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/memory.py", "file_name": "memory.py", "file_type": "text/x-python", "file_size": 2117, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "0a82d78579460cd3993095b707cb39dfe1b4336848ee5c1484fca7a616c544d4", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "94ec48ac-05b4-45c0-9e55-87460566c0fb", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/memory.py", "file_name": "memory.py", "file_type": "text/x-python", "file_size": 2117, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "6a13da31dfbac974cab7473f7b0345337eb9e6aca91406937970b1c29ae2c073", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def save_memory_entry(user_id: str, summary: dict):\n    \"\"\"\n    Write a single memory entry to the per-user log file as JSONL.\n    \"\"\"\n    os.makedirs(SESSION_DIR, exist_ok=True)\n    path = os.path.join(SESSION_DIR, f\"{user_id}.jsonl\")\n    with open(path, \"a\") as f:\n        f.write(json.dumps(summary) + \"\\n\")\n\n# === Utility: For debugging/logging what gets stored ===\ndef debug_log_entry(entry: dict):\n    print(\"[Memory] Log Entry Debug:\")\n    print(json.dumps(entry, indent=2)[:1200], \"...\\n\")  # Print first 1200 chars", "mimetype": "text/plain", "start_char_idx": 1593, "end_char_idx": 2116, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aae7f7a5-7ae2-4322-93be-a63a45dec789": {"__data__": {"id_": "aae7f7a5-7ae2-4322-93be-a63a45dec789", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/neo4j_driver.py", "file_name": "neo4j_driver.py", "file_type": "text/x-python", "file_size": 1645, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b99d6780-a966-4eb3-82cc-3691ae426d40", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/neo4j_driver.py", "file_name": "neo4j_driver.py", "file_type": "text/x-python", "file_size": 1645, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "4330cae1e1b40792deb65e90d3fb0e5bada39e52073e63d2ed4a3e9479123ffb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7b6382c5-fd13-44f1-af73-44f9527be802", "node_type": "1", "metadata": {}, "hash": "f3e450fbc7c3bd9c1c7b1394f0350368c14f6396c0062ec9c7bc5d2f75b7ad5e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: services/neo4j_driver.py\n# Purpose: Shared async Neo4j driver for query and ingestion\n\nimport os\nfrom neo4j import AsyncGraphDatabase, AsyncDriver\nfrom contextlib import asynccontextmanager\nfrom core.logging import log_event\n\n# === Config from ENV ===\nNEO4J_URI = os.getenv(\"NEO4J_URI\", \"neo4j+s://localhost:7687\")\nNEO4J_USER = os.getenv(\"NEO4J_USER\", \"neo4j\")\nNEO4J_PASSWORD = os.getenv(\"NEO4J_PASSWORD\", \"password\")\n\n# === Initialize internal driver (hidden) ===\n_driver: AsyncDriver = AsyncGraphDatabase.driver(\n    NEO4J_URI, auth=(NEO4J_USER, NEO4J_PASSWORD)\n)\n\n# \u2705 Exported handle for direct import\nneo4j_driver = _driver\n\n# === Async context manager to open sessions ===\n@asynccontextmanager\nasync def get_session():\n    # \u2705 Removed explicit `database=\"neo4j\"` \u2014 required for Neo4j Aura to work\n    async with _driver.session() as session:\n        yield session\n\n# === Execute a read-only query ===", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 913, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7b6382c5-fd13-44f1-af73-44f9527be802": {"__data__": {"id_": "7b6382c5-fd13-44f1-af73-44f9527be802", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/neo4j_driver.py", "file_name": "neo4j_driver.py", "file_type": "text/x-python", "file_size": 1645, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b99d6780-a966-4eb3-82cc-3691ae426d40", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/neo4j_driver.py", "file_name": "neo4j_driver.py", "file_type": "text/x-python", "file_size": 1645, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "4330cae1e1b40792deb65e90d3fb0e5bada39e52073e63d2ed4a3e9479123ffb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aae7f7a5-7ae2-4322-93be-a63a45dec789", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/neo4j_driver.py", "file_name": "neo4j_driver.py", "file_type": "text/x-python", "file_size": 1645, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "9f3c485e11b284ed32c04eb8337b1e12c6119215eccb9417d060f0ed237f2661", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async def execute_read(query: str, parameters: dict = {}) -> list[dict]:\n    try:\n        async with get_session() as session:\n            result = await session.execute_read(lambda tx: tx.run(query, parameters))\n            return [record.data() async for record in result]\n    except Exception as e:\n        log_event(\"neo4j_read_fail\", {\"error\": str(e), \"query\": query})\n        return []\n\n# === Execute a write query ===\nasync def execute_write(query: str, parameters: dict = {}) -> None:\n    try:\n        async with get_session() as session:\n            await session.execute_write(lambda tx: tx.run(query, parameters))\n    except Exception as e:\n        log_event(\"neo4j_write_fail\", {\"error\": str(e), \"query\": query})", "mimetype": "text/plain", "start_char_idx": 914, "end_char_idx": 1638, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b30e64c2-5d91-456b-bbfa-5059ea2ed52c": {"__data__": {"id_": "b30e64c2-5d91-456b-bbfa-5059ea2ed52c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/semantic_retriever.py", "file_name": "semantic_retriever.py", "file_type": "text/x-python", "file_size": 1407, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "50a61fc3-83da-48cf-88b3-1e30e50b746d", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/semantic_retriever.py", "file_name": "semantic_retriever.py", "file_type": "text/x-python", "file_size": 1407, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "33a166a7d16e213135a0f30a36f7243ab15a977ba31872e9c86c1b860d5d2fd9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ef12f215-d52f-42d2-93ba-dc56daa27c14", "node_type": "1", "metadata": {}, "hash": "51abe57e185bb193f6ddaddcca1b875ee767d50737b3bb6a6db178201380ebaf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: services/semantic_retriever.py\n# Purpose: Provide top-K semantic context for agent prompts using LlamaIndex vector store.\n\nfrom llama_index.core import load_index_from_storage, StorageContext\nfrom llama_index.embeddings.openai import OpenAIEmbedding\nimport sys\nimport traceback\n\n# === Configuration ===\nINDEX_DIR = \"./data/index\"\nEMBED_MODEL_NAME = \"text-embedding-3-large\"\n\n# === Embedding Model and Storage Context ===\n_embed_model = OpenAIEmbedding(model=EMBED_MODEL_NAME)\ntry:\n    storage_context = StorageContext.from_defaults(persist_dir=INDEX_DIR)\n    _index = load_index_from_storage(storage_context=storage_context, embed_model=_embed_model)\nexcept Exception as e:\n    print(\"LlamaIndex load_index_from_storage FAILED:\")\n    traceback.print_exc()\n    sys.exit(1)\n\n# === Main Retrieval Function ===", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 814, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ef12f215-d52f-42d2-93ba-dc56daa27c14": {"__data__": {"id_": "ef12f215-d52f-42d2-93ba-dc56daa27c14", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/semantic_retriever.py", "file_name": "semantic_retriever.py", "file_type": "text/x-python", "file_size": 1407, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "50a61fc3-83da-48cf-88b3-1e30e50b746d", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/semantic_retriever.py", "file_name": "semantic_retriever.py", "file_type": "text/x-python", "file_size": 1407, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "33a166a7d16e213135a0f30a36f7243ab15a977ba31872e9c86c1b860d5d2fd9", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b30e64c2-5d91-456b-bbfa-5059ea2ed52c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/services/semantic_retriever.py", "file_name": "semantic_retriever.py", "file_type": "text/x-python", "file_size": 1407, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "1811e48b8ff9ef07964f2a147df53ccfe2294c72991f86a4a037bdce934df771", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def get_semantic_context(query: str, top_k: int = 5) -> str:\n    \"\"\"\n    Retrieves the top_k most semantically relevant code/docs chunks for the query.\n    Returns concatenated context string (with file path/title if possible).\n    \"\"\"\n    results = _index.query(query, top_k=top_k)\n    if not results:\n        return \"No semantically relevant context found.\"\n    lines = []\n    for r in results:\n        meta = r.metadata or {}\n        title = meta.get(\"file_path\") or meta.get(\"tier\") or \"Unknown Source\"\n        lines.append(f\"### {title}\\n{r.text.strip()}\")\n    return \"\\n\\n\".join(lines)", "mimetype": "text/plain", "start_char_idx": 815, "end_char_idx": 1406, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "44974340-92b3-491b-9f56-79a23446ae46": {"__data__": {"id_": "44974340-92b3-491b-9f56-79a23446ae46", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/settings.py", "file_name": "settings.py", "file_type": "text/x-python", "file_size": 793, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e13f0743-9cfb-42c0-9429-1a519170ce74", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/settings.py", "file_name": "settings.py", "file_type": "text/x-python", "file_size": 793, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3b937714855fe3f9bde19269011d3d64bfdbdcbc6abcf3cb39f5c593571e18b3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# services/settings.py\nimport os\nfrom dotenv import load_dotenv\nfrom pathlib import Path\n\n# === Load .env file automatically at app startup ===\nload_dotenv(dotenv_path=Path(__file__).resolve().parents[1] / \".env\")\n\n# === Centralized environment variables ===\nOPENAI_API_KEY = os.getenv(\"OPENAI_API_KEY\")\nGOOGLE_CLIENT_ID = os.getenv(\"GOOGLE_CLIENT_ID\")\nGOOGLE_CLIENT_SECRET = os.getenv(\"GOOGLE_CLIENT_SECRET\")\nGOOGLE_REDIRECT_URI = os.getenv(\"GOOGLE_REDIRECT_URI\", \"http://localhost:3000/auth/callback\")\n\n# === Validation helper ===\ndef assert_env(var, hint=\"\"):\n    value = os.getenv(var)\n    if not value:\n        raise RuntimeError(f\"Missing required env var: {var}. {hint}\")\n    return value\n\n# Example usage:\n# assert_env(\"OPENAI_API_KEY\", \"Set in .env or as system environment variable\")", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 793, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "788d2af7-204b-4fb8-a8f8-039f45505ae8": {"__data__": {"id_": "788d2af7-204b-4fb8-a8f8-039f45505ae8", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/services/summarize_memory.py", "file_name": "summarize_memory.py", "file_type": "text/x-python", "file_size": 818, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a3f757a-5777-435a-9679-efa508838307", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/services/summarize_memory.py", "file_name": "summarize_memory.py", "file_type": "text/x-python", "file_size": 818, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "ad3326fad9d2e1d9d3bad15d70d643b0d6438aed3ee50ae16d8940cf0c85ff03", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: services/summarize_memory.py\n# Directory: services/\n# Purpose: Use OpenAI to generate concise summary of a user-agent memory exchange\n\nimport os\nfrom openai import AsyncOpenAI\nfrom utils.openai_client import create_openai_client\n\nclient = create_openai_client()\n\nasync def summarize_memory_entry(question: str, response: str, context: str = \"\") -> str:\n    prompt = f\"\"\"\nYou are a concise summarizer of agent interactions.\n\nSummarize this user query and response in 1\u20132 sentences for memory recall:\n\nQ: {question}\n\nAgent response: {response}\n\nContext (if needed):\n{context[:500]}\n\nSummary:\n\"\"\"\n    result = await client.chat.completions.create(\n        model=\"gpt-4o\",\n        messages=[{\"role\": \"user\", \"content\": prompt}],\n        temperature=0.2\n    )\n    return result.choices[0].message.content.strip()", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 815, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "943698fa-4800-405b-8170-1831cdeb1233": {"__data__": {"id_": "943698fa-4800-405b-8170-1831cdeb1233", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9a99fe2e-b31b-4f80-ad0a-180833445860", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "fbdaeb006c6b5e81296768e4c6a20596c5f7e6a50518dd40f7d8a5f20656985d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "93559f09-3224-4b54-9504-6e8d306af895", "node_type": "1", "metadata": {}, "hash": "546c258b046f47b01e73f8fcd17d599d8c4fb3eca250b4290951e9e520a463d4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# routes/admin.py\n# ------------------------------------------------------------------------\n# Admin and Ops Endpoints for Relay Command Center\n# Secure, auditable, and environment-driven maintenance tools.\n# ALL endpoints require a valid API key (X-API-Key header, matches API_KEY env var).\n# Review and update environment variables in Railway/Vercel/Codespaces as needed.\n# ------------------------------------------------------------------------\n\nimport os\nimport shutil\nimport psutil\nimport platform\nimport zipfile\nfrom fastapi import APIRouter, HTTPException, Request, status, Header, Depends\nfrom fastapi.responses import FileResponse\nfrom pathlib import Path\nfrom datetime import datetime\n\nfrom services.config import INDEX_DIR\n\n# ------------------------------------------------------------------------\n# ENV/CONFIG SETUP\n# ------------------------------------------------------------------------\nrouter = APIRouter(prefix=\"/admin\", tags=[\"admin-ops\"])\n\nDATA_DIR = INDEX_DIR.parent", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 989, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "93559f09-3224-4b54-9504-6e8d306af895": {"__data__": {"id_": "93559f09-3224-4b54-9504-6e8d306af895", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9a99fe2e-b31b-4f80-ad0a-180833445860", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "fbdaeb006c6b5e81296768e4c6a20596c5f7e6a50518dd40f7d8a5f20656985d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "943698fa-4800-405b-8170-1831cdeb1233", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "b8cfb097721494d6db89badfd37fe8e746b6f9c81c919022359cb063d3dfa0a2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dbfa6ffe-7212-4ee3-a5b8-d2b48d6d16c5", "node_type": "1", "metadata": {}, "hash": "4f02ea0cc6d038c40bad8cfab19a74612f2979704263ba4cc0702e06b0916851", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "ADMIN_LOG = DATA_DIR / \"admin_events.log\"\n\n# ------------------------------------------------------------------------\n# SECURITY: Require valid API Key (X-API-Key header) for all admin ops\n# ------------------------------------------------------------------------\ndef require_api_key(x_api_key: str = Header(..., alias=\"X-API-Key\")):\n    api_key = os.environ.get(\"API_KEY\")\n    if not api_key or x_api_key != api_key:\n        raise HTTPException(status_code=403, detail=\"Invalid or missing API key.\")\n\n# ------------------------------------------------------------------------\n# UTIL: Audit logging\u2014append all events and errors\n# ------------------------------------------------------------------------\ndef log_admin_event(msg: str):\n    timestamp = datetime.utcnow().isoformat()\n    log_entry = f\"{timestamp} | {msg}\\n\"\n    with ADMIN_LOG.open(\"a\", encoding=\"utf-8\") as f:\n        f.write(log_entry)\n\n# ------------------------------------------------------------------------", "mimetype": "text/plain", "start_char_idx": 990, "end_char_idx": 1966, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dbfa6ffe-7212-4ee3-a5b8-d2b48d6d16c5": {"__data__": {"id_": "dbfa6ffe-7212-4ee3-a5b8-d2b48d6d16c5", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9a99fe2e-b31b-4f80-ad0a-180833445860", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "fbdaeb006c6b5e81296768e4c6a20596c5f7e6a50518dd40f7d8a5f20656985d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "93559f09-3224-4b54-9504-6e8d306af895", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "5eaed9b9fda99ce0950a359168d7facc7c67003ca4f3fde516e995043714fb6b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "431d30db-002b-4394-88b1-cf410011505b", "node_type": "1", "metadata": {}, "hash": "a4f6ed97bd42aebd55cbdfd54f59d60ff4f1726937f7c7d937217ce3ae1f0479", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# ENDPOINT: Clean LlamaIndex index and SQLite DBs\n# ------------------------------------------------------------------------", "mimetype": "text/plain", "start_char_idx": 1967, "end_char_idx": 2091, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "431d30db-002b-4394-88b1-cf410011505b": {"__data__": {"id_": "431d30db-002b-4394-88b1-cf410011505b", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9a99fe2e-b31b-4f80-ad0a-180833445860", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "fbdaeb006c6b5e81296768e4c6a20596c5f7e6a50518dd40f7d8a5f20656985d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dbfa6ffe-7212-4ee3-a5b8-d2b48d6d16c5", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "205923e11f5dcc468435c5a7f714890cd801173549a7302eafc4528d3ab338e4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "27fc97af-4c63-4143-ace6-911a6f649d23", "node_type": "1", "metadata": {}, "hash": "68b4de0aac93230343aef89d7437bf6c717abcd6d0ef4da07d3454b1de73401b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.post(\"/clean_index\")", "mimetype": "text/plain", "start_char_idx": 2092, "end_char_idx": 2120, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "27fc97af-4c63-4143-ace6-911a6f649d23": {"__data__": {"id_": "27fc97af-4c63-4143-ace6-911a6f649d23", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9a99fe2e-b31b-4f80-ad0a-180833445860", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "fbdaeb006c6b5e81296768e4c6a20596c5f7e6a50518dd40f7d8a5f20656985d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "431d30db-002b-4394-88b1-cf410011505b", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "95db75a8ee4a7e1f65d5d3834b0d9a7914296eb4263a70c06125de6964e04aaa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0f47a0f3-68f1-47fc-a7d2-76d750021701", "node_type": "1", "metadata": {}, "hash": "10458b6b8e5a95cb19fb77c36914bde98e2d1a6d71b632d570d954cb3a81f934", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async def clean_index(\n    request: Request,\n    user: str = \"\",\n    api_key: str = Depends(require_api_key)\n):", "mimetype": "text/plain", "start_char_idx": 2121, "end_char_idx": 2232, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0f47a0f3-68f1-47fc-a7d2-76d750021701": {"__data__": {"id_": "0f47a0f3-68f1-47fc-a7d2-76d750021701", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9a99fe2e-b31b-4f80-ad0a-180833445860", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "fbdaeb006c6b5e81296768e4c6a20596c5f7e6a50518dd40f7d8a5f20656985d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "27fc97af-4c63-4143-ace6-911a6f649d23", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "6178ca3ad9f0d96b8e85c83ca72c33777cc31d8a2e6ae89364f354a5ae80b19c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1af34c33-8618-4b0b-8049-00997c691f6b", "node_type": "1", "metadata": {}, "hash": "3db09cc47c5eb694b6b429117028b9d6d1dcb54aea0091998ecaca1869d994f2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"\"\"\n    Deletes all files in the index directory and SQLite DBs.\n    Requires valid X-API-Key header.\n    \"\"\"\n    deleted_files = []\n    # --- Index directory wipe ---\n    if INDEX_DIR.exists():\n        for f in INDEX_DIR.glob(\"*\"):\n            try:\n                if f.is_file():\n                    f.unlink()\n                    deleted_files.append(str(f))\n                elif f.is_dir():\n                    shutil.rmtree(f)\n                    deleted_files.append(str(f))\n            except Exception as e:\n                log_admin_event(f\"[ERROR] Failed to delete {f}: {e}\")\n    # --- SQLite DBs wipe ---\n    for sfile in DATA_DIR.glob(\"*.sqlite*\"):\n        try:\n            sfile.unlink()\n            deleted_files.append(str(sfile))\n        except Exception as e:\n            log_admin_event(f\"[ERROR] Failed to delete {sfile}: {e}\")\n\n    # --- Audit log ---\n    client_ip = request.client.host if request.client else \"unknown\"\n    now = datetime.utcnow().isoformat()", "mimetype": "text/plain", "start_char_idx": 2237, "end_char_idx": 3217, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1af34c33-8618-4b0b-8049-00997c691f6b": {"__data__": {"id_": "1af34c33-8618-4b0b-8049-00997c691f6b", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9a99fe2e-b31b-4f80-ad0a-180833445860", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "fbdaeb006c6b5e81296768e4c6a20596c5f7e6a50518dd40f7d8a5f20656985d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f47a0f3-68f1-47fc-a7d2-76d750021701", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "ac5acf819ed667ca3b0c3db110cf6a85298924752e8b5899472fced647a2e60c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "91eda1cb-d727-4d4c-8759-8f8ad06505ab", "node_type": "1", "metadata": {}, "hash": "1f12c6c8c74d0b2ae6fde5b2663c5fb2c9fefc397b37b1666dfdcb2a1d02233e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "log_admin_event(f\"[CLEAN_INDEX] {now} by {user or 'unknown'} from {client_ip}: Deleted {len(deleted_files)} files\")\n\n    return {\n        \"status\": \"ok\",\n        \"message\": \"Index and SQLite files cleaned.\",\n        \"deleted_files\": deleted_files,\n        \"timestamp\": now,\n        \"user\": user,\n        \"ip\": client_ip\n    }", "mimetype": "text/plain", "start_char_idx": 3222, "end_char_idx": 3547, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "91eda1cb-d727-4d4c-8759-8f8ad06505ab": {"__data__": {"id_": "91eda1cb-d727-4d4c-8759-8f8ad06505ab", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9a99fe2e-b31b-4f80-ad0a-180833445860", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "fbdaeb006c6b5e81296768e4c6a20596c5f7e6a50518dd40f7d8a5f20656985d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1af34c33-8618-4b0b-8049-00997c691f6b", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "a49583bd1b6ff5c86e80d2830cd2e1d03882a73dab23e0f8edb08a38825cffb5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "404b23a9-e57e-4e33-8f92-c981a2a6a4f9", "node_type": "1", "metadata": {}, "hash": "9d2686e68623d5dbf24c579eed184ec5eb8cd97c3a725347db44617fdbdbae5b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# ------------------------------------------------------------------------\n# ENDPOINT: Trigger Index Rebuild (now fully implemented)\n# ------------------------------------------------------------------------\nfrom services.indexer import index_directories  # <-- add this import at the top if missing", "mimetype": "text/plain", "start_char_idx": 3549, "end_char_idx": 3848, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "404b23a9-e57e-4e33-8f92-c981a2a6a4f9": {"__data__": {"id_": "404b23a9-e57e-4e33-8f92-c981a2a6a4f9", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9a99fe2e-b31b-4f80-ad0a-180833445860", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "fbdaeb006c6b5e81296768e4c6a20596c5f7e6a50518dd40f7d8a5f20656985d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "91eda1cb-d727-4d4c-8759-8f8ad06505ab", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "db90abe0c7aec496533f8774ba18897c24384bba784d5e86f11a2595a3118c88", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9c33cb34-2ff0-44a9-8f57-f719d0d55a43", "node_type": "1", "metadata": {}, "hash": "802f1545f0c74c756c16fe285735fc9aee58424ec5e86fa413d2c5b9ea53708d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.post(\"/trigger_reindex\")\nasync def trigger_reindex(\n    request: Request,\n    user: str = \"\",\n    api_key: str = Depends(require_api_key)\n):\n    \"\"\"\n    Triggers a rebuild of the LlamaIndex (semantic KB).\n    Returns status/result.\n    \"\"\"\n    try:\n        index_directories()  # This will run synchronously (blocking until finished)\n        log_admin_event(f\"[REINDEX_TRIGGER] SUCCESS by {user or 'unknown'} from {request.client.host}\")\n        return {\"status\": \"ok\", \"message\": \"Reindex complete.\"}\n    except Exception as exc:\n        log_admin_event(f\"[REINDEX_TRIGGER] ERROR by {user or 'unknown'} from {request.client.host}: {exc}\")\n        raise HTTPException(status_code=500, detail=f\"Reindex failed: {exc}\")\n\n\n# ------------------------------------------------------------------------\n# ENDPOINT: Health Check (disk, CPU, memory, config summary)\n# ------------------------------------------------------------------------", "mimetype": "text/plain", "start_char_idx": 3850, "end_char_idx": 4788, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9c33cb34-2ff0-44a9-8f57-f719d0d55a43": {"__data__": {"id_": "9c33cb34-2ff0-44a9-8f57-f719d0d55a43", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9a99fe2e-b31b-4f80-ad0a-180833445860", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "fbdaeb006c6b5e81296768e4c6a20596c5f7e6a50518dd40f7d8a5f20656985d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "404b23a9-e57e-4e33-8f92-c981a2a6a4f9", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3129d8d9c1154a3c5ccd87b9b50380dbd1688f15afe2806f6a242c980e2f266c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c3671e3d-bb85-42cb-a65b-7614ffcf8906", "node_type": "1", "metadata": {}, "hash": "dbef21f9cb63f947747e434f4f96f23bfb6a7536e528a9ae22a72df3d661c853", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.get(\"/health_check\")\nasync def health_check(\n    request: Request,\n    user: str = \"\",\n    api_key: str = Depends(require_api_key)\n):\n    \"\"\"\n    Returns backend, disk, memory, and config health for diagnostics.\n    Requires valid X-API-Key header.\n    \"\"\"\n    health = {\n        \"system\": platform.system(),\n        \"release\": platform.release(),\n        \"cpu_percent\": psutil.cpu_percent(),\n        \"memory\": dict(psutil.virtual_memory()._asdict()),\n        \"disk\": dict(psutil.disk_usage('/')._asdict()),\n        \"python_version\": platform.python_version(),\n        \"env\": {\n            \"index_dir\": str(INDEX_DIR),\n            \"data_dir\": str(DATA_DIR),\n        }\n    }\n    log_admin_event(f\"[HEALTH_CHECK] by {user or 'unknown'} from {request.client.host}\")\n    return health\n\n# ------------------------------------------------------------------------\n# ENDPOINT: Download Audit Log\n# ------------------------------------------------------------------------", "mimetype": "text/plain", "start_char_idx": 4789, "end_char_idx": 5759, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c3671e3d-bb85-42cb-a65b-7614ffcf8906": {"__data__": {"id_": "c3671e3d-bb85-42cb-a65b-7614ffcf8906", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9a99fe2e-b31b-4f80-ad0a-180833445860", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "fbdaeb006c6b5e81296768e4c6a20596c5f7e6a50518dd40f7d8a5f20656985d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9c33cb34-2ff0-44a9-8f57-f719d0d55a43", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "b8bbcd9d6646ff7b976940fc03185df3f32300bdd16441b833ebf0ddfb6a743c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "59d2122f-0f3d-4679-a97b-efd264c3ce34", "node_type": "1", "metadata": {}, "hash": "d61176385b2fbd72cb5310f189f085e8d495eeeb757bfd7357832be9551d5266", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.get(\"/download_log\")\nasync def download_log(\n    request: Request,\n    user: str = \"\",\n    api_key: str = Depends(require_api_key)\n):\n    \"\"\"\n    Allows secure download of admin event log.\n    Requires valid X-API-Key header.\n    \"\"\"\n    if not ADMIN_LOG.exists():\n        raise HTTPException(status_code=404, detail=\"No log file found.\")\n    log_admin_event(f\"[DOWNLOAD_LOG] by {user or 'unknown'} from {request.client.host}\")\n    return FileResponse(str(ADMIN_LOG), media_type=\"text/plain\", filename=\"admin_events.log\")\n\n# ------------------------------------------------------------------------\n# ENDPOINT: Backup Index Directory (zip)\n# ------------------------------------------------------------------------", "mimetype": "text/plain", "start_char_idx": 5760, "end_char_idx": 6481, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "59d2122f-0f3d-4679-a97b-efd264c3ce34": {"__data__": {"id_": "59d2122f-0f3d-4679-a97b-efd264c3ce34", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9a99fe2e-b31b-4f80-ad0a-180833445860", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "fbdaeb006c6b5e81296768e4c6a20596c5f7e6a50518dd40f7d8a5f20656985d", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c3671e3d-bb85-42cb-a65b-7614ffcf8906", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/admin.py", "file_name": "admin.py", "file_type": "text/x-python", "file_size": 7292, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "5effd8ed5ace6c90a1c02eb09ac3a9e921b2ad4a2923473f4f539b1b63ad63d3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.post(\"/backup_index\")\nasync def backup_index(\n    request: Request,\n    user: str = \"\",\n    api_key: str = Depends(require_api_key)\n):\n    \"\"\"\n    Zips the index directory for backup/offline restore.\n    Requires valid X-API-Key header.\n    \"\"\"\n    backup_path = DATA_DIR / f\"index_backup_{datetime.utcnow().strftime('%Y%m%d%H%M%S')}.zip\"\n    with zipfile.ZipFile(backup_path, \"w\") as zipf:\n        if INDEX_DIR.exists():\n            for f in INDEX_DIR.rglob(\"*\"):\n                if f.is_file():\n                    zipf.write(f, f.relative_to(DATA_DIR))\n    log_admin_event(f\"[BACKUP_INDEX] by {user or 'unknown'} from {request.client.host}\")\n    return {\n        \"status\": \"ok\",\n        \"message\": f\"Index directory backed up to {backup_path.name}\",\n        \"backup_file\": str(backup_path)\n    }", "mimetype": "text/plain", "start_char_idx": 6482, "end_char_idx": 7288, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "29b9983c-fa10-495f-bc61-2a1e23dee3dd": {"__data__": {"id_": "29b9983c-fa10-495f-bc61-2a1e23dee3dd", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/admin_routes.py", "file_name": "admin_routes.py", "file_type": "text/x-python", "file_size": 750, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fdc31de9-3775-425f-8a1c-b838441b618d", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/admin_routes.py", "file_name": "admin_routes.py", "file_type": "text/x-python", "file_size": 750, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "6bd9d44a7aa2839bd6dcffe3e7d5b833bdb829e1f66b21e1e2e58e6a7bbd367b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: routes/admin_routes.py\n# Purpose: Add manual trigger to generate auto global context from /context/*.md\n\nfrom fastapi import APIRouter, Depends\nfrom fastapi.responses import JSONResponse\nimport subprocess\nimport os\n\nrouter = APIRouter(prefix=\"/admin\", tags=[\"admin\"])\n\n@router.post(\"/generate_auto_context\")\ndef generate_auto_context():\n    try:\n        result = subprocess.run(\n            [\"python\", \"scripts/generate_global_context.auto.py\"],\n            capture_output=True, text=True, check=True\n        )\n        return JSONResponse({\"status\": \"success\", \"output\": result.stdout})\n    except subprocess.CalledProcessError as e:\n        return JSONResponse(\n            {\"status\": \"error\", \"detail\": e.stderr}, status_code=500\n        )", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 749, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0b164f75-378e-4cc4-ba21-a04a6c00713d": {"__data__": {"id_": "0b164f75-378e-4cc4-ba21-a04a6c00713d", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6486cb74-8eea-4dba-888f-af0997f24350", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "7b43254b4788d6a86436b64006d2ab39850ff07a2516c0813b60f24f0e55764c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8c960dbe-5e22-455a-b794-84d32445e384", "node_type": "1", "metadata": {}, "hash": "20bc2beadb8decf967d02b24b3149b79269335554aed3476fe95569542db8c50", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: routes/ask.py\r\n# Directory: routes/\r\n# Purpose: Unified API routes for /ask endpoints \u2014 user entry point to Relay agents\r\n#          Delegates all query logic to MCP (run_mcp), handling agent/critic orchestration.\r\n#          Handles streaming for both Codex and Echo (primary/fallback) agents.\r\n# Updated: 2025-07-02\r\n\r\nimport traceback\r\nfrom fastapi import APIRouter, Query, Request, Header, HTTPException\r\nfrom fastapi.responses import StreamingResponse\r\nfrom typing import Optional\r\n\r\nfrom agents.mcp_agent import run_mcp\r\nfrom agents.codex_agent import stream as codex_stream\r\nfrom agents.echo_agent import stream as echo_stream\r\nfrom utils.openai_client import create_openai_client\r\nfrom openai import OpenAIError\r\n\r\nrouter = APIRouter(prefix=\"/ask\", tags=[\"ask\"])\r\n\r\n# Streaming map for roles that support it\r\nSTREAM_ROUTING_TABLE = {\r\n    \"codex\": codex_stream,\r\n    \"echo\": echo_stream,\r\n    # Add more streaming agents here as needed in the future\r\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 968, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8c960dbe-5e22-455a-b794-84d32445e384": {"__data__": {"id_": "8c960dbe-5e22-455a-b794-84d32445e384", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6486cb74-8eea-4dba-888f-af0997f24350", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "7b43254b4788d6a86436b64006d2ab39850ff07a2516c0813b60f24f0e55764c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0b164f75-378e-4cc4-ba21-a04a6c00713d", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "3d8f5b27fc6db13f0ffd8def299bd6af0dbe9e6183c22d73ab4702ed23a2b49a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "49f55fe0-1e4e-45e0-a756-19430092472e", "node_type": "1", "metadata": {}, "hash": "f892c2e6dc07e0372c6f45553f71accf8f49f99467b40c3c1a68e83e2af1596a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# === GET /ask ==================================================================", "mimetype": "text/plain", "start_char_idx": 972, "end_char_idx": 1053, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "49f55fe0-1e4e-45e0-a756-19430092472e": {"__data__": {"id_": "49f55fe0-1e4e-45e0-a756-19430092472e", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6486cb74-8eea-4dba-888f-af0997f24350", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "7b43254b4788d6a86436b64006d2ab39850ff07a2516c0813b60f24f0e55764c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8c960dbe-5e22-455a-b794-84d32445e384", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "1419db0d153fc3f7b99bf9adafa6c54d424b717a6aef09b287938289d02f80bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "312ed36f-41fb-40ba-a335-575cbe206050", "node_type": "1", "metadata": {}, "hash": "0ce481d89cc3b93470670030657a0dce2a0bff025af767d68b8eb69a46e4162a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.get(\"\")", "mimetype": "text/plain", "start_char_idx": 1055, "end_char_idx": 1070, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "312ed36f-41fb-40ba-a335-575cbe206050": {"__data__": {"id_": "312ed36f-41fb-40ba-a335-575cbe206050", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6486cb74-8eea-4dba-888f-af0997f24350", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "7b43254b4788d6a86436b64006d2ab39850ff07a2516c0813b60f24f0e55764c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "49f55fe0-1e4e-45e0-a756-19430092472e", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "5be8a92b3afa85562cb9bfb707492f72bc0429fb260e0ac8b184b095367d361b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9fb0a50b-1ba7-44b8-8f04-f0822780fdcf", "node_type": "1", "metadata": {}, "hash": "a3008732106a7f54db1106b038c17042312fb7d5e250e0f7c275cc590f48dba6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async def ask_get(\r\n    request: Request,\r\n    question: str = Query(..., description=\"User's natural language question\"),\r\n    x_user_id: Optional[str] = Header(None, alias=\"X-User-Id\"),\r\n    debug: Optional[bool] = Query(False, description=\"Return debug/context info\"),\r\n    role: Optional[str] = Query(\"planner\", description=\"Which agent role to use (planner, echo, codex, etc)\"),\r\n    files: Optional[str] = Query(None, description=\"Comma-separated file list for context\"),\r\n    topics: Optional[str] = Query(None, description=\"Comma-separated topics for context\")\r\n):", "mimetype": "text/plain", "start_char_idx": 1072, "end_char_idx": 1644, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9fb0a50b-1ba7-44b8-8f04-f0822780fdcf": {"__data__": {"id_": "9fb0a50b-1ba7-44b8-8f04-f0822780fdcf", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6486cb74-8eea-4dba-888f-af0997f24350", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "7b43254b4788d6a86436b64006d2ab39850ff07a2516c0813b60f24f0e55764c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "312ed36f-41fb-40ba-a335-575cbe206050", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "daa7ca22d56d235006beb7b467006e4e425dcc0f753d9a545a817213934ecc61", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5712f37-48d2-42db-ab55-1dc01a0568f0", "node_type": "1", "metadata": {}, "hash": "e5cdedfd0ac8ba13f49673f65448d4767dc95a729da8d20f7d8a5f0508c6afcc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"\"\"\r\n    GET version of /ask, mostly for quick dev/testing.\r\n    Routes to MCP with appropriate agent role.\r\n    Echo is always available as both primary and fallback agent.\r\n    \"\"\"\r\n    user_id = x_user_id or \"anonymous\"\r\n    file_list = [f.strip() for f in files.split(\",\")] if files else []\r\n    topic_list = [t.strip() for t in topics.split(\",\")] if topics else []\r\n\r\n    if not question:\r\n        raise HTTPException(status_code=422, detail=\"Missing 'question' parameter.\")\r\n\r\n    try:\r\n        return await run_mcp(\r\n            query=question,\r\n            files=file_list,\r\n            topics=topic_list,\r\n            role=role,\r\n            user_id=user_id,\r\n            debug=debug\r\n        )\r\n    except Exception as e:\r\n        traceback.print_exc()\r\n        raise HTTPException(status_code=500, detail=str(e))", "mimetype": "text/plain", "start_char_idx": 1650, "end_char_idx": 2473, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e5712f37-48d2-42db-ab55-1dc01a0568f0": {"__data__": {"id_": "e5712f37-48d2-42db-ab55-1dc01a0568f0", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6486cb74-8eea-4dba-888f-af0997f24350", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "7b43254b4788d6a86436b64006d2ab39850ff07a2516c0813b60f24f0e55764c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9fb0a50b-1ba7-44b8-8f04-f0822780fdcf", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "c42336954cdbed8866cef812b63395154d3991b49bb2a454ca0c7de7c3c3dda5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bf1c8883-ddb4-4df6-92fa-604ebfd829ce", "node_type": "1", "metadata": {}, "hash": "8072e13853f670a924ce3677dabcd3a663bae054c83141739c6cd4923e0750f1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# === POST /ask =================================================================", "mimetype": "text/plain", "start_char_idx": 2477, "end_char_idx": 2558, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bf1c8883-ddb4-4df6-92fa-604ebfd829ce": {"__data__": {"id_": "bf1c8883-ddb4-4df6-92fa-604ebfd829ce", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6486cb74-8eea-4dba-888f-af0997f24350", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "7b43254b4788d6a86436b64006d2ab39850ff07a2516c0813b60f24f0e55764c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e5712f37-48d2-42db-ab55-1dc01a0568f0", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "823dfe603de8739a5c7e73942cc1b11f6a961b0f5a069eb714384e60a9f63cbf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bda67473-6eb5-46d4-9ab4-f2d5e371921d", "node_type": "1", "metadata": {}, "hash": "0c449532b0984b599c3431e6cb8c9babd198936fd1b3fff47a86851bd5fa6b76", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.post(\"\")", "mimetype": "text/plain", "start_char_idx": 2560, "end_char_idx": 2576, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bda67473-6eb5-46d4-9ab4-f2d5e371921d": {"__data__": {"id_": "bda67473-6eb5-46d4-9ab4-f2d5e371921d", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6486cb74-8eea-4dba-888f-af0997f24350", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "7b43254b4788d6a86436b64006d2ab39850ff07a2516c0813b60f24f0e55764c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bf1c8883-ddb4-4df6-92fa-604ebfd829ce", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "9b64fdc04bd17ebb1335dba4e629ef72178343faf6d986872000902e028411b9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c014f770-7c48-4fb7-9bd6-0723019a69ba", "node_type": "1", "metadata": {}, "hash": "459c2a9ea4b62e270d2c4c16aed5c0f4fedaeeafab815077f2bceb734b9baf63", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async def ask_post(\r\n    request: Request,\r\n    payload: dict,\r\n    x_user_id: Optional[str] = Header(None, alias=\"X-User-Id\"),\r\n    debug: Optional[bool] = Query(False),\r\n):", "mimetype": "text/plain", "start_char_idx": 2578, "end_char_idx": 2752, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c014f770-7c48-4fb7-9bd6-0723019a69ba": {"__data__": {"id_": "c014f770-7c48-4fb7-9bd6-0723019a69ba", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6486cb74-8eea-4dba-888f-af0997f24350", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "7b43254b4788d6a86436b64006d2ab39850ff07a2516c0813b60f24f0e55764c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bda67473-6eb5-46d4-9ab4-f2d5e371921d", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "6c7fecebbc8b939a5227dfd19dc9fd67c8ac3f58938407d42d92d8baefdc1559", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ea9b21a-39fe-4987-8281-54607abf06c9", "node_type": "1", "metadata": {}, "hash": "14950a966e9d4c11e06c56cdd9c6b4a3be71f89b7b828355169023139c908a47", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"\"\"\r\n    Main POST endpoint for /ask \u2014 entrypoint for planner, codex, echo, or other agents.\r\n    Routes all queries to MCP for context injection, agent routing, and critics.\r\n    Echo is always available as both primary and fallback agent.\r\n    \"\"\"\r\n    user_id = x_user_id or \"anonymous\"\r\n    question = payload.get(\"question\", \"\")\r\n    context = payload.get(\"context\", \"\")\r\n    files = payload.get(\"files\", [])\r\n    topics = payload.get(\"topics\", [])\r\n    role = payload.get(\"role\", \"planner\")\r\n\r\n    if not question:\r\n        raise HTTPException(status_code=422, detail=\"Missing 'question' in request payload.\")\r\n\r\n    try:\r\n        result = await run_mcp(\r\n            query=question,\r\n            files=files,\r\n            topics=topics,\r\n            role=role,\r\n            user_id=user_id,\r\n            debug=debug\r\n        )\r\n        return result\r\n    except Exception as e:\r\n        traceback.print_exc()\r\n        raise HTTPException(status_code=500, detail=str(e))", "mimetype": "text/plain", "start_char_idx": 2758, "end_char_idx": 3734, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6ea9b21a-39fe-4987-8281-54607abf06c9": {"__data__": {"id_": "6ea9b21a-39fe-4987-8281-54607abf06c9", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6486cb74-8eea-4dba-888f-af0997f24350", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "7b43254b4788d6a86436b64006d2ab39850ff07a2516c0813b60f24f0e55764c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c014f770-7c48-4fb7-9bd6-0723019a69ba", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "74b38235d8335b81c46a5eea67e4cf7cc08240b5a0d4b8d391013f85ea36e1ad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f8f78446-108e-45ae-a3ce-ee0d39410096", "node_type": "1", "metadata": {}, "hash": "f00ca52469a0efaf6b1648060a46e71415883e4a9e28ea844cee1926d8fe2409", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# === POST /ask/stream ==========================================================", "mimetype": "text/plain", "start_char_idx": 3740, "end_char_idx": 3821, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f8f78446-108e-45ae-a3ce-ee0d39410096": {"__data__": {"id_": "f8f78446-108e-45ae-a3ce-ee0d39410096", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6486cb74-8eea-4dba-888f-af0997f24350", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "7b43254b4788d6a86436b64006d2ab39850ff07a2516c0813b60f24f0e55764c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ea9b21a-39fe-4987-8281-54607abf06c9", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "d37b40d2c652cb65b858479f812c3a9a8f07ebf2d27655d2cf3956b487ae2018", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0443b3cd-e516-4295-a0bc-854770e5500b", "node_type": "1", "metadata": {}, "hash": "a53c99ee91c30f7d6f3a39448c7406d0a8214f73d22c60cdc715bb4d2fe9b054", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.post(\"/stream\")", "mimetype": "text/plain", "start_char_idx": 3823, "end_char_idx": 3846, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0443b3cd-e516-4295-a0bc-854770e5500b": {"__data__": {"id_": "0443b3cd-e516-4295-a0bc-854770e5500b", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6486cb74-8eea-4dba-888f-af0997f24350", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "7b43254b4788d6a86436b64006d2ab39850ff07a2516c0813b60f24f0e55764c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f8f78446-108e-45ae-a3ce-ee0d39410096", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "6f7421b5dc778d5bdd092eb875eb6307420ae397c9acafcab26b34fba4e3dc69", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4de6b473-a7fa-4cec-adaf-32c6d1f7f990", "node_type": "1", "metadata": {}, "hash": "825065f22a2c8651a7df6cd024ad9f30c2e471b7d684f432075d60d409b772b6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async def ask_stream(\r\n    request: Request,\r\n    payload: dict,\r\n    x_user_id: Optional[str] = Header(None, alias=\"X-User-Id\"),\r\n):", "mimetype": "text/plain", "start_char_idx": 3848, "end_char_idx": 3981, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4de6b473-a7fa-4cec-adaf-32c6d1f7f990": {"__data__": {"id_": "4de6b473-a7fa-4cec-adaf-32c6d1f7f990", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6486cb74-8eea-4dba-888f-af0997f24350", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "7b43254b4788d6a86436b64006d2ab39850ff07a2516c0813b60f24f0e55764c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0443b3cd-e516-4295-a0bc-854770e5500b", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "90f82a939b429a1887a5227d9cead61a08bdf2294d87fd4246725b0168334b1d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9778068-23d8-4fc9-8ad3-2a258e790d4e", "node_type": "1", "metadata": {}, "hash": "0a7dd9a03886c26eedb2d3d4b9e50dc134ef7f2273033c98199c3b7d35312833", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"\"\"\r\n    Streaming endpoint for planner/meta/explicit agent roles via MCP routing.\r\n    If the routed agent supports streaming, streams the response.\r\n    Fallbacks to Echo stream if the routed agent doesn't support streaming.\r\n    \"\"\"\r\n    user_id = x_user_id or \"anonymous\"\r\n    question = payload.get(\"question\", \"\")\r\n    context = payload.get(\"context\", \"\")\r\n    files = payload.get(\"files\", [])\r\n    topics = payload.get(\"topics\", [])\r\n    role = payload.get(\"role\", \"planner\")\r\n\r\n    if not question:\r\n        raise HTTPException(status_code=422, detail=\"Missing 'question' in request payload.\")", "mimetype": "text/plain", "start_char_idx": 3987, "end_char_idx": 4588, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c9778068-23d8-4fc9-8ad3-2a258e790d4e": {"__data__": {"id_": "c9778068-23d8-4fc9-8ad3-2a258e790d4e", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6486cb74-8eea-4dba-888f-af0997f24350", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "7b43254b4788d6a86436b64006d2ab39850ff07a2516c0813b60f24f0e55764c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4de6b473-a7fa-4cec-adaf-32c6d1f7f990", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "421d15ca4aa2aa09c321f375bde3db3ef3cb0f9446bcb1be1d10b8c41f626fff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d0b2d80b-7e9a-46eb-8af8-e645ae60f07f", "node_type": "1", "metadata": {}, "hash": "43fd74f5e8f854a44a75fe8f1ed3fbae6cd6322b0a2793f4c5b751b3226448ad", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "try:\r\n        # Get plan and route via MCP (to know the agent/role to stream)\r\n        mcp_result = await run_mcp(\r\n            query=question,\r\n            files=files,\r\n            topics=topics,\r\n            role=role,\r\n            user_id=user_id,\r\n            debug=False\r\n        )\r\n        plan = mcp_result.get(\"plan\", {})\r\n        used_route = plan.get(\"meta_override\") or plan.get(\"route\") or role\r\n\r\n        stream_fn = STREAM_ROUTING_TABLE.get(used_route, echo_stream)\r\n        return StreamingResponse(\r\n            stream_fn(question, context, user_id),\r\n            media_type=\"text/plain\"\r\n        )\r\n    except Exception as e:\r\n        traceback.print_exc()\r\n        raise HTTPException(status_code=500, detail=str(e))", "mimetype": "text/plain", "start_char_idx": 4596, "end_char_idx": 5331, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d0b2d80b-7e9a-46eb-8af8-e645ae60f07f": {"__data__": {"id_": "d0b2d80b-7e9a-46eb-8af8-e645ae60f07f", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6486cb74-8eea-4dba-888f-af0997f24350", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "7b43254b4788d6a86436b64006d2ab39850ff07a2516c0813b60f24f0e55764c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9778068-23d8-4fc9-8ad3-2a258e790d4e", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "c22ea12637ea237e982be6b0211fa883eb6a633df84af0803596bcd21f4bac3f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "091ea73f-0266-451a-8d51-9276b3c95975", "node_type": "1", "metadata": {}, "hash": "16f177fcde3ec2f4432018a96feb813b8dc110f2ad5d68cf00fbfa0f85c93e28", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# === POST /ask/codex_stream ===================================================\r\n@router.post(\"/codex_stream\")\r\nasync def ask_codex_stream(\r\n    request: Request,\r\n    payload: dict,\r\n    x_user_id: Optional[str] = Header(None, alias=\"X-User-Id\")\r\n):\r\n    \"\"\"\r\n    Streaming endpoint for Codex/code edits. Streams text output directly.\r\n    \"\"\"\r\n    user_id = x_user_id or \"anonymous\"\r\n    question = payload.get(\"question\", \"\")\r\n    context = payload.get(\"context\", \"\")\r\n\r\n    if not question or not context:\r\n        raise HTTPException(status_code=422, detail=\"Missing 'question' or 'context' in request.\")\r\n\r\n    try:\r\n        return StreamingResponse(codex_stream(question, context, user_id), media_type=\"text/plain\")\r\n    except Exception as e:\r\n        traceback.print_exc()\r\n        raise HTTPException(status_code=500, detail=str(e))\r\n\r\n\r\n# === POST /ask/echo_stream ====================================================", "mimetype": "text/plain", "start_char_idx": 5337, "end_char_idx": 6266, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "091ea73f-0266-451a-8d51-9276b3c95975": {"__data__": {"id_": "091ea73f-0266-451a-8d51-9276b3c95975", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6486cb74-8eea-4dba-888f-af0997f24350", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "7b43254b4788d6a86436b64006d2ab39850ff07a2516c0813b60f24f0e55764c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d0b2d80b-7e9a-46eb-8af8-e645ae60f07f", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "f2c4e433d70e0be012bfc7f9c7b36c4c77a2e0003e249184b31d712896d728e4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "97abf292-5cae-46c5-8dc8-dfa6f63c7192", "node_type": "1", "metadata": {}, "hash": "4eccd1be39fc1d46dfa17ec9d53390e506cbec2e5df0aaa2f580d923d779bd6b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.post(\"/echo_stream\")\r\nasync def ask_echo_stream(\r\n    request: Request,\r\n    payload: dict,\r\n    x_user_id: Optional[str] = Header(None, alias=\"X-User-Id\"),\r\n):\r\n    \"\"\"\r\n    Streaming endpoint for Echo (LLM chat) responses.\r\n    \"\"\"\r\n    user_id = x_user_id or \"anonymous\"\r\n    question = payload.get(\"question\", \"\")\r\n    context = payload.get(\"context\", \"\")\r\n\r\n    if not question:\r\n        raise HTTPException(status_code=422, detail=\"Missing 'question' in request.\")\r\n\r\n    try:\r\n        return StreamingResponse(\r\n            echo_stream(question, context, user_id),\r\n            media_type=\"text/plain\"\r\n        )\r\n    except Exception as e:\r\n        traceback.print_exc()\r\n        raise HTTPException(status_code=500, detail=str(e))\r\n\r\n\r\n# === GET /ask/test_openai ======================================================", "mimetype": "text/plain", "start_char_idx": 6268, "end_char_idx": 7102, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "97abf292-5cae-46c5-8dc8-dfa6f63c7192": {"__data__": {"id_": "97abf292-5cae-46c5-8dc8-dfa6f63c7192", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6486cb74-8eea-4dba-888f-af0997f24350", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "7b43254b4788d6a86436b64006d2ab39850ff07a2516c0813b60f24f0e55764c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "091ea73f-0266-451a-8d51-9276b3c95975", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/ask.py", "file_name": "ask.py", "file_type": "text/x-python", "file_size": 7881, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "7b03cc6c3f8c2a173beeb64ed337bae52642fe44c738557950e513650c0ecac7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.get(\"/test_openai\")\r\nasync def test_openai():\r\n    \"\"\"\r\n    Quick endpoint to verify OpenAI API connectivity and model health.\r\n    \"\"\"\r\n    try:\r\n        client = create_openai_client()\r\n        response = await client.chat.completions.create(\r\n            model=\"gpt-4o\",\r\n            messages=[\r\n                {\"role\": \"system\", \"content\": \"You are a helpful assistant.\"},\r\n                {\"role\": \"user\", \"content\": \"Ping test\"}\r\n            ]\r\n        )\r\n        return { \"response\": response.choices[0].message.content }\r\n    except OpenAIError as e:\r\n        raise HTTPException(status_code=502, detail=str(e))\r\n    except Exception as e:\r\n        traceback.print_exc()\r\n        raise HTTPException(status_code=500, detail=f\"Unexpected error: {str(e)}\")", "mimetype": "text/plain", "start_char_idx": 7104, "end_char_idx": 7875, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6ad1fd2f-2938-4cb9-93bb-f1f5393c2e6e": {"__data__": {"id_": "6ad1fd2f-2938-4cb9-93bb-f1f5393c2e6e", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/codex.py", "file_name": "codex.py", "file_type": "text/x-python", "file_size": 1956, "creation_date": "2025-06-28", "last_modified_date": "2025-06-28", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2feb28ac-baa4-422f-b55d-584b618a4518", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/codex.py", "file_name": "codex.py", "file_type": "text/x-python", "file_size": 1956, "creation_date": "2025-06-28", "last_modified_date": "2025-06-28", "tier": "code"}, "hash": "f927ce9d095583bfdd1c139fad39da14b529f4a0a8c26633d9c7fc41b28adefa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f6592ca7-734c-4e06-8cd5-da32fce6b12c", "node_type": "1", "metadata": {}, "hash": "693fb1b2ad5bfbfd8d2fc7b2a808a29598f6eabe5e6828b181d2b1d2cc175925", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: routes/codex.py\n# Purpose: CodexAgent backend endpoints (e.g., patch application, preview)\n\nimport os\nfrom fastapi import APIRouter, HTTPException, Request\nfrom fastapi.responses import JSONResponse\nfrom pydantic import BaseModel\nfrom utils.patch_utils import validate_patch_format\nfrom core.logging import log_event\n\nrouter = APIRouter(prefix=\"/codex\", tags=[\"codex\"])\n\nclass PatchRequest(BaseModel):\n    target_file: str\n    patch: str\n    reason: str", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 461, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f6592ca7-734c-4e06-8cd5-da32fce6b12c": {"__data__": {"id_": "f6592ca7-734c-4e06-8cd5-da32fce6b12c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/codex.py", "file_name": "codex.py", "file_type": "text/x-python", "file_size": 1956, "creation_date": "2025-06-28", "last_modified_date": "2025-06-28", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2feb28ac-baa4-422f-b55d-584b618a4518", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/codex.py", "file_name": "codex.py", "file_type": "text/x-python", "file_size": 1956, "creation_date": "2025-06-28", "last_modified_date": "2025-06-28", "tier": "code"}, "hash": "f927ce9d095583bfdd1c139fad39da14b529f4a0a8c26633d9c7fc41b28adefa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ad1fd2f-2938-4cb9-93bb-f1f5393c2e6e", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/codex.py", "file_name": "codex.py", "file_type": "text/x-python", "file_size": 1956, "creation_date": "2025-06-28", "last_modified_date": "2025-06-28", "tier": "code"}, "hash": "ce4201c36125d8e042155a329bedb5d709613c37ea02cc953f92198b29b890df", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1d5f863-ef22-45f6-a85a-732aa302f36d", "node_type": "1", "metadata": {}, "hash": "d22f0c38627e0fc4a5e606442df0eb238fdebd03d3538411ec06d83c4542200c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.post(\"/apply_patch\")", "mimetype": "text/plain", "start_char_idx": 463, "end_char_idx": 491, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c1d5f863-ef22-45f6-a85a-732aa302f36d": {"__data__": {"id_": "c1d5f863-ef22-45f6-a85a-732aa302f36d", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/codex.py", "file_name": "codex.py", "file_type": "text/x-python", "file_size": 1956, "creation_date": "2025-06-28", "last_modified_date": "2025-06-28", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2feb28ac-baa4-422f-b55d-584b618a4518", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/codex.py", "file_name": "codex.py", "file_type": "text/x-python", "file_size": 1956, "creation_date": "2025-06-28", "last_modified_date": "2025-06-28", "tier": "code"}, "hash": "f927ce9d095583bfdd1c139fad39da14b529f4a0a8c26633d9c7fc41b28adefa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f6592ca7-734c-4e06-8cd5-da32fce6b12c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/codex.py", "file_name": "codex.py", "file_type": "text/x-python", "file_size": 1956, "creation_date": "2025-06-28", "last_modified_date": "2025-06-28", "tier": "code"}, "hash": "ad3d278220e9ecced78a72d7104ff632193954f0c4d5af05d6a41f8392d8cf2c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3b7a7b32-a375-4644-b176-03910ccd64ce", "node_type": "1", "metadata": {}, "hash": "ab0d782143db508dc89893eb0e8e8dbe8e0ecfb38448b6b7627b9cc543ba1a8f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async def apply_patch(payload: PatchRequest, request: Request):", "mimetype": "text/plain", "start_char_idx": 492, "end_char_idx": 555, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3b7a7b32-a375-4644-b176-03910ccd64ce": {"__data__": {"id_": "3b7a7b32-a375-4644-b176-03910ccd64ce", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/codex.py", "file_name": "codex.py", "file_type": "text/x-python", "file_size": 1956, "creation_date": "2025-06-28", "last_modified_date": "2025-06-28", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2feb28ac-baa4-422f-b55d-584b618a4518", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/codex.py", "file_name": "codex.py", "file_type": "text/x-python", "file_size": 1956, "creation_date": "2025-06-28", "last_modified_date": "2025-06-28", "tier": "code"}, "hash": "f927ce9d095583bfdd1c139fad39da14b529f4a0a8c26633d9c7fc41b28adefa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c1d5f863-ef22-45f6-a85a-732aa302f36d", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/codex.py", "file_name": "codex.py", "file_type": "text/x-python", "file_size": 1956, "creation_date": "2025-06-28", "last_modified_date": "2025-06-28", "tier": "code"}, "hash": "de12bec774ea0341fa3e18307362363beb017ac93b56f86c30ad22179319c44c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e368d551-37fa-4d82-969f-a945da783fee", "node_type": "1", "metadata": {}, "hash": "4beb4fba4075fb1d024af2924c3d39c9328b47bc114dba5ef17490595b44dea6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"\"\"\n    Apply a code patch directly to the specified file on disk.\n    \"\"\"\n    if not validate_patch_format({\"type\": \"patch\", **payload.dict()}):\n        raise HTTPException(status_code=422, detail=\"Invalid patch format.\")", "mimetype": "text/plain", "start_char_idx": 560, "end_char_idx": 782, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e368d551-37fa-4d82-969f-a945da783fee": {"__data__": {"id_": "e368d551-37fa-4d82-969f-a945da783fee", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/codex.py", "file_name": "codex.py", "file_type": "text/x-python", "file_size": 1956, "creation_date": "2025-06-28", "last_modified_date": "2025-06-28", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2feb28ac-baa4-422f-b55d-584b618a4518", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/codex.py", "file_name": "codex.py", "file_type": "text/x-python", "file_size": 1956, "creation_date": "2025-06-28", "last_modified_date": "2025-06-28", "tier": "code"}, "hash": "f927ce9d095583bfdd1c139fad39da14b529f4a0a8c26633d9c7fc41b28adefa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b7a7b32-a375-4644-b176-03910ccd64ce", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/codex.py", "file_name": "codex.py", "file_type": "text/x-python", "file_size": 1956, "creation_date": "2025-06-28", "last_modified_date": "2025-06-28", "tier": "code"}, "hash": "a98a6f8361d2efc8cfde3ad899ba5aa06d8a7ea00b9990aa8f3dcfc50afdce92", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a2585195-8503-4b5b-9926-09c76139f88e", "node_type": "1", "metadata": {}, "hash": "d47654aafcf01241cfdf56fba7536f23763a28ad1bf700d7f2e0ba85f6e40cef", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "try:\n        file_path = os.path.abspath(payload.target_file)\n\n        # Optional: Prevent writing outside project root\n        project_root = os.path.abspath(os.getcwd())\n        if not file_path.startswith(project_root):\n            raise HTTPException(status_code=400, detail=\"Refused to write outside project scope.\")\n\n        # Optional: Ensure file exists (comment out if you want to allow creation)\n        if not os.path.exists(file_path):\n            raise HTTPException(status_code=404, detail=f\"Target file not found: {payload.target_file}\")\n\n        with open(file_path, \"w\", encoding=\"utf-8\") as f:\n            f.write(payload.patch)\n\n    except Exception as e:\n        log_event(\"codex_patch_error\", {\n            \"file\": payload.target_file,\n            \"error\": str(e)\n        })\n        raise HTTPException(status_code=500, detail=f\"Failed to apply patch: {e}\")\n\n    log_event(\"codex_patch_applied\", {\n        \"file\": payload.target_file,\n        \"user\": request.headers.get(\"X-User-Id\", \"anon\")\n    })", "mimetype": "text/plain", "start_char_idx": 788, "end_char_idx": 1807, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a2585195-8503-4b5b-9926-09c76139f88e": {"__data__": {"id_": "a2585195-8503-4b5b-9926-09c76139f88e", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/codex.py", "file_name": "codex.py", "file_type": "text/x-python", "file_size": 1956, "creation_date": "2025-06-28", "last_modified_date": "2025-06-28", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2feb28ac-baa4-422f-b55d-584b618a4518", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/codex.py", "file_name": "codex.py", "file_type": "text/x-python", "file_size": 1956, "creation_date": "2025-06-28", "last_modified_date": "2025-06-28", "tier": "code"}, "hash": "f927ce9d095583bfdd1c139fad39da14b529f4a0a8c26633d9c7fc41b28adefa", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e368d551-37fa-4d82-969f-a945da783fee", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/codex.py", "file_name": "codex.py", "file_type": "text/x-python", "file_size": 1956, "creation_date": "2025-06-28", "last_modified_date": "2025-06-28", "tier": "code"}, "hash": "f814d9f1775c3b5f1ffda25f383903dc5e2814364ae2173f9bf03110ee52da2d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "return JSONResponse({\n        \"status\": \"success\",\n        \"file\": payload.target_file,\n        \"message\": \"Patch written successfully.\"\n    })", "mimetype": "text/plain", "start_char_idx": 1812, "end_char_idx": 1955, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d7b57a38-6d55-4e5a-897b-f39097264644": {"__data__": {"id_": "d7b57a38-6d55-4e5a-897b-f39097264644", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/context.py", "file_name": "context.py", "file_type": "text/x-python", "file_size": 2115, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a4c43d1-4d9a-43ad-badd-40bb975ff269", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/context.py", "file_name": "context.py", "file_type": "text/x-python", "file_size": 2115, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "ed7a9922d3de03a5410751048c0a2760daf2890179ae8a1d7da2457c0474d2fb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5a3440ed-48e3-4e2f-b6f2-ddff01b00469", "node_type": "1", "metadata": {}, "hash": "bb153e986205b7a2dd4f813ac17be80510aa9d7621f703ef23aafe3584d1aa46", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# routes/context.py\nfrom fastapi import APIRouter, HTTPException\nfrom services.logs import get_recent_logs, log_and_refresh\nfrom services.google_docs_sync import sync_google_docs\nfrom openai import OpenAI\nfrom pathlib import Path\nimport os\n\nrouter = APIRouter(prefix=\"/context\", tags=[\"context\"])\n\n# Path to the context file generated from session logs\ndoc_path = Path(\"docs/generated/relay_context.md\")\ndoc_path.parent.mkdir(parents=True, exist_ok=True)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 454, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5a3440ed-48e3-4e2f-b6f2-ddff01b00469": {"__data__": {"id_": "5a3440ed-48e3-4e2f-b6f2-ddff01b00469", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/context.py", "file_name": "context.py", "file_type": "text/x-python", "file_size": 2115, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a4c43d1-4d9a-43ad-badd-40bb975ff269", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/context.py", "file_name": "context.py", "file_type": "text/x-python", "file_size": 2115, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "ed7a9922d3de03a5410751048c0a2760daf2890179ae8a1d7da2457c0474d2fb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d7b57a38-6d55-4e5a-897b-f39097264644", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/context.py", "file_name": "context.py", "file_type": "text/x-python", "file_size": 2115, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "9e463f96253be8ce41f4e11fad9ff732d5dc92d1a71dffdc25cb37a3b21f0eba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "09eeec65-c607-4251-8ac9-4ba8a47c7a6a", "node_type": "1", "metadata": {}, "hash": "bf2cb2aa6b8c2631d44b94e9ddc835c8a86ea36651c24d55badcd75cdbfd5b0d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.post(\"/update\")", "mimetype": "text/plain", "start_char_idx": 456, "end_char_idx": 479, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "09eeec65-c607-4251-8ac9-4ba8a47c7a6a": {"__data__": {"id_": "09eeec65-c607-4251-8ac9-4ba8a47c7a6a", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/context.py", "file_name": "context.py", "file_type": "text/x-python", "file_size": 2115, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a4c43d1-4d9a-43ad-badd-40bb975ff269", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/context.py", "file_name": "context.py", "file_type": "text/x-python", "file_size": 2115, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "ed7a9922d3de03a5410751048c0a2760daf2890179ae8a1d7da2457c0474d2fb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5a3440ed-48e3-4e2f-b6f2-ddff01b00469", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/context.py", "file_name": "context.py", "file_type": "text/x-python", "file_size": 2115, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "16f1f9021c48366a1839c42071a08daa809553017623df32b98f167f581f52d2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "76a60c16-69f2-4f25-9f82-bc451a4d423e", "node_type": "1", "metadata": {}, "hash": "93c4a68533c9644789640b257a8022959681ab70e01af7786bf9986970bd7b10", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def update_context_summary():", "mimetype": "text/plain", "start_char_idx": 480, "end_char_idx": 509, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "76a60c16-69f2-4f25-9f82-bc451a4d423e": {"__data__": {"id_": "76a60c16-69f2-4f25-9f82-bc451a4d423e", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/context.py", "file_name": "context.py", "file_type": "text/x-python", "file_size": 2115, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a4c43d1-4d9a-43ad-badd-40bb975ff269", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/context.py", "file_name": "context.py", "file_type": "text/x-python", "file_size": 2115, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "ed7a9922d3de03a5410751048c0a2760daf2890179ae8a1d7da2457c0474d2fb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "09eeec65-c607-4251-8ac9-4ba8a47c7a6a", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/context.py", "file_name": "context.py", "file_type": "text/x-python", "file_size": 2115, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "8417f9a70709246e6c0fe838dd9ed9d8fd164ea777fa8f0b817dad5244c7ea32", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4de69029-cf63-41c8-a073-687e5ecff4cc", "node_type": "1", "metadata": {}, "hash": "8edb6428550a6ad5856a221128203f533df71d8dd0ea7ca9fc6f2fc10302461c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "try:\n        logs = get_recent_logs(100)\n        if not logs:\n            return {\"status\": \"no logs to summarize\"}\n\n        # Prepare the text block from log entries\n        text = \"\\n\".join(f\"[{l['source']}] {l['message']}\" for l in logs)\n\n        # Use OpenAI API to summarize log content\n        client = OpenAI(api_key=os.getenv(\"OPENAI_API_KEY\"))\n        response = client.chat.completions.create(\n            model=\"gpt-4o\",\n            messages=[\n                {\"role\": \"system\", \"content\": \"You are a system summarizer for a command center log.\"},\n                {\"role\": \"user\", \"content\": f\"Summarize the following session log:\\n\\n{text}\"}\n            ]\n        )\n\n        summary = response.choices[0].message.content.strip()\n\n        # Write summary to markdown file\n        doc_path.write_text(f\"# Relay Context (auto-generated)\\n\\n{summary}\", encoding=\"utf-8\")\n        log_and_refresh(\"system\", \"Updated relay_context.md from session logs.\")\n\n        return {\"status\": \"ok\", \"summary\": summary}", "mimetype": "text/plain", "start_char_idx": 514, "end_char_idx": 1526, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4de69029-cf63-41c8-a073-687e5ecff4cc": {"__data__": {"id_": "4de69029-cf63-41c8-a073-687e5ecff4cc", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/context.py", "file_name": "context.py", "file_type": "text/x-python", "file_size": 2115, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a4c43d1-4d9a-43ad-badd-40bb975ff269", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/context.py", "file_name": "context.py", "file_type": "text/x-python", "file_size": 2115, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "ed7a9922d3de03a5410751048c0a2760daf2890179ae8a1d7da2457c0474d2fb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "76a60c16-69f2-4f25-9f82-bc451a4d423e", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/context.py", "file_name": "context.py", "file_type": "text/x-python", "file_size": 2115, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "a1a915848c178a2fbe91cc96566be4e65ae7fb5f35460b9b6d047872311131bb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0091979e-2322-4aa7-a3f6-26c158fe3607", "node_type": "1", "metadata": {}, "hash": "4aae920e701cc6d5088f418c732c04d2c0a7e092855605819ef8e4af419452c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "except Exception as e:\n        raise HTTPException(status_code=500, detail=str(e))", "mimetype": "text/plain", "start_char_idx": 1532, "end_char_idx": 1614, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0091979e-2322-4aa7-a3f6-26c158fe3607": {"__data__": {"id_": "0091979e-2322-4aa7-a3f6-26c158fe3607", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/context.py", "file_name": "context.py", "file_type": "text/x-python", "file_size": 2115, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0a4c43d1-4d9a-43ad-badd-40bb975ff269", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/context.py", "file_name": "context.py", "file_type": "text/x-python", "file_size": 2115, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "ed7a9922d3de03a5410751048c0a2760daf2890179ae8a1d7da2457c0474d2fb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4de69029-cf63-41c8-a073-687e5ecff4cc", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/context.py", "file_name": "context.py", "file_type": "text/x-python", "file_size": 2115, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "8be593afe14f5fcdf2d11c24f1004355d123f385c1e3dd7254c4b6a4faf27c3f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# Deprecated sync route for compatibility with /docs/sync_google\n@router.post(\"/sync_google\")\ndef legacy_sync_google():\n    return sync_docs_and_update()\n\n@router.post(\"/sync_docs\")\ndef sync_docs_and_update():\n    try:\n        synced = sync_google_docs()\n        log_and_refresh(\"system\", f\"Synced {len(synced)} docs from Google Drive into /docs/imported\")\n        return {\"status\": \"ok\", \"synced_docs\": synced}\n    except Exception as e:\n        raise HTTPException(status_code=500, detail=str(e))", "mimetype": "text/plain", "start_char_idx": 1616, "end_char_idx": 2114, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3e0ac4b1-26c3-410f-8f16-76cb7d6b02f2": {"__data__": {"id_": "3e0ac4b1-26c3-410f-8f16-76cb7d6b02f2", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed5a2863-7494-4d49-9434-d573338a9855", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "129e202544a6df5bc0051bc3b467749dfb626dd3310e8d4275e63d647256d18a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cbdd13ff-b60a-4cd7-b2ac-9c7971bbb747", "node_type": "1", "metadata": {}, "hash": "b4019de86bdce6d68ac1d7b0a490e1a46b1ed324dca3232410d489914301c1be", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: routes/control.py\r\n# Directory: routes/\r\n# Purpose: Relay Action Queue & Audit API\r\n# - Queue, approve, deny, and execute agent-proposed actions\r\n# - Maintains audit log and Gmail notifications\r\n# - CORS-safe, with strong error handling and API key auth\r\n\r\nimport os, json\r\nfrom uuid import uuid4\r\nfrom pathlib import Path\r\nfrom datetime import datetime\r\nfrom fastapi import APIRouter, Depends, Header, HTTPException, Body, Request\r\n\r\nfrom services import gmail\r\nfrom agents import codex_agent, docs_agent, echo_agent\r\nfrom agents.control_agent import control_agent\r\n\r\nrouter = APIRouter(prefix=\"/control\", tags=[\"control\"])\r\n\r\n# === Auth Middleware ===\r\ndef auth(key: str = Header(None, alias=\"X-API-Key\")):\r\n    expected = os.getenv(\"API_KEY\")\r\n    if not key or key != expected:\r\n        raise HTTPException(status_code=401, detail=\"Invalid API key\")\r\n    return \"admin\"\r\n\r\n# === File paths ===\r\nACTIONS_PATH = Path(__file__).resolve().parents[1] / \"data\" / \"pending_actions.json\"", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 991, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cbdd13ff-b60a-4cd7-b2ac-9c7971bbb747": {"__data__": {"id_": "cbdd13ff-b60a-4cd7-b2ac-9c7971bbb747", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed5a2863-7494-4d49-9434-d573338a9855", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "129e202544a6df5bc0051bc3b467749dfb626dd3310e8d4275e63d647256d18a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3e0ac4b1-26c3-410f-8f16-76cb7d6b02f2", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "f73a027ea8a560d137c44fa237987aba8e4035f3ac56b69ef6c25bd32b10dcd0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "66ee905d-41f9-4102-876b-908554745acb", "node_type": "1", "metadata": {}, "hash": "10108ae5667b48c3308227559d69f6e48935b6b2b696f31a207aa81456aa0b9c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "LOG_PATH = Path(__file__).resolve().parents[1] / \"logs\" / \"actions.log\"\r\nACTIONS_PATH.parent.mkdir(parents=True, exist_ok=True)\r\nLOG_PATH.parent.mkdir(parents=True, exist_ok=True)\r\nif not ACTIONS_PATH.exists():\r\n    ACTIONS_PATH.write_text(\"[]\")\r\n\r\n# === Utils ===\r\ndef load_actions():\r\n    return json.loads(ACTIONS_PATH.read_text())\r\n\r\ndef save_actions(actions):\r\n    ACTIONS_PATH.write_text(json.dumps(actions, indent=2))\r\n\r\ndef append_log(entry: dict):\r\n    with LOG_PATH.open(\"a\", encoding=\"utf-8\") as f:\r\n        f.write(json.dumps(entry) + \"\\n\")\r\n\r\ndef update_action_history(action, status, user, comment=\"\"):\r\n    action.setdefault(\"history\", []).append({\r\n        \"timestamp\": datetime.utcnow().isoformat(),\r\n        \"status\": status,\r\n        \"user\": user,\r\n        \"comment\": comment\r\n    })\r\n\r\n# === Agent Dispatch Map ===\r\nAGENT_DISPATCH = {\r\n    \"codex\": codex_agent.handle,\r\n    \"control\": control_agent.run,\r\n    \"docs\": docs_agent.analyze,\r\n    \"echo\": echo_agent.run,\r\n}\r\n\r\n# === /queue_action ===", "mimetype": "text/plain", "start_char_idx": 993, "end_char_idx": 2008, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "66ee905d-41f9-4102-876b-908554745acb": {"__data__": {"id_": "66ee905d-41f9-4102-876b-908554745acb", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed5a2863-7494-4d49-9434-d573338a9855", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "129e202544a6df5bc0051bc3b467749dfb626dd3310e8d4275e63d647256d18a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cbdd13ff-b60a-4cd7-b2ac-9c7971bbb747", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "51c6b347e987fbf0ae9356cc5987b2bcf1f7974c1e3c36ee77b03192ba26cf47", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ca638bac-102b-489c-8809-f8b670dd2a3b", "node_type": "1", "metadata": {}, "hash": "842f867662c1771b96a4dab5681eca3d742edc68286c43c535da562f972fe631", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.post(\"/queue_action\")\r\ndef queue_action(data: dict = Body(...), user=Depends(auth)):\r\n    action_id = str(uuid4())\r\n    queued = {\r\n        \"id\": action_id,\r\n        \"timestamp\": datetime.utcnow().isoformat(),\r\n        \"status\": \"pending\",\r\n        \"action\": data,\r\n        \"history\": [{\r\n            \"timestamp\": datetime.utcnow().isoformat(),\r\n            \"status\": \"pending\",\r\n            \"user\": user,\r\n            \"comment\": data.get(\"rationale\", \"\")\r\n        }]\r\n    }\r\n    actions = load_actions()\r\n    actions.append(queued)\r\n    save_actions(actions)\r\n    return {\"status\": \"queued\", \"id\": action_id}\r\n\r\n# === /list_queue ===\r\n@router.get(\"/list_queue\")\r\ndef list_queue(user=Depends(auth)):\r\n    try:\r\n        return {\"actions\": load_actions()}\r\n    except Exception as e:\r\n        raise HTTPException(500, f\"Failed to load queue: {e}\")\r\n\r\n# === /approve_action ===", "mimetype": "text/plain", "start_char_idx": 2010, "end_char_idx": 2892, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ca638bac-102b-489c-8809-f8b670dd2a3b": {"__data__": {"id_": "ca638bac-102b-489c-8809-f8b670dd2a3b", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed5a2863-7494-4d49-9434-d573338a9855", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "129e202544a6df5bc0051bc3b467749dfb626dd3310e8d4275e63d647256d18a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "66ee905d-41f9-4102-876b-908554745acb", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "b8ee84452b98ded205243387292d1deebdb77c7d8dc6cf79545ef2cb984bc8ae", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "45bb37b6-dcc7-4cd7-b6fd-5b5dffc56242", "node_type": "1", "metadata": {}, "hash": "c542deaa11788b2314a17df01204eab1e01dbef160c8c4b00e4d732b2f52b392", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.post(\"/approve_action\")", "mimetype": "text/plain", "start_char_idx": 2894, "end_char_idx": 2925, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "45bb37b6-dcc7-4cd7-b6fd-5b5dffc56242": {"__data__": {"id_": "45bb37b6-dcc7-4cd7-b6fd-5b5dffc56242", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed5a2863-7494-4d49-9434-d573338a9855", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "129e202544a6df5bc0051bc3b467749dfb626dd3310e8d4275e63d647256d18a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ca638bac-102b-489c-8809-f8b670dd2a3b", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "3ca4446612096cc91fa94dfcd6943f6760e3629c4d728f3e945bb6687889963a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2c656bbf-45c2-483c-a7a4-1fc20015789c", "node_type": "1", "metadata": {}, "hash": "908542b4ff80e79be8a053da507ddddb0bcf7dda706258952dc8d34a6dd8f175", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async def approve_action(data: dict = Body(...), user=Depends(auth)):", "mimetype": "text/plain", "start_char_idx": 2927, "end_char_idx": 2996, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2c656bbf-45c2-483c-a7a4-1fc20015789c": {"__data__": {"id_": "2c656bbf-45c2-483c-a7a4-1fc20015789c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed5a2863-7494-4d49-9434-d573338a9855", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "129e202544a6df5bc0051bc3b467749dfb626dd3310e8d4275e63d647256d18a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "45bb37b6-dcc7-4cd7-b6fd-5b5dffc56242", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "2fe0aec18c28ce0c063abb3eb3240cb2f0f6f17cd9810836d1ed3c9d56203b9b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "29168a1d-7dd6-4222-83d1-c4047db1f1ab", "node_type": "1", "metadata": {}, "hash": "899e92b777ea06d0d45727be7de6f53bbf635a2a5f414e62d4a56562b3fba8b0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "action_id = data.get(\"id\")\r\n    comment = data.get(\"comment\", \"\")\r\n    if not action_id:\r\n        raise HTTPException(400, \"Missing action ID\")\r\n\r\n    actions = load_actions()\r\n    updated = []\r\n    approved = None\r\n\r\n    for a in actions:\r\n        if a[\"id\"] == action_id and a[\"status\"] == \"pending\":\r\n            approved = a\r\n            a[\"status\"] = \"approved\"\r\n            a[\"approved_at\"] = datetime.utcnow().isoformat()\r\n            update_action_history(a, \"approved\", user, comment)\r\n        updated.append(a)\r\n\r\n    if not approved:\r\n        raise HTTPException(404, \"No matching pending action found\")\r\n\r\n    save_actions(updated)\r\n    action_data = approved[\"action\"]\r\n\r\n    route = action_data.get(\"type\")\r\n    handler = AGENT_DISPATCH.get(route)", "mimetype": "text/plain", "start_char_idx": 3002, "end_char_idx": 3763, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "29168a1d-7dd6-4222-83d1-c4047db1f1ab": {"__data__": {"id_": "29168a1d-7dd6-4222-83d1-c4047db1f1ab", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed5a2863-7494-4d49-9434-d573338a9855", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "129e202544a6df5bc0051bc3b467749dfb626dd3310e8d4275e63d647256d18a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c656bbf-45c2-483c-a7a4-1fc20015789c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "c56a6054306133ca94047b0e4f8f609613c8f99c3b5d185d98fab5d749341f66", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f623af46-563d-4bc6-95ab-28c72df348c1", "node_type": "1", "metadata": {}, "hash": "0ba2325cd1c7d573bd926b38e25456e326c1343dd02a7eeaf38f269bb05b804b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if handler:\r\n        result = await handler(\n            query=action_data.get(\"query\", \"\"),\n            context=action_data.get(\"context\", {}),\n            user_id=user\n        )\n        append_log({\r\n            \"id\": action_id,\r\n            \"type\": route,\r\n            \"timestamp\": datetime.utcnow().isoformat(),\r\n            \"status\": \"executed\",\r\n            \"result\": result,\r\n            \"user\": user,\r\n            \"comment\": comment\r\n        })\r\n        return result\r\n\r\n    # Optional: file write fallback\r\n    if action_data.get(\"type\") == \"write_file\":\r\n        result = write_file(action_data, user=user)\r\n        append_log({\r\n            \"id\": action_id,\r\n            \"type\": \"write_file\",\r\n            \"path\": action_data.get(\"path\"),\r\n            \"timestamp\": datetime.utcnow().isoformat(),\r\n            \"status\": \"executed\",\r\n            \"result\": result,\r\n            \"user\": user,\r\n            \"comment\": comment\r\n        })\r\n        return result", "mimetype": "text/plain", "start_char_idx": 3771, "end_char_idx": 4737, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f623af46-563d-4bc6-95ab-28c72df348c1": {"__data__": {"id_": "f623af46-563d-4bc6-95ab-28c72df348c1", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed5a2863-7494-4d49-9434-d573338a9855", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "129e202544a6df5bc0051bc3b467749dfb626dd3310e8d4275e63d647256d18a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "29168a1d-7dd6-4222-83d1-c4047db1f1ab", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "6fd8c666a80490f27eaa2e7de5fbcf7eb9dbbc030ce392595e115dce3e560254", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a130c050-a383-452d-b128-340abb1e54ea", "node_type": "1", "metadata": {}, "hash": "484603fb2676d76a8e1b219a065f8e543aea337b948ef7bdf808a731e78d9eb3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "append_log({\r\n        \"id\": action_id,\r\n        \"type\": action_data.get(\"type\"),\r\n        \"timestamp\": datetime.utcnow().isoformat(),\r\n        \"status\": \"approved\",\r\n        \"user\": user,\r\n        \"comment\": comment\r\n    })\r\n\r\n    return {\"status\": \"approved\"}", "mimetype": "text/plain", "start_char_idx": 4745, "end_char_idx": 5005, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a130c050-a383-452d-b128-340abb1e54ea": {"__data__": {"id_": "a130c050-a383-452d-b128-340abb1e54ea", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed5a2863-7494-4d49-9434-d573338a9855", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "129e202544a6df5bc0051bc3b467749dfb626dd3310e8d4275e63d647256d18a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f623af46-563d-4bc6-95ab-28c72df348c1", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "4e6f1123ff514db56449378a7f123521a9a7864833a2103f5e2669ed1bb58b54", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9cef7f9a-ddb8-4ae2-b9fe-e1bd827444f4", "node_type": "1", "metadata": {}, "hash": "9a36369d3a4fe3f14881bd4f384623d253d0178543a53f37a1b7f341ba3af024", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# === /deny_action ===\r\n@router.post(\"/deny_action\")\r\ndef deny_action(data: dict = Body(...), user=Depends(auth)):\r\n    action_id = data.get(\"id\")\r\n    comment = data.get(\"comment\", \"\")\r\n    if not action_id:\r\n        raise HTTPException(400, \"Missing action ID\")\r\n\r\n    actions = load_actions()\r\n    updated = []\r\n    denied = None\r\n\r\n    for a in actions:\r\n        if a[\"id\"] == action_id and a[\"status\"] == \"pending\":\r\n            denied = a\r\n            a[\"status\"] = \"denied\"\r\n            a[\"denied_at\"] = datetime.utcnow().isoformat()\r\n            update_action_history(a, \"denied\", user, comment)\r\n        updated.append(a)\r\n\r\n    if not denied:\r\n        raise HTTPException(404, \"No matching pending action found\")\r\n\r\n    save_actions(updated)\r\n    append_log({\r\n        \"id\": action_id,\r\n        \"type\": denied[\"action\"].get(\"type\"),\r\n        \"timestamp\": datetime.utcnow().isoformat(),\r\n        \"status\": \"denied\",\r\n        \"user\": user,\r\n        \"comment\": comment\r\n    })\r\n    return {\"status\": \"denied\"}", "mimetype": "text/plain", "start_char_idx": 5009, "end_char_idx": 6025, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9cef7f9a-ddb8-4ae2-b9fe-e1bd827444f4": {"__data__": {"id_": "9cef7f9a-ddb8-4ae2-b9fe-e1bd827444f4", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed5a2863-7494-4d49-9434-d573338a9855", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "129e202544a6df5bc0051bc3b467749dfb626dd3310e8d4275e63d647256d18a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a130c050-a383-452d-b128-340abb1e54ea", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "fac3dec1fce17118ce7250d501ce3cc423dd827ec9da445679225135907c40b7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7d6f580e-6f1b-4685-b6e6-c3300a877af8", "node_type": "1", "metadata": {}, "hash": "953ec8d0f849eeeb62cb4b0544ecdc4d9847b60ca148a1ed1368a8d1dc5aa4d9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# === /list_log ===\r\n@router.get(\"/list_log\")\r\ndef list_log(user=Depends(auth)):\r\n    try:\r\n        if not LOG_PATH.exists():\r\n            return {\"log\": []}\r\n        with LOG_PATH.open(\"r\", encoding=\"utf-8\") as f:\r\n            lines = f.readlines()\r\n        return {\"log\": [json.loads(line) for line in lines if line.strip()]}\r\n    except Exception as e:\r\n        raise HTTPException(500, f\"Failed to read log: {e}\")\r\n\r\n# === /write_file ===", "mimetype": "text/plain", "start_char_idx": 6029, "end_char_idx": 6471, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7d6f580e-6f1b-4685-b6e6-c3300a877af8": {"__data__": {"id_": "7d6f580e-6f1b-4685-b6e6-c3300a877af8", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed5a2863-7494-4d49-9434-d573338a9855", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "129e202544a6df5bc0051bc3b467749dfb626dd3310e8d4275e63d647256d18a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9cef7f9a-ddb8-4ae2-b9fe-e1bd827444f4", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "ba43b3ac90e40f72057076e4e6da92f64a5e68b4054f11fec70d3b94bd85282d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6efe1fc5-cc86-4b7c-bd01-010c96946c69", "node_type": "1", "metadata": {}, "hash": "d6f891ccd01c045fc2c1e3727f1872458e9191d0797e08dc80e51a049f5006c2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.post(\"/write_file\")\r\ndef write_file(data: dict = Body(...), user=Depends(auth)):\r\n    path = data.get(\"path\")\r\n    content = data.get(\"content\")\r\n    if not path or not content:\r\n        raise HTTPException(400, \"Missing path or content\")\r\n    base = Path(__file__).resolve().parents[1]\r\n    full_path = base / path\r\n    full_path.parent.mkdir(parents=True, exist_ok=True)\r\n    try:\r\n        full_path.write_text(content)\r\n        return {\r\n            \"status\": \"success\",\r\n            \"path\": str(full_path.relative_to(base)),\r\n            \"size\": len(content)\r\n        }\r\n    except Exception as e:\r\n        raise HTTPException(500, f\"Failed to write file: {e}\")\r\n\r\n# === /test (ControlAgent direct test) ===", "mimetype": "text/plain", "start_char_idx": 6473, "end_char_idx": 7192, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6efe1fc5-cc86-4b7c-bd01-010c96946c69": {"__data__": {"id_": "6efe1fc5-cc86-4b7c-bd01-010c96946c69", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "ed5a2863-7494-4d49-9434-d573338a9855", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "129e202544a6df5bc0051bc3b467749dfb626dd3310e8d4275e63d647256d18a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d6f580e-6f1b-4685-b6e6-c3300a877af8", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/control.py", "file_name": "control.py", "file_type": "text/x-python", "file_size": 7803, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "56c8aecaeb900a8aaa7c745b4608e65a41abff8e8e6b679aaf235182bda26715", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.post(\"/test\")\r\nasync def control_test(request: Request, user=Depends(auth)):\r\n    payload = await request.json()\r\n    query = payload.get(\"query\", \"\")\r\n    context = payload.get(\"context\", {})\r\n\r\n    result = await control_agent.run(query=query, context=context, user_id=user)\r\n    append_log({\r\n        \"id\": f\"manual-{datetime.utcnow().isoformat()}\",\r\n        \"type\": \"control_test\",\r\n        \"timestamp\": datetime.utcnow().isoformat(),\r\n        \"status\": \"executed\",\r\n        \"user\": user,\r\n        \"query\": query,\r\n        \"context\": context,\r\n        \"result\": result\r\n    })\r\n    return result", "mimetype": "text/plain", "start_char_idx": 7194, "end_char_idx": 7801, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "36b24d64-af4f-46ff-9846-4764ac90b417": {"__data__": {"id_": "36b24d64-af4f-46ff-9846-4764ac90b417", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/debug.py", "file_name": "debug.py", "file_type": "text/x-python", "file_size": 342, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "31602a85-f549-47b2-bf88-7568d9a05046", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/debug.py", "file_name": "debug.py", "file_type": "text/x-python", "file_size": 342, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "c0c6c1465f429831c901b9633ff9f4d2de119f3eb47c38f9f8171f6c4a404027", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: routes/debug.py\nfrom fastapi import APIRouter\nimport os\n\nrouter = APIRouter()\n\n@router.get(\"/debug/env\")\ndef debug_env():\n    val = os.getenv(\"GOOGLE_CREDS_JSON\")\n    return {\n        \"GOOGLE_CREDS_JSON present\": bool(val),\n        \"length\": len(val) if val else 0,\n        \"starts_with\": val[:30] + \"...\" if val else \"MISSING\"\n    }", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 341, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f384bc8a-5e04-4a3b-b244-0ce60e96d9ad": {"__data__": {"id_": "f384bc8a-5e04-4a3b-b244-0ce60e96d9ad", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8f6cc702-fe64-4297-bfd0-82363af6cf39", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "90f2cfeac7d207037051350a0216cb0168fcbd424e23ad00bedc3ea98ee6c4b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0e93c49a-8ab9-484b-bd48-2d5a64719263", "node_type": "1", "metadata": {}, "hash": "4a7ce2d3a57e09cd8c5a8f11cdde3bbb453863bd2a2c5c800cd74630dd0877f7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n# File: docs.py\n# Directory: routes/\n# Purpose : Secure API routes for listing, viewing, syncing, promoting,\n#           pruning, and prioritizing tiered Markdown documentation.\n# Notes   :\n#   \u2022 API\u2011key (or future SSO) required for every endpoint.\n#   \u2022 Path\u2011traversal safe: requested file must resolve inside project_root/docs.\n#   \u2022 Adds /mark_priority to manually set doc tier or pin for context.\n# \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\nfrom __future__ import annotations\n\nimport os\nimport shutil\nfrom pathlib import Path\nfrom typing import List\n\nfrom fastapi import APIRouter, Depends, HTTPException, Query, Request\nfrom fastapi.responses import JSONResponse\n\nfrom services.google_docs_sync import sync_google_docs\nfrom services import kb\nfrom services.context_engine import ContextEngine", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 916, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0e93c49a-8ab9-484b-bd48-2d5a64719263": {"__data__": {"id_": "0e93c49a-8ab9-484b-bd48-2d5a64719263", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8f6cc702-fe64-4297-bfd0-82363af6cf39", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "90f2cfeac7d207037051350a0216cb0168fcbd424e23ad00bedc3ea98ee6c4b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f384bc8a-5e04-4a3b-b244-0ce60e96d9ad", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "62d8a788418e9d8febf9c3cda4c6b267aa3a5e22ef87e64c3641ff64f970ff61", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7e8f1f38-8192-4f9e-bb63-d93b40485def", "node_type": "1", "metadata": {}, "hash": "a4e41b5531c85e703583606a0c00f384f3c69f23fc2094d88d92e39ebd43c183", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "from services.docs_utils import (\n    extract_doc_id,\n    build_doc_registry,\n    choose_canonical_path,\n    write_doc_metadata,\n)\n\n# \u2500\u2500\u2500 Router Setup \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nrouter = APIRouter(prefix=\"/docs\", tags=[\"docs\"])\n\n# \u2500\u2500\u2500 Auth Stub (replace with real auth) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\ndef require_api_key():\n    return True  # TODO: Replace with real API key or OAuth validation\n\n# \u2500\u2500\u2500 Constants \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nPROJECT_ROOT = Path(__file__).resolve().parents[1]\nBASE_DIR: Path = PROJECT_ROOT / \"docs\"\nCATEGORIES = (\"imported\", \"generated\")\n\ndef _safe_resolve(path: Path) -> Path:\n    resolved = path.resolve()\n    resolved.relative_to(BASE_DIR)\n    return resolved\n\n# \u2500\u2500\u2500 List docs with metadata \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500", "mimetype": "text/plain", "start_char_idx": 917, "end_char_idx": 1759, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7e8f1f38-8192-4f9e-bb63-d93b40485def": {"__data__": {"id_": "7e8f1f38-8192-4f9e-bb63-d93b40485def", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8f6cc702-fe64-4297-bfd0-82363af6cf39", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "90f2cfeac7d207037051350a0216cb0168fcbd424e23ad00bedc3ea98ee6c4b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0e93c49a-8ab9-484b-bd48-2d5a64719263", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "2810cf08c51243a9711868e91f638b7314bebd8e0cb17440ef82b501f05f15a2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "193cd6d6-53cf-4133-b15c-607faa498d0f", "node_type": "1", "metadata": {}, "hash": "0cc4d5580a35b197e50e9074ac18927fd460012dabb5b14c8830c92b46795587", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.get(\"/list\", dependencies=[Depends(require_api_key)])\nasync def list_docs(\n    category: str = Query(\"all\", pattern=\"^(all|imported|generated)$\"),\n    limit: int = Query(100, ge=1, le=500),\n):\n    cats = CATEGORIES if category == \"all\" else (category,)\n    results: List[dict] = []\n\n    for sub in cats:\n        for f in (BASE_DIR / sub).rglob(\"*.md\"):\n            if len(results) >= limit:\n                break\n            try:\n                doc_id = extract_doc_id(f)\n                results.append({\n                    \"path\": str(f.relative_to(BASE_DIR)),\n                    \"doc_id\": doc_id,\n                    \"tier\": sub,\n                    \"source\": \"google\" if \"imported\" in str(f) else \"local\",\n                    \"last_modified\": f.stat().st_mtime,\n                })\n            except Exception:\n                continue\n\n    return {\"files\": results}", "mimetype": "text/plain", "start_char_idx": 1760, "end_char_idx": 2640, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "193cd6d6-53cf-4133-b15c-607faa498d0f": {"__data__": {"id_": "193cd6d6-53cf-4133-b15c-607faa498d0f", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8f6cc702-fe64-4297-bfd0-82363af6cf39", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "90f2cfeac7d207037051350a0216cb0168fcbd424e23ad00bedc3ea98ee6c4b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7e8f1f38-8192-4f9e-bb63-d93b40485def", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "e1e3badf580964c55744baa53cfcb5a1566999e3d78280b949c92b18adc539d4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "71c65ac7-5386-4cb0-bfba-db12fb88ce27", "node_type": "1", "metadata": {}, "hash": "1eefdee14af6f5e89b59757a2aa7ed21328785e9f17f37ed7197855b8bc1231b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# \u2500\u2500\u2500 View raw markdown \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n@router.get(\"/view\", dependencies=[Depends(require_api_key)])\nasync def view_doc(path: str):\n    try:\n        doc_path = _safe_resolve(BASE_DIR / path)\n        if not doc_path.exists():\n            raise HTTPException(status_code=404, detail=\"Doc not found\")\n        return {\"content\": doc_path.read_text()}\n    except ValueError:\n        raise HTTPException(status_code=400, detail=\"Invalid path\")\n    except Exception:\n        raise HTTPException(status_code=500, detail=\"Internal error\")\n\n# \u2500\u2500\u2500 Google Docs Sync \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n@router.post(\"/sync\", dependencies=[Depends(require_api_key)])\nasync def sync_docs():\n    try:\n        saved_files = sync_google_docs()\n        kb.api_reindex()\n        ContextEngine.clear_cache()\n        return {\"synced_docs\": saved_files}\n    except Exception as e:\n        raise HTTPException(status_code=500, detail=str(e))", "mimetype": "text/plain", "start_char_idx": 2642, "end_char_idx": 3615, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "71c65ac7-5386-4cb0-bfba-db12fb88ce27": {"__data__": {"id_": "71c65ac7-5386-4cb0-bfba-db12fb88ce27", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8f6cc702-fe64-4297-bfd0-82363af6cf39", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "90f2cfeac7d207037051350a0216cb0168fcbd424e23ad00bedc3ea98ee6c4b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "193cd6d6-53cf-4133-b15c-607faa498d0f", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "fbe2c527118fddbbcce8a99c26249b8fe3ad2dc700213f72c04e2d72eaaf6168", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c7428435-1803-4132-9dca-4d6581fd535a", "node_type": "1", "metadata": {}, "hash": "72dd397f986b9cb9ededa4b97b97ce03aa75c7bb24c644864ed02333e013913b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# \u2500\u2500\u2500 Manual Reindex \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n@router.post(\"/refresh_kb\", dependencies=[Depends(require_api_key)])\nasync def refresh_kb():\n    try:\n        result = kb.api_reindex()\n        ContextEngine.clear_cache()\n        return result\n    except Exception as e:\n        raise HTTPException(status_code=500, detail=str(e))\n\n@router.post(\"/full_sync\", dependencies=[Depends(require_api_key)])\nasync def full_sync():\n    try:\n        files = sync_google_docs()\n        index_info = kb.api_reindex()\n        ContextEngine.clear_cache()\n        return {\"synced_docs\": files, \"kb\": index_info}\n    except Exception as e:\n        raise HTTPException(status_code=500, detail=str(e))\n\n# \u2500\u2500\u2500 Promote to canonical \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500", "mimetype": "text/plain", "start_char_idx": 3617, "end_char_idx": 4405, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c7428435-1803-4132-9dca-4d6581fd535a": {"__data__": {"id_": "c7428435-1803-4132-9dca-4d6581fd535a", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8f6cc702-fe64-4297-bfd0-82363af6cf39", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "90f2cfeac7d207037051350a0216cb0168fcbd424e23ad00bedc3ea98ee6c4b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "71c65ac7-5386-4cb0-bfba-db12fb88ce27", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "d7c4d78c5adcbdf4f73bd7ad7bc4896a97e8cf25b83033df256f16c0c7a05183", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c307de92-2ff6-4be8-8e6b-d246916614a6", "node_type": "1", "metadata": {}, "hash": "2ad449f8d373f3aacf0d1d6cb92766d2fd5ec3e47f9f459261c02132b8a80f55", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.post(\"/promote\", dependencies=[Depends(require_api_key)])\nasync def promote_doc(request: Request):\n    data = await request.json()\n    path = data.get(\"path\")\n    if not path:\n        raise HTTPException(status_code=400, detail=\"Missing path\")\n\n    full_path = _safe_resolve(BASE_DIR / path)\n    if not full_path.exists():\n        raise HTTPException(status_code=404, detail=\"File not found\")\n\n    doc_id = extract_doc_id(full_path)\n    target_path = BASE_DIR / f\"{doc_id}.md\"\n\n    try:\n        shutil.copy(full_path, target_path)\n        kb.api_reindex()\n        ContextEngine.clear_cache()\n        return {\"promoted\": str(target_path.relative_to(BASE_DIR))}\n    except Exception as e:\n        raise HTTPException(status_code=500, detail=f\"Promote failed: {e}\")\n\n# \u2500\u2500\u2500 Prune Duplicates \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500", "mimetype": "text/plain", "start_char_idx": 4406, "end_char_idx": 5254, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c307de92-2ff6-4be8-8e6b-d246916614a6": {"__data__": {"id_": "c307de92-2ff6-4be8-8e6b-d246916614a6", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8f6cc702-fe64-4297-bfd0-82363af6cf39", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "90f2cfeac7d207037051350a0216cb0168fcbd424e23ad00bedc3ea98ee6c4b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c7428435-1803-4132-9dca-4d6581fd535a", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "4b3e2ff0c0c278e98130271798515030c83fe1a9031f2a64d49f0759b100fcd7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e02aecf4-33ef-4256-8417-e43d9adbb4e1", "node_type": "1", "metadata": {}, "hash": "b9f625afe2b13ff9d18a18547e2747dfc8b58607fa1ea7dfe7f4b44f3b0ab706", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.post(\"/prune_duplicates\", dependencies=[Depends(require_api_key)])\nasync def prune_duplicates():\n    removed = []\n    try:\n        registry = build_doc_registry()\n        for doc_id, versions in registry.items():\n            if len(versions) <= 1:\n                continue\n            keep = choose_canonical_path(versions)\n            for path in versions:\n                if path != keep:\n                    try:\n                        os.remove(path)\n                        removed.append(str(path.relative_to(BASE_DIR)))\n                    except Exception as e:\n                        print(f\"\u26a0\ufe0f Failed to remove {path}: {e}\")\n        kb.api_reindex()\n        ContextEngine.clear_cache()\n        return {\"removed\": removed}\n    except Exception as e:\n        raise HTTPException(status_code=500, detail=f\"Prune failed: {e}\")\n\n# \u2500\u2500\u2500 Mark Priority / Tier \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500", "mimetype": "text/plain", "start_char_idx": 5255, "end_char_idx": 6175, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e02aecf4-33ef-4256-8417-e43d9adbb4e1": {"__data__": {"id_": "e02aecf4-33ef-4256-8417-e43d9adbb4e1", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8f6cc702-fe64-4297-bfd0-82363af6cf39", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "90f2cfeac7d207037051350a0216cb0168fcbd424e23ad00bedc3ea98ee6c4b0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c307de92-2ff6-4be8-8e6b-d246916614a6", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/docs.py", "file_name": "docs.py", "file_type": "text/x-python", "file_size": 8487, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "c80b8a38954f3932225b4114a4d57c8668e37f6c9661937dd19bcff5c8500e90", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.post(\"/mark_priority\", dependencies=[Depends(require_api_key)])\nasync def mark_priority(request: Request):\n    \"\"\"\n    Set or update a doc's metadata: tier, pinned flag, or doc_id.\n    \"\"\"\n    data = await request.json()\n    path = data.get(\"path\")\n    tier = data.get(\"tier\")\n    pinned = data.get(\"pinned\")\n\n    if not path:\n        raise HTTPException(status_code=400, detail=\"Missing path\")\n\n    full_path = _safe_resolve(BASE_DIR / path)\n    if not full_path.exists():\n        raise HTTPException(status_code=404, detail=\"File not found\")\n\n    try:\n        write_doc_metadata(full_path, {\"tier\": tier, \"pinned\": pinned})\n        kb.api_reindex()\n        ContextEngine.clear_cache()\n        return {\"updated\": str(full_path.relative_to(BASE_DIR)), \"tier\": tier, \"pinned\": pinned}\n    except Exception as e:\n        raise HTTPException(status_code=500, detail=f\"Metadata update failed: {e}\")", "mimetype": "text/plain", "start_char_idx": 6176, "end_char_idx": 7078, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "de2dd2e4-0cb6-41ee-b401-901057d072bd": {"__data__": {"id_": "de2dd2e4-0cb6-41ee-b401-901057d072bd", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/embeddings.py", "file_name": "embeddings.py", "file_type": "text/x-python", "file_size": 1611, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "38538099-cd23-461a-91d8-118e2933e517", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/embeddings.py", "file_name": "embeddings.py", "file_type": "text/x-python", "file_size": 1611, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "924168754e96143480ff0d939cc3e555f32183863df283e8735a457d2225512f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a824378b-3d72-4607-8aae-e5d7fe0310a9", "node_type": "1", "metadata": {}, "hash": "223797a1cb2fb91eb0ab94ab8218f8ac7ccc8bc9120fbbb67a38f9399fb5515a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# routes/embeddings.py\n\n\"\"\"\nEmbeddings Debug & Maintenance API for Relay\n---------------------------------------------\n- /embeddings/status : Check if embedding index exists, get stats\n- /embeddings/rebuild : (POST) Trigger rebuild of the embedding index\n\"\"\"\n\nfrom fastapi import APIRouter, Response, status\nfrom fastapi.responses import JSONResponse\nfrom services import embeddings\nimport os\nfrom pathlib import Path\nimport time\n\nrouter = APIRouter()\n\nEMBED_INDEX = embeddings.EMBED_INDEX", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 489, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a824378b-3d72-4607-8aae-e5d7fe0310a9": {"__data__": {"id_": "a824378b-3d72-4607-8aae-e5d7fe0310a9", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/embeddings.py", "file_name": "embeddings.py", "file_type": "text/x-python", "file_size": 1611, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "38538099-cd23-461a-91d8-118e2933e517", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/embeddings.py", "file_name": "embeddings.py", "file_type": "text/x-python", "file_size": 1611, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "924168754e96143480ff0d939cc3e555f32183863df283e8735a457d2225512f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "de2dd2e4-0cb6-41ee-b401-901057d072bd", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/embeddings.py", "file_name": "embeddings.py", "file_type": "text/x-python", "file_size": 1611, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "ec054fce1284ce30cb9b967a7e93652bfb7d764f69ead0df68f3b8c0613d5005", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7e706a26-cdae-4f9c-aee8-90ba09773e1e", "node_type": "1", "metadata": {}, "hash": "d0e8e8e03d233c4987e7d60efdcfdd4d5fed03e6348c8e4dbe1ea178cfbd7411", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.get(\"/embeddings/status\")\ndef embeddings_status():\n    \"\"\"\n    Returns basic info about the current embedding index.\n    \"\"\"\n    info = {\n        \"exists\": False,\n        \"num_files\": None,\n        \"last_modified\": None\n    }\n    if os.path.exists(EMBED_INDEX):\n        stat = os.stat(EMBED_INDEX)\n        info[\"exists\"] = True\n        info[\"last_modified\"] = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(stat.st_mtime))\n        try:\n            # Try to get number of files in index\n            import pickle\n            with open(EMBED_INDEX, \"rb\") as f:\n                idx = pickle.load(f)\n            info[\"num_files\"] = len(idx)\n        except Exception as e:\n            info[\"num_files\"] = f\"Error: {e}\"\n    return JSONResponse(info)", "mimetype": "text/plain", "start_char_idx": 491, "end_char_idx": 1245, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7e706a26-cdae-4f9c-aee8-90ba09773e1e": {"__data__": {"id_": "7e706a26-cdae-4f9c-aee8-90ba09773e1e", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/embeddings.py", "file_name": "embeddings.py", "file_type": "text/x-python", "file_size": 1611, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "38538099-cd23-461a-91d8-118e2933e517", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/embeddings.py", "file_name": "embeddings.py", "file_type": "text/x-python", "file_size": 1611, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "924168754e96143480ff0d939cc3e555f32183863df283e8735a457d2225512f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a824378b-3d72-4607-8aae-e5d7fe0310a9", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/embeddings.py", "file_name": "embeddings.py", "file_type": "text/x-python", "file_size": 1611, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "b1193f6da70047e02e9f8a3a7d5849c69f1714a0aa641f3d078bee16ce9b0fa3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.post(\"/embeddings/rebuild\")\ndef embeddings_rebuild():\n    \"\"\"\n    Triggers a rebuild of the embedding index.\n    \"\"\"\n    try:\n        embeddings.build_index()\n        return JSONResponse({\"status\": \"ok\", \"message\": \"Embedding index rebuilt.\"})\n    except Exception as e:\n        return JSONResponse({\"status\": \"error\", \"message\": str(e)}, status_code=500)", "mimetype": "text/plain", "start_char_idx": 1247, "end_char_idx": 1610, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "499e90f9-6914-4364-a86c-32d1d25bf2d5": {"__data__": {"id_": "499e90f9-6914-4364-a86c-32d1d25bf2d5", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/index.py", "file_name": "index.py", "file_type": "text/x-python", "file_size": 1283, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2e32764c-0abd-4fd3-9a67-d8023031943f", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/index.py", "file_name": "index.py", "file_type": "text/x-python", "file_size": 1283, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "2a34af4eadaba118760f6f63b813d9f1e601175d823e197598bb1cebb18eff3a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b0c07379-5363-4154-9efa-75b1399e4946", "node_type": "1", "metadata": {}, "hash": "479f48fd91f1802f8c343304da6541652eaf4951a8596d672082cadd1e3d35ce", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: routes/index.py\n# Directory: routes/\n# Purpose: FastAPI endpoint to trigger code/doc indexing\u2014secured with API Key, dev/staging only.\n\nfrom fastapi import APIRouter, Depends, HTTPException, Header\nimport os\nfrom services.indexer import index_directories\nfrom datetime import datetime\nfrom pathlib import Path\n\nrouter = APIRouter(prefix=\"/ops\", tags=[\"ops\"])\n\n# -- Security: Require X-API-Key header for indexing --\ndef require_api_key(x_api_key: str = Header(..., alias=\"X-API-Key\")):\n    api_key = os.environ.get(\"API_KEY\")\n    if not api_key or x_api_key != api_key:\n        raise HTTPException(status_code=403, detail=\"Invalid or missing API key.\")\n\n# -- Optional: Simple audit log to /data/ops_events.log --\nAUDIT_LOG = Path(os.environ.get(\"AUDIT_LOG\", \"/app/data/ops_events.log\"))\n\ndef log_event(msg: str):\n    now = datetime.utcnow().isoformat()\n    with AUDIT_LOG.open(\"a\", encoding=\"utf-8\") as f:\n        f.write(f\"{now} | {msg}\\n\")", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 948, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b0c07379-5363-4154-9efa-75b1399e4946": {"__data__": {"id_": "b0c07379-5363-4154-9efa-75b1399e4946", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/index.py", "file_name": "index.py", "file_type": "text/x-python", "file_size": 1283, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2e32764c-0abd-4fd3-9a67-d8023031943f", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/index.py", "file_name": "index.py", "file_type": "text/x-python", "file_size": 1283, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "2a34af4eadaba118760f6f63b813d9f1e601175d823e197598bb1cebb18eff3a", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "499e90f9-6914-4364-a86c-32d1d25bf2d5", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/index.py", "file_name": "index.py", "file_type": "text/x-python", "file_size": 1283, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "604f7035791f7e979248e4e8089775fefa11da21550079792bc8ad40fb8b5b17", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.post(\"/index\")\nasync def trigger_index(api_key: str = Depends(require_api_key), user: str = \"ops\"):\n    \"\"\"\n    Secured endpoint to start indexing codebase and docs (requires X-API-Key).\n    \"\"\"\n    log_event(f\"[TRIGGER_INDEX] by {user}\")\n    index_directories()\n    return {\"status\": \"ok\", \"message\": \"Indexing started!\"}", "mimetype": "text/plain", "start_char_idx": 950, "end_char_idx": 1280, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6adc2039-d1db-48fc-b893-241c33cf0918": {"__data__": {"id_": "6adc2039-d1db-48fc-b893-241c33cf0918", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 3005, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a40701d7-8355-4eda-a362-74956040cac5", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 3005, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "2fbce10adda125bea1b30dd532d522f407c2dbc339d9cd719b67916905271cb0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2fa2ffdd-4497-4087-b08f-337b9de2c138", "node_type": "1", "metadata": {}, "hash": "4af0bda4e0bcc620d915d839f4db1c15674d52bcccfa266e1220141318a31ab0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# routes/kb.py\n# Directory: routes/\n# Purpose: API routes for knowledge base (KB) semantic search, summary, and admin endpoints.\n# Security: All admin/debug endpoints require X-API-Key header, which must match API_KEY in environment.\n# Stack: FastAPI, LlamaIndex/OpenAI (via services.kb), User-aware\n\nfrom fastapi import APIRouter, HTTPException, Header, Depends, Query\nfrom pydantic import BaseModel\nfrom typing import Optional\nfrom services import kb\nimport os\n\n# === Security Dependency: Require X-API-Key header for all admin ops ===\ndef require_api_key(x_api_key: str = Header(..., alias=\"X-API-Key\")):\n    api_key = os.environ.get(\"API_KEY\")\n    if not api_key or x_api_key != api_key:\n        raise HTTPException(status_code=403, detail=\"Invalid or missing API key.\")\n\nrouter = APIRouter(prefix=\"/kb\", tags=[\"knowledge-base\"])\n\nclass SearchQuery(BaseModel):\n    query: str\n    k: int = 4\n    search_type: Optional[str] = \"all\"  # \"code\", \"doc\", or \"all\"", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 960, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2fa2ffdd-4497-4087-b08f-337b9de2c138": {"__data__": {"id_": "2fa2ffdd-4497-4087-b08f-337b9de2c138", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 3005, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a40701d7-8355-4eda-a362-74956040cac5", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 3005, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "2fbce10adda125bea1b30dd532d522f407c2dbc339d9cd719b67916905271cb0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6adc2039-d1db-48fc-b893-241c33cf0918", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 3005, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "10dd246b82b813a2869712ff46923c4ad8fd420b4ac0b1ba21238c39ea365346", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d1cda19-c42d-4e31-855b-17512f697595", "node_type": "1", "metadata": {}, "hash": "874de57e8fa778620154bcaabed689d6c6d001ce31eae0e610acbb7e4a4a31f0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.post(\"/search\")\nasync def search_kb(\n    q: SearchQuery,\n    x_user_id: Optional[str] = Header(None, alias=\"X-User-Id\")\n):\n    \"\"\"\n    Search the knowledge base (semantic vector index) for relevant snippets.\n    Optional X-User-Id header for user-aware results.\n    `search_type`: 'code', 'doc', or 'all'.\n    \"\"\"\n    user_id = x_user_id or \"anonymous\"\n    try:\n        results = kb.api_search(\n            query=q.query,\n            k=q.k,\n            search_type=q.search_type or \"all\"\n        )\n        return {\"results\": results}\n    except Exception as e:\n        raise HTTPException(status_code=500, detail=f\"KB search failed: {e}\")", "mimetype": "text/plain", "start_char_idx": 962, "end_char_idx": 1608, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9d1cda19-c42d-4e31-855b-17512f697595": {"__data__": {"id_": "9d1cda19-c42d-4e31-855b-17512f697595", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 3005, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a40701d7-8355-4eda-a362-74956040cac5", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 3005, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "2fbce10adda125bea1b30dd532d522f407c2dbc339d9cd719b67916905271cb0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2fa2ffdd-4497-4087-b08f-337b9de2c138", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 3005, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "81d2506a704e84add9e4b857d6735258cd570d62c2ab4138803e3e407d8b7b2d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9b48c9a1-66c8-4c28-9b8d-c62e58841f80", "node_type": "1", "metadata": {}, "hash": "428d7ff4f056129d08df3a470857a6475570844838e85befbb4c2dd694f15ef0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.get(\"/search\")\nasync def search_kb_get(\n    query: str,\n    k: int = 4,\n    search_type: Optional[str] = \"all\",\n    x_user_id: Optional[str] = Header(None, alias=\"X-User-Id\")\n):\n    \"\"\"\n    GET variant of KB search for easy testing.\n    \"\"\"\n    user_id = x_user_id or \"anonymous\"\n    try:\n        results = kb.api_search(\n            query=query,\n            k=k,\n            search_type=search_type or \"all\"\n        )\n        return {\"results\": results}\n    except Exception as e:\n        raise HTTPException(status_code=500, detail=f\"KB search failed: {e}\")", "mimetype": "text/plain", "start_char_idx": 1610, "end_char_idx": 2177, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9b48c9a1-66c8-4c28-9b8d-c62e58841f80": {"__data__": {"id_": "9b48c9a1-66c8-4c28-9b8d-c62e58841f80", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 3005, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a40701d7-8355-4eda-a362-74956040cac5", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 3005, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "2fbce10adda125bea1b30dd532d522f407c2dbc339d9cd719b67916905271cb0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d1cda19-c42d-4e31-855b-17512f697595", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/kb.py", "file_name": "kb.py", "file_type": "text/x-python", "file_size": 3005, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "8a9c4812670bd4150ae6fd0e5df6203c5a8ad758afd479c8e03c1a393e29f02f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.get(\"/summary\")\nasync def get_summary(\n    x_user_id: Optional[str] = Header(None, alias=\"X-User-Id\")\n):\n    \"\"\"\n    Fetch recent context summary for a given user, or fallback to generic summary.\n    \"\"\"\n    user_id = x_user_id or \"anonymous\"\n    try:\n        summary = kb.get_recent_summaries(user_id)\n        return {\"summary\": summary}\n    except Exception as e:\n        raise HTTPException(status_code=500, detail=f\"KB summary fetch failed: {e}\")\n\n@router.post(\"/reindex\")\nasync def reindex_kb(\n    api_key: str = Depends(require_api_key)\n):\n    \"\"\"\n    Trigger a rebuild of the KB index (admin/debug only).\n    Requires X-API-Key header.\n    \"\"\"\n    try:\n        resp = kb.api_reindex()\n        return resp\n    except Exception as e:\n        raise HTTPException(status_code=500, detail=f\"KB reindex failed: {e}\")", "mimetype": "text/plain", "start_char_idx": 2179, "end_char_idx": 3004, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "840417f7-552d-4aa7-a006-d3a757bcde21": {"__data__": {"id_": "840417f7-552d-4aa7-a006-d3a757bcde21", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/logs_sessions.py", "file_name": "logs_sessions.py", "file_type": "text/x-python", "file_size": 774, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7008791d-2bff-4136-a0d9-651ac6a9d691", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/logs_sessions.py", "file_name": "logs_sessions.py", "file_type": "text/x-python", "file_size": 774, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "ac37137f88bb368c9d021549240a54030e01730cc1ec32e95ed5c1372f81c633", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: routes/logs_sessions.py\n# Directory: routes/\n# Purpose: API route for listing user session memory logs from /logs/sessions/*.jsonl\n\nfrom fastapi import APIRouter, Request\nfrom pathlib import Path\nimport json\n\nrouter = APIRouter(prefix=\"/logs/sessions\", tags=[\"logs\", \"memory\"])\n\nSESSION_LOG_DIR = Path(\"./logs/sessions\")\n\n@router.get(\"/all\")\ndef list_all_sessions():\n    entries = []\n    for path in SESSION_LOG_DIR.glob(\"*.jsonl\"):\n        with open(path) as f:\n            for line in f:\n                try:\n                    parsed = json.loads(line)\n                    entries.append(parsed)\n                except json.JSONDecodeError:\n                    continue\n    return {\"entries\": sorted(entries, key=lambda x: x.get(\"timestamp\", \"\"), reverse=True)}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 773, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ae9385e1-99db-4e9e-a4cf-3c3a6a19fd89": {"__data__": {"id_": "ae9385e1-99db-4e9e-a4cf-3c3a6a19fd89", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/mcp.py", "file_name": "mcp.py", "file_type": "text/x-python", "file_size": 2007, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0183c143-2e6c-44a9-a818-c6cbfbaa3025", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/mcp.py", "file_name": "mcp.py", "file_type": "text/x-python", "file_size": 2007, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "9aea3853ae78fda155b2cd08324af403f67583386702fdc1725764667d5af8fd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d751e7d9-6bc7-4f2c-91bd-c8f4b1433aab", "node_type": "1", "metadata": {}, "hash": "bbb3a7dfe021b56ec5aafc0218f1cc4740904ade224261376a4a69ef0f3b0a37", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n# File: routes/mcp.py\n# Directory: routes/\n# Purpose: API route for direct access to MCP handler (run_mcp) for testing, automation, or admin use\n# \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\nfrom fastapi import APIRouter, HTTPException, Request, Header\nfrom typing import Optional\nfrom agents.mcp_agent import run_mcp\n\nrouter = APIRouter(prefix=\"/mcp\", tags=[\"mcp\"])", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 483, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d751e7d9-6bc7-4f2c-91bd-c8f4b1433aab": {"__data__": {"id_": "d751e7d9-6bc7-4f2c-91bd-c8f4b1433aab", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/mcp.py", "file_name": "mcp.py", "file_type": "text/x-python", "file_size": 2007, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0183c143-2e6c-44a9-a818-c6cbfbaa3025", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/mcp.py", "file_name": "mcp.py", "file_type": "text/x-python", "file_size": 2007, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "9aea3853ae78fda155b2cd08324af403f67583386702fdc1725764667d5af8fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae9385e1-99db-4e9e-a4cf-3c3a6a19fd89", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/mcp.py", "file_name": "mcp.py", "file_type": "text/x-python", "file_size": 2007, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "4bfdbbdea33c18f95cd726cd29fa7164810295920403474eafdb67a077a3a791", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e8d76c2c-d93f-4047-82f2-f6e16b44160c", "node_type": "1", "metadata": {}, "hash": "b40c7b28290f7c831dd916e414515c438282932af8f1f7b51aeee7a57c0b0183", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.post(\"/run\")", "mimetype": "text/plain", "start_char_idx": 485, "end_char_idx": 505, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e8d76c2c-d93f-4047-82f2-f6e16b44160c": {"__data__": {"id_": "e8d76c2c-d93f-4047-82f2-f6e16b44160c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/mcp.py", "file_name": "mcp.py", "file_type": "text/x-python", "file_size": 2007, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0183c143-2e6c-44a9-a818-c6cbfbaa3025", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/mcp.py", "file_name": "mcp.py", "file_type": "text/x-python", "file_size": 2007, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "9aea3853ae78fda155b2cd08324af403f67583386702fdc1725764667d5af8fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d751e7d9-6bc7-4f2c-91bd-c8f4b1433aab", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/mcp.py", "file_name": "mcp.py", "file_type": "text/x-python", "file_size": 2007, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "11a96d7673b13499fe533143e3ab9db7d951ddb47ae3c18113c26ba1b299f34a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2d79c4b4-51a6-4658-9192-4d1b6b8dfef4", "node_type": "1", "metadata": {}, "hash": "686f444522e6e768f2e39adcc4d8caa4dd5b1cde3f1077cb679b31bebb7bac7f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async def mcp_run(\n    request: Request,\n    x_user_id: Optional[str] = Header(None, alias=\"X-User-Id\")\n):", "mimetype": "text/plain", "start_char_idx": 506, "end_char_idx": 612, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2d79c4b4-51a6-4658-9192-4d1b6b8dfef4": {"__data__": {"id_": "2d79c4b4-51a6-4658-9192-4d1b6b8dfef4", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/mcp.py", "file_name": "mcp.py", "file_type": "text/x-python", "file_size": 2007, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0183c143-2e6c-44a9-a818-c6cbfbaa3025", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/mcp.py", "file_name": "mcp.py", "file_type": "text/x-python", "file_size": 2007, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "9aea3853ae78fda155b2cd08324af403f67583386702fdc1725764667d5af8fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e8d76c2c-d93f-4047-82f2-f6e16b44160c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/mcp.py", "file_name": "mcp.py", "file_type": "text/x-python", "file_size": 2007, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "cb4d874c8adbc97d13f81d2f07ab37bfed9f6d1b6274c0d645bbb7dce90adcfb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f5230dab-d73b-4a9a-ad97-4a0db9107843", "node_type": "1", "metadata": {}, "hash": "0281b915317bf8c6b58effed305866f00efe38d6c88cfba817792cf541e78091", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"\"\"\n    Direct endpoint for invoking the MCP agent orchestrator (run_mcp).\n    Accepts flexible input for query/prompt, plus optional files, topics, role, debug.\n    \"\"\"\n    data = await request.json()\n    # Accept a variety of possible input keys for maximum compatibility.\n    query = data.get(\"query\") or data.get(\"question\") or data.get(\"prompt\")\n    if not query:\n        raise HTTPException(status_code=422, detail=\"Missing 'query' in payload\")\n\n    # Use .get() with default empty list to prevent passing None if omitted.\n    files = data.get(\"files\", [])\n    topics = data.get(\"topics\", [])\n    role = data.get(\"role\", \"planner\")\n    debug = data.get(\"debug\", False)\n    user_id = x_user_id or \"anonymous\"", "mimetype": "text/plain", "start_char_idx": 617, "end_char_idx": 1330, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f5230dab-d73b-4a9a-ad97-4a0db9107843": {"__data__": {"id_": "f5230dab-d73b-4a9a-ad97-4a0db9107843", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/mcp.py", "file_name": "mcp.py", "file_type": "text/x-python", "file_size": 2007, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0183c143-2e6c-44a9-a818-c6cbfbaa3025", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/mcp.py", "file_name": "mcp.py", "file_type": "text/x-python", "file_size": 2007, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "9aea3853ae78fda155b2cd08324af403f67583386702fdc1725764667d5af8fd", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2d79c4b4-51a6-4658-9192-4d1b6b8dfef4", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/mcp.py", "file_name": "mcp.py", "file_type": "text/x-python", "file_size": 2007, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "608954d58c281cc1022982ceb408953acd59384d6faa2d102f9eddc70b0083e3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "try:\n        return await run_mcp(\n            query=query,\n            files=files,\n            topics=topics,\n            role=role,\n            user_id=user_id,\n            debug=debug,\n        )\n    except Exception as e:\n        # Optionally add traceback.print_exc() for debug\n        raise HTTPException(status_code=500, detail=f\"MCP error: {str(e)}\")", "mimetype": "text/plain", "start_char_idx": 1336, "end_char_idx": 1694, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "68d8d831-6681-4280-89c5-3af34874c104": {"__data__": {"id_": "68d8d831-6681-4280-89c5-3af34874c104", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0473e7e7-8950-40a9-8df1-929378b79229", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "e0d3d15458be2157e480f85a538a4767ef977aeb0b810ae3b6ce9587f187862f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "386c6965-275a-4807-98c2-30874b653d50", "node_type": "1", "metadata": {}, "hash": "24df04623bd0f8b8231ddd1239e4cf73ff63e270ae9485ba7c86c1f7d8a5222f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: routes/oauth.py\n# Directory: /routes\n# Purpose: Provide Google OAuth endpoints for both development (Codespaces) and production.\n# Supports dynamic and environment-overridden redirect URIs, robust logging, and token persistence.\n\nimport os\nimport base64\nfrom pathlib import Path\nfrom fastapi import APIRouter, Request, HTTPException\nfrom fastapi.responses import RedirectResponse\nfrom google_auth_oauthlib.flow import Flow, InstalledAppFlow\n\nrouter = APIRouter()\n\n# === OAuth Configuration ===\nSCOPES = [\n    \"https://www.googleapis.com/auth/drive.readonly\",\n    \"https://www.googleapis.com/auth/documents.readonly\",\n]\nCREDENTIALS_PATH = Path(\"/tmp/credentials.json\")\nTOKEN_PATH = Path(\"frontend/sync/token.json\")\n# Default post-auth landing page (relative path)\nDEFAULT_POST_REDIRECT = \"/status/summary\"\n# Optional overrides (full URIs)\nOVERRIDE_REDIRECT_URI = os.getenv(\"OAUTH_REDIRECT_URI\")\nOVERRIDE_POST_REDIRECT = os.getenv(\"POST_AUTH_REDIRECT_URI\")", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 962, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "386c6965-275a-4807-98c2-30874b653d50": {"__data__": {"id_": "386c6965-275a-4807-98c2-30874b653d50", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0473e7e7-8950-40a9-8df1-929378b79229", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "e0d3d15458be2157e480f85a538a4767ef977aeb0b810ae3b6ce9587f187862f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "68d8d831-6681-4280-89c5-3af34874c104", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "d3543c81139208363f9cab2bffcb1e3e8ed3d470cf7bad0d62df48c3bd5535bb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ad6d4622-b419-4550-acfd-770bf63f1ea7", "node_type": "1", "metadata": {}, "hash": "2a98ea417b241cd1211f870778368e491ca897a48e05e7ca51597464b755546c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.get(\"/google/auth\")", "mimetype": "text/plain", "start_char_idx": 964, "end_char_idx": 991, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ad6d4622-b419-4550-acfd-770bf63f1ea7": {"__data__": {"id_": "ad6d4622-b419-4550-acfd-770bf63f1ea7", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0473e7e7-8950-40a9-8df1-929378b79229", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "e0d3d15458be2157e480f85a538a4767ef977aeb0b810ae3b6ce9587f187862f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "386c6965-275a-4807-98c2-30874b653d50", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "46c6a3ecb8c46da53692bd9a0df9ebc3671b1aa785bf392f0ddb0c93b3d41e5b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c0ef2b16-8c2e-4105-b5fc-26a211d7fa95", "node_type": "1", "metadata": {}, "hash": "15023627f6f28b113d1690be01658bd189f8ee28c83bf3b66df028578789da21", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async def start_oauth(request: Request):", "mimetype": "text/plain", "start_char_idx": 992, "end_char_idx": 1032, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c0ef2b16-8c2e-4105-b5fc-26a211d7fa95": {"__data__": {"id_": "c0ef2b16-8c2e-4105-b5fc-26a211d7fa95", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0473e7e7-8950-40a9-8df1-929378b79229", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "e0d3d15458be2157e480f85a538a4767ef977aeb0b810ae3b6ce9587f187862f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ad6d4622-b419-4550-acfd-770bf63f1ea7", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "4a2408f0cce11c75f06dc6c36b0cfa34b7a4d79f2d463271e7064a5114d7bd90", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "86f985be-2e71-4553-90f0-b7f3e8999942", "node_type": "1", "metadata": {}, "hash": "8ca3317e849cc1910d20bbc1c89db9cd201e6bc1adaf1cda7b5ea64708304450", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"\"\"\n    Initiates the OAuth flow:\n    1. Ensure client secrets in /tmp/credentials.json from GOOGLE_CREDS_JSON.\n    2. Determine redirect URI (override or based on request.base_url).\n    3. Redirect browser to Google consent screen.\n    \"\"\"\n    # 1. Write client secrets if missing\n    if not CREDENTIALS_PATH.exists():\n        raw = os.getenv(\"GOOGLE_CREDS_JSON\")\n        if not raw:\n            raise HTTPException(500, detail=\"Missing GOOGLE_CREDS_JSON environment variable.\")\n        try:\n            creds_json = base64.b64decode(raw).decode()\n            CREDENTIALS_PATH.write_text(creds_json)\n            print(f\"\u2705 Wrote client secrets to {CREDENTIALS_PATH}\")\n        except Exception as e:\n            raise HTTPException(500, detail=f\"Error decoding GOOGLE_CREDS_JSON: {e}\")\n\n    # 2. Determine redirect URI", "mimetype": "text/plain", "start_char_idx": 1037, "end_char_idx": 1854, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "86f985be-2e71-4553-90f0-b7f3e8999942": {"__data__": {"id_": "86f985be-2e71-4553-90f0-b7f3e8999942", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0473e7e7-8950-40a9-8df1-929378b79229", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "e0d3d15458be2157e480f85a538a4767ef977aeb0b810ae3b6ce9587f187862f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c0ef2b16-8c2e-4105-b5fc-26a211d7fa95", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "6a237e85f4dcb0bbf31fcebf1597a7d64d031be9979c94cc626be2d84ff0d980", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3c61a857-41ae-4f53-9793-df5521f0692c", "node_type": "1", "metadata": {}, "hash": "5f475ad39d5569edd6b729779df1f05d522aadd1487717b8b18af575bbd93f74", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if OVERRIDE_REDIRECT_URI:\n        redirect_uri = OVERRIDE_REDIRECT_URI\n        print(f\"\ud83d\udd27 Using override redirect URI: {redirect_uri}\")\n    else:\n        base = str(request.base_url).rstrip(\"/\")\n        redirect_uri = f\"{base}/google/callback\"\n        print(f\"\ud83d\udd27 Using dynamic redirect URI: {redirect_uri}\")\n\n    # 3. Create flow and authorization URL\n    flow = Flow.from_client_secrets_file(\n        str(CREDENTIALS_PATH),\n        scopes=SCOPES,\n        redirect_uri=redirect_uri,\n    )\n    auth_url, state = flow.authorization_url(\n        access_type=\"offline\",\n        include_granted_scopes=\"true\",\n        prompt=\"consent\"\n    )\n    print(f\"\ud83c\udf10 Redirecting to Google consent: {auth_url}\")\n    return RedirectResponse(auth_url)", "mimetype": "text/plain", "start_char_idx": 1859, "end_char_idx": 2588, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3c61a857-41ae-4f53-9793-df5521f0692c": {"__data__": {"id_": "3c61a857-41ae-4f53-9793-df5521f0692c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0473e7e7-8950-40a9-8df1-929378b79229", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "e0d3d15458be2157e480f85a538a4767ef977aeb0b810ae3b6ce9587f187862f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "86f985be-2e71-4553-90f0-b7f3e8999942", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "ec5bbd73984655f6114edbaee4f7e683b6eaf13a946f79c4d191994086e0bab2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "41636d82-cb27-417b-9a0d-c7431fe7fc6d", "node_type": "1", "metadata": {}, "hash": "438084ff565554e535bc9159d36f50b26701f00680a4b882534b5ebeb051f8cc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.get(\"/google/callback\")", "mimetype": "text/plain", "start_char_idx": 2590, "end_char_idx": 2621, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "41636d82-cb27-417b-9a0d-c7431fe7fc6d": {"__data__": {"id_": "41636d82-cb27-417b-9a0d-c7431fe7fc6d", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0473e7e7-8950-40a9-8df1-929378b79229", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "e0d3d15458be2157e480f85a538a4767ef977aeb0b810ae3b6ce9587f187862f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3c61a857-41ae-4f53-9793-df5521f0692c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "6bcecbacd1272263219f1d522a873cb4d5f0ac6772983026172c6b91d3b910c9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "20d11dc5-4448-493d-9d34-b780f84f5e5f", "node_type": "1", "metadata": {}, "hash": "ffced2ce7e39cb714b1f673904f77996ef362f728fe8d1642e98a7a3ad51fc5a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async def oauth_callback(request: Request, code: str = None, state: str = None):", "mimetype": "text/plain", "start_char_idx": 2622, "end_char_idx": 2702, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "20d11dc5-4448-493d-9d34-b780f84f5e5f": {"__data__": {"id_": "20d11dc5-4448-493d-9d34-b780f84f5e5f", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0473e7e7-8950-40a9-8df1-929378b79229", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "e0d3d15458be2157e480f85a538a4767ef977aeb0b810ae3b6ce9587f187862f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "41636d82-cb27-417b-9a0d-c7431fe7fc6d", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "27c478313c2c7a5d5fe383fce53ed28e0060b6424d3fcf5023e721f0d705592e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0a71723e-9832-443a-99cc-ead3af2cd3c7", "node_type": "1", "metadata": {}, "hash": "0e73c3eb3ec7cb60dd4556fa79ddd0761876736eb8c30007b4b8f216f4a29de0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"\"\"\n    Handles the OAuth callback:\n    1. Validate 'code'.\n    2. Exchange code for credentials using redirect URI.\n    3. Persist token.json.\n    4. Redirect to post-auth landing (relative path).\n    \"\"\"\n    if not code:\n        raise HTTPException(400, detail=\"Missing authorization code in callback.\")\n\n    if not CREDENTIALS_PATH.exists():\n        raise HTTPException(500, detail=\"Client secrets not found.\")\n\n    # Determine redirect URI for token exchange\n    if OVERRIDE_REDIRECT_URI:\n        redirect_uri = OVERRIDE_REDIRECT_URI\n        print(f\"\ud83d\udd27 Exchanging token with override redirect URI: {redirect_uri}\")\n    else:\n        base = str(request.base_url).rstrip(\"/\")\n        redirect_uri = f\"{base}/google/callback\"\n        print(f\"\ud83d\udd27 Exchanging token with dynamic redirect URI: {redirect_uri}\")\n\n    # Exchange code for credentials", "mimetype": "text/plain", "start_char_idx": 2707, "end_char_idx": 3548, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0a71723e-9832-443a-99cc-ead3af2cd3c7": {"__data__": {"id_": "0a71723e-9832-443a-99cc-ead3af2cd3c7", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0473e7e7-8950-40a9-8df1-929378b79229", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "e0d3d15458be2157e480f85a538a4767ef977aeb0b810ae3b6ce9587f187862f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "20d11dc5-4448-493d-9d34-b780f84f5e5f", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "ec2ac9bdc9fae7c9455e28782fcd22710c2e1acbee8d77b69ab490e262995c0a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0cc6f030-24c8-45ed-8106-0c30467c796a", "node_type": "1", "metadata": {}, "hash": "30e10b95a0bb83d679fa756169b07b40e791e183acd96a47dea927e84cde6799", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "try:\n        flow = InstalledAppFlow.from_client_secrets_file(\n            str(CREDENTIALS_PATH),\n            scopes=SCOPES,\n            redirect_uri=redirect_uri,\n        )\n        flow.fetch_token(code=code)\n        creds = flow.credentials\n        print(f\"\u2705 Obtained credentials (expires: {creds.expiry})\")\n    except Exception as e:\n        print(f\"\u274c Token exchange failed: {e}\")\n        raise HTTPException(500, detail=f\"Token exchange failed: {e}\")\n\n    # Persist token.json\n    try:\n        TOKEN_PATH.parent.mkdir(parents=True, exist_ok=True)\n        TOKEN_PATH.write_text(creds.to_json())\n        print(f\"\u2705 Saved token.json to {TOKEN_PATH}\")\n    except Exception as e:\n        print(f\"\u274c Could not save token.json: {e}\")\n        raise HTTPException(500, detail=f\"Could not write token.json: {e}\")\n\n    # Redirect to post-auth page (use relative path to avoid port issues)", "mimetype": "text/plain", "start_char_idx": 3553, "end_char_idx": 4432, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0cc6f030-24c8-45ed-8106-0c30467c796a": {"__data__": {"id_": "0cc6f030-24c8-45ed-8106-0c30467c796a", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0473e7e7-8950-40a9-8df1-929378b79229", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "e0d3d15458be2157e480f85a538a4767ef977aeb0b810ae3b6ce9587f187862f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0a71723e-9832-443a-99cc-ead3af2cd3c7", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/oauth.py", "file_name": "oauth.py", "file_type": "text/x-python", "file_size": 4788, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "e4a239e08b37ba3e186768c9ff22cc86d612722a0d00a76fbd825c9ee3f47843", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if OVERRIDE_POST_REDIRECT:\n        post_redirect = OVERRIDE_POST_REDIRECT\n        print(f\"\ud83d\udd04 Redirecting to override post-auth: {post_redirect}\")\n    else:\n        post_redirect = DEFAULT_POST_REDIRECT\n        print(f\"\ud83d\udd04 Redirecting to relative post-auth path: {post_redirect}\")\n    return RedirectResponse(post_redirect)", "mimetype": "text/plain", "start_char_idx": 4437, "end_char_idx": 4756, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "38be037f-19c3-4741-8858-89e0148b68d4": {"__data__": {"id_": "38be037f-19c3-4741-8858-89e0148b68d4", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/search.py", "file_name": "search.py", "file_type": "text/x-python", "file_size": 2750, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b3c725d9-35ab-407d-849d-8a7b2f1b2110", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/search.py", "file_name": "search.py", "file_type": "text/x-python", "file_size": 2750, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "bf9db71a3b9fd7dffb902702f5dc763f9d27d071eaa7f8e349113cba4f98ce20", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d26ee48c-b607-4dca-a746-81f069b3cf78", "node_type": "1", "metadata": {}, "hash": "ba7e6d3b46ebdad25b0c2eb32132383958522ad70d00d68120d878a2926faa83", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: search.py\n# Directory: routes/\n# Purpose: Secure semantic KB search endpoint (GET /kb/search)\n# Notes:\n#   \u2022 Accepts canonical `query` param (alias `q` for legacy clients).\n#   \u2022 CORS\u2011safe: OPTIONS pre\u2011flight bypasses API\u2011key auth.\n#   \u2022 Casts similarity to `float` so FastAPI JSON serialisation never 500s.\n#   \u2022 Returns plain list consumed by SearchPanel.\n# Last Updated: 2025\u201106\u201113\n\nfrom __future__ import annotations\n\nimport os\nimport logging\nfrom typing import List, Optional\n\nfrom fastapi import APIRouter, Depends, HTTPException, Query, Request\n\nfrom services import kb\n\nlogger = logging.getLogger(__name__)\nrouter = APIRouter(prefix=\"/kb\", tags=[\"kb-search\"])\n\n# \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n# Auth helper\n# \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 792, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d26ee48c-b607-4dca-a746-81f069b3cf78": {"__data__": {"id_": "d26ee48c-b607-4dca-a746-81f069b3cf78", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/search.py", "file_name": "search.py", "file_type": "text/x-python", "file_size": 2750, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b3c725d9-35ab-407d-849d-8a7b2f1b2110", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/search.py", "file_name": "search.py", "file_type": "text/x-python", "file_size": 2750, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "bf9db71a3b9fd7dffb902702f5dc763f9d27d071eaa7f8e349113cba4f98ce20", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "38be037f-19c3-4741-8858-89e0148b68d4", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/search.py", "file_name": "search.py", "file_type": "text/x-python", "file_size": 2750, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "ee35713dbd552048f00523e7c6c4d5a039f75cfc5b959df730effd7843071017", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7bccc35d-1cf7-4a49-a217-8cfe9efbd68f", "node_type": "1", "metadata": {}, "hash": "ee2872ba31e547a84ae2c002b52d30c96b6a30acd14a5124921bc99805a87caf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def require_api_key(request: Request) -> None:\n    \"\"\"Simple header check. OPTIONS (CORS pre-flight) bypasses auth.\"\"\"\n    if request.method == \"OPTIONS\":\n        return  # allow browser pre-flight\n\n    if request.headers.get(\"x-api-key\") != os.getenv(\"API_KEY\"):\n        raise HTTPException(status_code=401, detail=\"Invalid API key\")\n\n\n# \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n# Routes\n# \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500", "mimetype": "text/plain", "start_char_idx": 795, "end_char_idx": 1242, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7bccc35d-1cf7-4a49-a217-8cfe9efbd68f": {"__data__": {"id_": "7bccc35d-1cf7-4a49-a217-8cfe9efbd68f", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/search.py", "file_name": "search.py", "file_type": "text/x-python", "file_size": 2750, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b3c725d9-35ab-407d-849d-8a7b2f1b2110", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/search.py", "file_name": "search.py", "file_type": "text/x-python", "file_size": 2750, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "bf9db71a3b9fd7dffb902702f5dc763f9d27d071eaa7f8e349113cba4f98ce20", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d26ee48c-b607-4dca-a746-81f069b3cf78", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/search.py", "file_name": "search.py", "file_type": "text/x-python", "file_size": 2750, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "a7020d5efd8ab72264b8b52f740112a159eb28c5d5a778d9c10c5b40cc679415", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b249bcf7-a470-4905-93de-c3e9f1d009cc", "node_type": "1", "metadata": {}, "hash": "12a1d3c30f5db526ac59e8e733475f35337d2deb40611cf99aa780e4f18699e5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.get(\n    \"/search\",\n    dependencies=[Depends(require_api_key)],\n    summary=\"Semantic KB search\",\n)", "mimetype": "text/plain", "start_char_idx": 1245, "end_char_idx": 1353, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b249bcf7-a470-4905-93de-c3e9f1d009cc": {"__data__": {"id_": "b249bcf7-a470-4905-93de-c3e9f1d009cc", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/search.py", "file_name": "search.py", "file_type": "text/x-python", "file_size": 2750, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b3c725d9-35ab-407d-849d-8a7b2f1b2110", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/search.py", "file_name": "search.py", "file_type": "text/x-python", "file_size": 2750, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "bf9db71a3b9fd7dffb902702f5dc763f9d27d071eaa7f8e349113cba4f98ce20", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7bccc35d-1cf7-4a49-a217-8cfe9efbd68f", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/search.py", "file_name": "search.py", "file_type": "text/x-python", "file_size": 2750, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "2f1cb520d909c5b98f48e7f3f9a9fc59b80a6b90d4c86d15e0450bb3ca4c89a6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def search(\n    query: Optional[str] = Query(None, alias=\"query\", description=\"Search string\"),\n    q: Optional[str] = Query(None, description=\"Legacy alias for query\"),\n    k: int = Query(5, ge=1, le=20, description=\"Top\u2011K results\"),\n) -> List[dict]:\n    \"\"\"Proxy to `services.kb.api_search`. Returns a JSON\u2011serialisable list.\"\"\"\n    term = (query or q or \"\").strip()\n    if not term:\n        raise HTTPException(status_code=400, detail=\"Missing query parameter\")\n\n    try:\n        raw = kb.api_search(term, k=k)\n        safe = [\n            {\n                \"path\": r[\"path\"],\n                \"title\": r[\"title\"],\n                \"snippet\": r[\"snippet\"],\n                \"updated\": r[\"updated\"],\n                \"similarity\": float(r[\"similarity\"]),\n            }\n            for r in raw\n        ]\n        return safe\n    except Exception as exc:\n        logger.exception(\"KB search failed for %r\", term)\n        raise HTTPException(status_code=500, detail=\"KB backend error\") from exc", "mimetype": "text/plain", "start_char_idx": 1354, "end_char_idx": 2343, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b6a713cc-e349-46ab-be3a-4e25780c2edb": {"__data__": {"id_": "b6a713cc-e349-46ab-be3a-4e25780c2edb", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05b1b04d-1226-4714-8064-33e7ae47ce03", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "hash": "9e02859532e0a24f8314b8dc07f661aa50c130ed0b0192b9987529b4ce2c8b52", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "624a1e0a-6959-4fb0-88db-435b266ff57c", "node_type": "1", "metadata": {}, "hash": "b2cbe1eeedb50fc4d4eaf8ae2b7027f80bb7e9695f62c47c204c9c400393b25c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: routes/status.py\r\n# Directory: routes/\r\n# Purpose: Health, environment, version, and context awareness endpoints for Relay service.\r\n# Security: Public (no auth; consider protecting `/env` or `/summary` in production).\r\n\r\nfrom fastapi import APIRouter\r\nfrom pathlib import Path\r\nimport os\r\nfrom subprocess import check_output, CalledProcessError\r\nfrom datetime import datetime\r\n\r\nrouter = APIRouter(prefix=\"/status\", tags=[\"status\"])", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 441, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "624a1e0a-6959-4fb0-88db-435b266ff57c": {"__data__": {"id_": "624a1e0a-6959-4fb0-88db-435b266ff57c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05b1b04d-1226-4714-8064-33e7ae47ce03", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "hash": "9e02859532e0a24f8314b8dc07f661aa50c130ed0b0192b9987529b4ce2c8b52", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b6a713cc-e349-46ab-be3a-4e25780c2edb", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "hash": "f53816bdfbe0b54b844b4b0a723979af831d7205946cb2aa8def08937725f32b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "763b06a5-9787-43ad-9ef0-4c7b74dea0fc", "node_type": "1", "metadata": {}, "hash": "c8f57799891ddd4ad7619686237ee21567d924bbb73b04a5929b86db62666c8b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.get(\"/paths\")\r\ndef get_status_paths():\r\n    \"\"\"\r\n    Returns existence of major source code/data directories for debugging.\r\n    \"\"\"\r\n    env_root = os.getenv(\"RELAY_PROJECT_ROOT\")\r\n    base = Path(env_root).resolve() if env_root else Path.cwd()\r\n\r\n    roots = [\r\n        \"services\",\r\n        \"frontend/src/app\",\r\n        \"frontend/src/components\",\r\n        \"routes\",\r\n        \".\"\r\n    ]\r\n\r\n    visible = {}\r\n    for r in roots:\r\n        path = base / r\r\n        visible[r] = path.exists()\r\n\r\n    return {\r\n        \"base_path\": str(base),\r\n        \"resolved_paths\": visible\r\n    }\r\n\r\n@router.get(\"/env\")\r\ndef get_env_status():\r\n    \"\"\"\r\n    Returns selected environment variable statuses (partially masked for safety).\r\n    \"\"\"\r\n    keys = [\"OPENAI_API_KEY\", \"API_KEY\", \"RELAY_PROJECT_ROOT\", \"RAILWAY_URL\"]\r\n    values = {\r\n        k: os.getenv(k)[:5] + \"...\" if os.getenv(k) else None\r\n        for k in keys\r\n    }\r\n    return values", "mimetype": "text/plain", "start_char_idx": 445, "end_char_idx": 1387, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "763b06a5-9787-43ad-9ef0-4c7b74dea0fc": {"__data__": {"id_": "763b06a5-9787-43ad-9ef0-4c7b74dea0fc", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05b1b04d-1226-4714-8064-33e7ae47ce03", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "hash": "9e02859532e0a24f8314b8dc07f661aa50c130ed0b0192b9987529b4ce2c8b52", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "624a1e0a-6959-4fb0-88db-435b266ff57c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "hash": "2a7e548b32781027252a586ff88a34a8af557455950e39c3bd75c053ced6d94e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6a5ce23b-c70e-48cc-9dbb-3d97afa915af", "node_type": "1", "metadata": {}, "hash": "58531e31bc5f54de548a2612b8ca26c38d9ccf0461a8d41e553d1e8635dc0ff4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.get(\"/version\")\r\ndef get_version():\r\n    \"\"\"\r\n    Returns current Git commit short hash.\r\n    \"\"\"\r\nfrom subprocess import check_output, CalledProcessError, DEVNULL\r\n\r\n@router.get(\"/version\")\r\ndef get_version():\r\n    \"\"\"\r\n    Returns current Git commit short hash.\r\n    \"\"\"\r\n    try:\r\n        commit = check_output([\"git\", \"rev-parse\", \"--short\", \"HEAD\"], stderr=DEVNULL).decode().strip()\r\n    except Exception:\r\n        commit = \"unknown\"\r\n    return {\"git_commit\": commit}\r\n\r\n\r\n@router.get(\"/summary\")\r\ndef get_summary():\r\n    \"\"\"\r\n    Returns a bundle of status: paths, env, and version.\r\n    \"\"\"\r\n    return {\r\n        \"paths\": get_status_paths(),\r\n        \"env\": get_env_status(),\r\n        \"version\": get_version()\r\n    }", "mimetype": "text/plain", "start_char_idx": 1391, "end_char_idx": 2124, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6a5ce23b-c70e-48cc-9dbb-3d97afa915af": {"__data__": {"id_": "6a5ce23b-c70e-48cc-9dbb-3d97afa915af", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05b1b04d-1226-4714-8064-33e7ae47ce03", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "hash": "9e02859532e0a24f8314b8dc07f661aa50c130ed0b0192b9987529b4ce2c8b52", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "763b06a5-9787-43ad-9ef0-4c7b74dea0fc", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "hash": "e6753251fcb2289286c05865e0e42673bbb4c0d7369f71785d9529c30a2b3b56", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "301a02df-ad3d-4fef-95c2-2458f2eb1df3", "node_type": "1", "metadata": {}, "hash": "e4a2128d94650c6365e22d7d77e23d0524c162b1ea0644b4b74d4646243ed135", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def list_context_inventory(\r\n    base: Path, \r\n    roots = [\"docs\", \"context\"], \r\n    exts = [\".md\", \".txt\"]\r\n):\r\n    \"\"\"\r\n    Helper: Returns a list of context file metadata from all roots.\r\n    \"\"\"\r\n    inventory = []\r\n    for root in roots:\r\n        folder = base / root\r\n        if not folder.exists():\r\n            continue\r\n        for f in folder.rglob(\"*\"):\r\n            if f.is_file() and f.suffix in exts:\r\n                inventory.append({\r\n                    \"path\": str(f.relative_to(base)),\r\n                    \"size_bytes\": f.stat().st_size,\r\n                    \"last_modified\": datetime.utcfromtimestamp(f.stat().st_mtime).isoformat() + \"Z\"\r\n                })\r\n    return inventory", "mimetype": "text/plain", "start_char_idx": 2128, "end_char_idx": 2830, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "301a02df-ad3d-4fef-95c2-2458f2eb1df3": {"__data__": {"id_": "301a02df-ad3d-4fef-95c2-2458f2eb1df3", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05b1b04d-1226-4714-8064-33e7ae47ce03", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "hash": "9e02859532e0a24f8314b8dc07f661aa50c130ed0b0192b9987529b4ce2c8b52", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6a5ce23b-c70e-48cc-9dbb-3d97afa915af", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "hash": "5fb3e2e2511b737756404e1f6d837448b2290ca9d8b6a15a735e0413f2f87234", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8fe274ce-5225-45a6-9d9a-7a5e723d0ae8", "node_type": "1", "metadata": {}, "hash": "57599171c3a2dbf66feb2af34d0ffea05dba055d42e0a5524adbce5540bc81f4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.get(\"/context\")", "mimetype": "text/plain", "start_char_idx": 2834, "end_char_idx": 2857, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8fe274ce-5225-45a6-9d9a-7a5e723d0ae8": {"__data__": {"id_": "8fe274ce-5225-45a6-9d9a-7a5e723d0ae8", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05b1b04d-1226-4714-8064-33e7ae47ce03", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "hash": "9e02859532e0a24f8314b8dc07f661aa50c130ed0b0192b9987529b4ce2c8b52", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "301a02df-ad3d-4fef-95c2-2458f2eb1df3", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "hash": "a39e0225b2e8f6e315036bc7bdc510b69752b4f38a55ea192f90b176cc9808bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "89a125f4-9d14-420a-9ba5-15be13e20c8a", "node_type": "1", "metadata": {}, "hash": "99ca0d0c50ae0261f29933c44efae2eca66cb3f1d3fc6c14e6c0063c0c0d31f4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def get_context_status():", "mimetype": "text/plain", "start_char_idx": 2859, "end_char_idx": 2884, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "89a125f4-9d14-420a-9ba5-15be13e20c8a": {"__data__": {"id_": "89a125f4-9d14-420a-9ba5-15be13e20c8a", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05b1b04d-1226-4714-8064-33e7ae47ce03", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "hash": "9e02859532e0a24f8314b8dc07f661aa50c130ed0b0192b9987529b4ce2c8b52", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8fe274ce-5225-45a6-9d9a-7a5e723d0ae8", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "hash": "dc76806a28e5578bfe5c85b2d6a35bc990dca94ce51e1e58bacf5c257c62f1db", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "112de5d6-4de0-4c5a-9a06-dc3bd20f6f40", "node_type": "1", "metadata": {}, "hash": "0023158414a68db8bdf5155ed55395f3e5973e075e86c8041ed62628dbc26f46", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"\"\"\r\n    Returns details about all global context and overlays:\r\n    - All context files with metadata (from /docs, /context)\r\n    - Which global_context (manual or auto) is active\r\n    - Last updated timestamps\r\n    \"\"\"\r\n    env_root = os.getenv(\"RELAY_PROJECT_ROOT\")\r\n    base = Path(env_root).resolve() if env_root else Path.cwd()\r\n    global_manual = base / \"docs/generated/global_context.md\"\r\n    global_auto = base / \"docs/generated/global_context.auto.md\"\r\n\r\n    def fmt_time(path):\r\n        return datetime.utcfromtimestamp(path.stat().st_mtime).isoformat() + \"Z\" if path.exists() else \"missing\"\r\n\r\n    files = list_context_inventory(base)\r\n    files_sorted = sorted(files, key=lambda x: x[\"path\"])", "mimetype": "text/plain", "start_char_idx": 2890, "end_char_idx": 3596, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "112de5d6-4de0-4c5a-9a06-dc3bd20f6f40": {"__data__": {"id_": "112de5d6-4de0-4c5a-9a06-dc3bd20f6f40", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05b1b04d-1226-4714-8064-33e7ae47ce03", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "hash": "9e02859532e0a24f8314b8dc07f661aa50c130ed0b0192b9987529b4ce2c8b52", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "89a125f4-9d14-420a-9ba5-15be13e20c8a", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/status.py", "file_name": "status.py", "file_type": "text/x-python", "file_size": 3986, "creation_date": "2025-06-29", "last_modified_date": "2025-06-29", "tier": "code"}, "hash": "2f8cb2d41c0e371b7bd6ccd15936ba2ff924db950860478cdf7be2ee0e21bd89", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "return {\r\n        \"context_files\": files_sorted,\r\n        \"global_context_used\": \"manual\" if global_manual.exists() else \"auto\" if global_auto.exists() else \"none\",\r\n        \"global_context_manual_last_updated\": fmt_time(global_manual),\r\n        \"global_context_auto_last_updated\": fmt_time(global_auto),\r\n        \"file_count\": len(files_sorted),\r\n        \"root\": str(base)\r\n    }", "mimetype": "text/plain", "start_char_idx": 3604, "end_char_idx": 3984, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eaa5e0b2-efe8-4d4e-8914-7baacb75d6b2": {"__data__": {"id_": "eaa5e0b2-efe8-4d4e-8914-7baacb75d6b2", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/status_code.py", "file_name": "status_code.py", "file_type": "text/x-python", "file_size": 1548, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a7ee41ae-41c6-4913-8701-2437bde93bbc", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/status_code.py", "file_name": "status_code.py", "file_type": "text/x-python", "file_size": 1548, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3a38aac0096787e8ac63b2f57332c1cf87e6769014fab3c27158869c90e4eb96", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "779dfa57-1540-4c34-9f57-2e0c74842355", "node_type": "1", "metadata": {}, "hash": "8a460461a24db5cb9b15b77978d6de06ec29b5a153863796df8ed2567f1aafba", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: routes/status_code.py\n# Purpose: Provide detailed insights into Relay source files, functions, usage, and freshness.\n\nfrom fastapi import APIRouter\nfrom pathlib import Path\nimport os, ast\nfrom datetime import datetime\n\nrouter = APIRouter(prefix=\"/status\", tags=[\"status\"])\n\nCODE_PATHS = [\n    (\"services/context_injector.py\", \"core\"),\n    (\"services/indexer.py\", \"core\"),\n    (\"routes/ask.py\", \"core\"),\n    (\"routes/admin_routes.py\", \"core\"),\n    (\"routes/status.py\", \"support\"),\n    (\"scripts/sync_context_docs.py\", \"support\"),\n    (\"scripts/generate_global_context.auto.py\", \"support\"),\n    (\"main.py\", \"entrypoint\")\n]\n\n# Extract function names from a file using AST\ndef extract_functions(path: Path) -> list:\n    try:\n        tree = ast.parse(path.read_text())\n        return [node.name for node in ast.walk(tree) if isinstance(node, (ast.FunctionDef, ast.AsyncFunctionDef))]\n    except Exception:\n        return []", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 926, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "779dfa57-1540-4c34-9f57-2e0c74842355": {"__data__": {"id_": "779dfa57-1540-4c34-9f57-2e0c74842355", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/routes/status_code.py", "file_name": "status_code.py", "file_type": "text/x-python", "file_size": 1548, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a7ee41ae-41c6-4913-8701-2437bde93bbc", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/routes/status_code.py", "file_name": "status_code.py", "file_type": "text/x-python", "file_size": 1548, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3a38aac0096787e8ac63b2f57332c1cf87e6769014fab3c27158869c90e4eb96", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eaa5e0b2-efe8-4d4e-8914-7baacb75d6b2", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/routes/status_code.py", "file_name": "status_code.py", "file_type": "text/x-python", "file_size": 1548, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "38949275138fba2d631c51baad5a585de5a5413735a9fab62d75174882748f0b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "@router.get(\"/code\")\ndef get_code_status():\n    results = []\n    for rel_path, tag in CODE_PATHS:\n        path = Path(rel_path)\n        if not path.exists():\n            results.append({\"file\": rel_path, \"status\": \"\u274c Missing\", \"tag\": tag})\n            continue\n\n        functions = extract_functions(path)\n        modified = datetime.utcfromtimestamp(path.stat().st_mtime).isoformat() + \"Z\"\n        results.append({\n            \"file\": rel_path,\n            \"status\": \"\u2705 OK\",\n            \"tag\": tag,\n            \"functions\": functions,\n            \"last_modified\": modified\n        })\n\n    return {\"files\": results}", "mimetype": "text/plain", "start_char_idx": 928, "end_char_idx": 1543, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a4672e0e-9084-4ac8-895b-519bd0e75a13": {"__data__": {"id_": "a4672e0e-9084-4ac8-895b-519bd0e75a13", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/README.md", "file_name": "README.md", "file_type": "text/markdown", "file_size": 1677, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "66bb3ded-ddea-46dd-adc9-960b96322282", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/README.md", "file_name": "README.md", "file_type": "text/markdown", "file_size": 1677, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "6bf71f0243f39035311df69e10ca139303bb0d774c6289fd8201f6835759cb7a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "This is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).\n\n## Getting Started\n\nFirst, run the development server:\n\n```bash\nnpm run dev\n# or\nyarn dev\n# or\npnpm dev\n# or\nbun dev\n```\n\nOpen [http://localhost:3000](http://localhost:3000) with your browser to see the result.\n\n## Environment Variables\n\nCreate a `.env.local` file and provide the base URL of the backend API:\n\n```dotenv\nNEXT_PUBLIC_API_URL=http://localhost:8000\n```\n\nThis variable is required by the API route handlers in `src/app/api`.\n\nYou can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.\n\nThis project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel.\n\n## Learn More\n\nTo learn more about Next.js, take a look at the following resources:\n\n- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.\n- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.\n\nYou can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!\n\n## Deploy on Vercel\n\nThe easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.\n\nCheck out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1676, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bb61247f-c844-4714-8ae1-ebd5d43e4d2f": {"__data__": {"id_": "bb61247f-c844-4714-8ae1-ebd5d43e4d2f", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/components.json", "file_name": "components.json", "file_type": "application/json", "file_size": 428, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6548612b-e20f-4dda-9283-11e83c63725d", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/components.json", "file_name": "components.json", "file_type": "application/json", "file_size": 428, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "0f61c2e593f3be5e1587f730c869854b551c859875f3198587364da32faaa5b3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n  \"$schema\": \"https://ui.shadcn.com/schema.json\",\n  \"style\": \"new-york\",\n  \"rsc\": true,\n  \"tsx\": true,\n  \"tailwind\": {\n    \"config\": \"\",\n    \"css\": \"src/app/globals.css\",\n    \"baseColor\": \"slate\",\n    \"cssVariables\": true,\n    \"prefix\": \"\"\n  },\n  \"aliases\": {\n    \"components\": \"@/components\",\n    \"utils\": \"@/lib/utils\",\n    \"ui\": \"@/components/ui\",\n    \"lib\": \"@/lib\",\n    \"hooks\": \"@/hooks\"\n  },\n  \"iconLibrary\": \"lucide\"\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 428, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2517e366-78f3-4228-a072-7a21ba72fbf8": {"__data__": {"id_": "2517e366-78f3-4228-a072-7a21ba72fbf8", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/next-env.d.ts", "file_name": "next-env.d.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 211, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "29663ea3-6738-42c8-92db-3bfbd5886f6b", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/next-env.d.ts", "file_name": "next-env.d.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 211, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "ecc7c40a70e786c7075c6fd0efe2bcca700b1d081362217b6fe5150599ee2124", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "/// <reference types=\"next\" />\n/// <reference types=\"next/image-types/global\" />\n\n// NOTE: This file should not be edited\n// see https://nextjs.org/docs/app/api-reference/config/typescript for more information.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 210, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "085ab751-9d5f-4f0d-859c-98bca99b9fb7": {"__data__": {"id_": "085ab751-9d5f-4f0d-859c-98bca99b9fb7", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/next.config.ts", "file_name": "next.config.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 133, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "14362d45-00b5-4c3b-9ba5-ff4db70c4488", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/next.config.ts", "file_name": "next.config.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 133, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "7576bfbde94f9cae0471774be5914cabdff7250b1971b9640d36af21a22a9d88", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import type { NextConfig } from \"next\";\n\nconst nextConfig: NextConfig = {\n  /* config options here */\n};\n\nexport default nextConfig;", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 132, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c1da70b8-3568-49fc-b321-86bbc5362c1d": {"__data__": {"id_": "c1da70b8-3568-49fc-b321-86bbc5362c1d", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/package.json", "file_name": "package.json", "file_type": "application/json", "file_size": 1627, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e055f046-2dca-4faf-802a-6d8258520eac", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/package.json", "file_name": "package.json", "file_type": "application/json", "file_size": 1627, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "67a8391955709d5f1df2acd6f016944c03816cf3f5d6b1426c0af893dffee072", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n  \"name\": \"frontend\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n\n  \"scripts\": {\n    \"dev\": \"next dev --turbopack\",\n    \"build\": \"next build\",\n    \"start\": \"next start\",\n    \"lint\": \"next lint\",\n    \"storybook\": \"storybook dev -p 6006\",\n    \"build-storybook\": \"storybook build\"\n  },\n\n  \"dependencies\": {\n    \"@radix-ui/react-label\": \"^2.1.7\",\n    \"@radix-ui/react-slot\": \"^1.2.3\",\n\n    \"class-variance-authority\": \"^0.7.1\",\n    \"clsx\": \"^2.1.1\",\n    \"tailwind-merge\": \"^3.3.0\",\n\n    \"framer-motion\": \"^12.16.0\",\n    \"lucide-react\": \"^0.511.0\",\n\n    \"next\": \"15.3.3\",\n    \"next-auth\": \"^4.24.11\",\n    \"next-themes\": \"^0.4.6\",\n\n    \"react\": \"^19.0.0\",\n    \"react-dom\": \"^19.0.0\",\n\n    \"react-markdown\": \"^10.1.0\",\n    \"react-syntax-highlighter\": \"^15.6.1\",\n\n    \"recharts\": \"^2.15.3\"\n  },\n\n  \"devDependencies\": {\n    \"@chromatic-com/storybook\": \"^4.0.0\",\n    \"@eslint/eslintrc\": \"^3\",\n\n    \"@storybook/addon-a11y\": \"^9.0.6\",\n    \"@storybook/addon-docs\": \"^9.0.6\",\n    \"@storybook/addon-onboarding\": \"^9.0.6\",\n    \"@storybook/addon-vitest\": \"^9.0.6\",\n    \"@storybook/nextjs-vite\": \"^9.0.6\",\n    \"storybook\": \"^9.0.6\",\n    \"eslint-plugin-storybook\": \"^9.0.6\",\n\n    \"eslint\": \"^9\",\n    \"eslint-config-next\": \"15.3.3\",\n\n    \"tailwindcss\": \"^4.1.8\",\n    \"@tailwindcss/postcss\": \"^4.1.8\",\n    \"@tailwindcss/typography\": \"^0.5.11\",\n    \"autoprefixer\": \"^10.4.21\",\n\n    \"@types/node\": \"^20\",\n    \"@types/react\": \"^19\",\n    \"@types/react-dom\": \"^19\",\n\n    \"playwright\": \"^1.52.0\",\n    \"vitest\": \"^3.2.3\",\n    \"@vitest/browser\": \"^3.2.3\",\n    \"@vitest/coverage-v8\": \"^3.2.3\",\n\n    \"tw-animate-css\": \"^1.3.3\",\n\n    \"typescript\": \"^5\"\n  }\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1626, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "95a3f5ef-27bd-4a91-b12d-8856de5b9057": {"__data__": {"id_": "95a3f5ef-27bd-4a91-b12d-8856de5b9057", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/postcss.config.js", "file_name": "postcss.config.js", "file_type": "text/javascript", "file_size": 110, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "13e41f38-85b2-4736-ac43-a139c7839ebd", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/postcss.config.js", "file_name": "postcss.config.js", "file_type": "text/javascript", "file_size": 110, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "9aa97ce897e9acdb26c3647f9093fcd4f50c3fc655657e2a4c06230b9bb91fc6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// frontend/postcss.config.js\nmodule.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {}\n  }\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 109, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e0588c01-64ee-48fc-b193-cf36bc9f33ac": {"__data__": {"id_": "e0588c01-64ee-48fc-b193-cf36bc9f33ac", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/action-queue/page.tsx", "file_name": "page.tsx", "file_size": 286, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e1c7565f-c5ba-45fa-bfd3-4a40548fb866", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/action-queue/page.tsx", "file_name": "page.tsx", "file_size": 286, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "9c1c16336890c7acfbe3df3799db2712bf8e59321ef8f2121c0756def48df608", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"use client\";\nimport ActionQueuePanel from \"@/components/ActionQueue/ActionQueuePanel\";\n\nexport default function ActionQueuePage() {\n  return (\n    <main className=\"p-6\">\n      <h1 className=\"text-2xl font-bold mb-4\">\ud83d\udccb Action Queue</h1>\n      <ActionQueuePanel />\n    </main>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 282, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6a32b29f-3496-459b-8765-b7be49a2d6d6": {"__data__": {"id_": "6a32b29f-3496-459b-8765-b7be49a2d6d6", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/api/docs/list/route.ts", "file_name": "route.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 215, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "25e599c2-cab1-424e-859f-4d3b95733deb", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/api/docs/list/route.ts", "file_name": "route.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 215, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "b1ac9bdb7dd8e558b47cdbe47a9de93c49db911501661ab555ce8a3f2df163eb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import { NextResponse } from \"next/server\"\n\nexport async function GET() {\n  const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/docs/list`)\n  const data = await res.json()\n  return NextResponse.json(data)\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 214, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3168c3c9-d1bb-4839-99e8-be05e8fb601f": {"__data__": {"id_": "3168c3c9-d1bb-4839-99e8-be05e8fb601f", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/api/docs/view/route.ts", "file_name": "route.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 358, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b17a35a5-9ecc-4f0d-9290-0547cc9e8cd4", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/api/docs/view/route.ts", "file_name": "route.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 358, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "b8a65726d52196c492e16bd9f9800ada8f99c96dc9fbaa03b04a02ff09fd0642", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import { NextRequest, NextResponse } from \"next/server\"\n\nexport async function GET(req: NextRequest) {\n  const url = new URL(req.url)\n  const path = url.searchParams.get(\"path\")\n  const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/docs/view?path=${encodeURIComponent(path || \"\")}`)\n  const data = await res.json()\n  return NextResponse.json(data)\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 357, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0c036d5d-49af-4add-bc43-042cf499ac6f": {"__data__": {"id_": "0c036d5d-49af-4add-bc43-042cf499ac6f", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/api/kb/search/route.ts", "file_name": "route.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 389, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f717d81c-79f5-4467-abad-16a5e35486f8", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/api/kb/search/route.ts", "file_name": "route.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 389, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "179ac0434944eb40029d8de64385402269e8b081ba24891f7df1d2047c2af664", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import { NextRequest, NextResponse } from \"next/server\"\n\nexport async function POST(req: NextRequest) {\n  const body = await req.json()\n  const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/kb/search`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(body),\n  })\n  const data = await res.json()\n  return NextResponse.json(data)\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 388, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "37cd7e6f-358e-4a45-a8bc-4e850d9c6008": {"__data__": {"id_": "37cd7e6f-358e-4a45-a8bc-4e850d9c6008", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/api/status/summary/route.ts", "file_name": "route.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 220, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e6941142-9012-41f6-ad6e-9f7600df39f3", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/api/status/summary/route.ts", "file_name": "route.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 220, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "05677f19d51beea0c6d4d81f0eb9058acbc6fd8a90a4fbfe642e2f73f08f6ae3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import { NextResponse } from \"next/server\"\n\nexport async function GET() {\n  const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/status/summary`)\n  const data = await res.json()\n  return NextResponse.json(data)\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 219, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0666ab59-ce12-42cf-a7db-5a8321510d37": {"__data__": {"id_": "0666ab59-ce12-42cf-a7db-5a8321510d37", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "980a32f5-a377-4938-83a3-adf4069d2e6c", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "37670494a3cbe927e9ad2f84ec7299f2d9074b08e6ee57b882e5c41e5ffa28cb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3dca60c3-1cb6-4321-93ae-ef83e4ae1d0b", "node_type": "1", "metadata": {}, "hash": "dcd90e5be0959b357ce5702deb4ac717ec5280a584b610bb101ac63760f6ee82", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: src/app/ask/page.tsx\n// Purpose: Ask Echo \u2014 bulletproof LLM chat interface with markdown rendering, local history, and safe input handling\n\n\"use client\";\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport SafeMarkdown from \"@/components/SafeMarkdown\";\nimport { API_ROOT } from \"@/lib/api\";\n\n// Message type\ntype Message = {\n  role: \"user\" | \"assistant\";\n  content: string;\n  context?: string;\n};\n\nconst USER_ID = \"bret-demo\";\nconst STORAGE_KEY = `echo-chat-history-${USER_ID}`;\nconst INPUT_KEY = `echo-chat-input-${USER_ID}`;\n\n// Type guard for stored messages\nfunction isMessage(val: unknown): val is Message {\n  return (\n    typeof val === \"object\" &&\n    val !== null &&\n    (val as Message).role &&\n    typeof (val as Message).content === \"string\" &&\n    ((val as Message).role === \"user\" || (val as Message).role === \"assistant\")\n  );\n}\n\n// Normalize unknown array into safe Message[]", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 928, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3dca60c3-1cb6-4321-93ae-ef83e4ae1d0b": {"__data__": {"id_": "3dca60c3-1cb6-4321-93ae-ef83e4ae1d0b", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "980a32f5-a377-4938-83a3-adf4069d2e6c", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "37670494a3cbe927e9ad2f84ec7299f2d9074b08e6ee57b882e5c41e5ffa28cb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0666ab59-ce12-42cf-a7db-5a8321510d37", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "9cbcd1bc259e628b056f7b159f58967e04422c45e5b5ffc3f94843a22ff26ae0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ea13ee28-37d7-4001-8fe2-840ef4b53680", "node_type": "1", "metadata": {}, "hash": "980b0308ef78922d8b8ea8f0fe7a5a7897ff51d2ac182a91fbfe210572d921f9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "function normalizeMessages(arr: unknown[]): Message[] {\n  return Array.isArray(arr)\n    ? arr\n        .filter(isMessage)\n        .map((msg) => ({\n          role: msg.role,\n          content: String(msg.content),\n          ...(typeof msg.context === \"string\" && { context: msg.context }),\n        }))\n    : [];\n}\n\n// Markdown stringifier (bulletproof)\nfunction toMDString(val: unknown): string {\n  if (val == null) return \"_(no content)_\";\n  if (typeof val === \"string\") return val;\n  if (Array.isArray(val)) return val.map(toMDString).join(\"\\n\\n\");\n  try {\n    return \"```json\\n\" + JSON.stringify(val, null, 2) + \"\\n```\";\n  } catch {\n    return String(val);\n  }\n}\n\nexport default function AskPage() {\n  const [messages, setMessages] = useState<Message[]>(() => {\n    if (typeof window !== \"undefined\") {\n      const raw = localStorage.getItem(STORAGE_KEY);\n      if (raw) {\n        try {\n          return normalizeMessages(JSON.parse(raw));\n        } catch {\n          return [];\n        }\n      }\n    }\n    return [];\n  });", "mimetype": "text/plain", "start_char_idx": 929, "end_char_idx": 1953, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ea13ee28-37d7-4001-8fe2-840ef4b53680": {"__data__": {"id_": "ea13ee28-37d7-4001-8fe2-840ef4b53680", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "980a32f5-a377-4938-83a3-adf4069d2e6c", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "37670494a3cbe927e9ad2f84ec7299f2d9074b08e6ee57b882e5c41e5ffa28cb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3dca60c3-1cb6-4321-93ae-ef83e4ae1d0b", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "874342cf197c5c1d1fd19032c19214b11a65576d34e7952b411b42b3132ef188", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "042a8514-f00b-43c4-bc88-8d5e88500922", "node_type": "1", "metadata": {}, "hash": "ff3042cecd888b2825552582af4d793e925fb276362f04db1bc6e54c2a581ca5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const [input, setInput] = useState<string>(\"\");\n  const [loading, setLoading] = useState(false);\n  const bottomRef = useRef<HTMLDivElement>(null);\n\n  // Load cached input on mount\n  useEffect(() => {\n    const cached = localStorage.getItem(INPUT_KEY);\n    if (cached) setInput(cached);\n  }, []);\n\n  // Persist messages + scroll to bottom\n  useEffect(() => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(messages));\n    bottomRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  // Persist input while typing\n  useEffect(() => {\n    localStorage.setItem(INPUT_KEY, input);\n  }, [input]);", "mimetype": "text/plain", "start_char_idx": 1957, "end_char_idx": 2572, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "042a8514-f00b-43c4-bc88-8d5e88500922": {"__data__": {"id_": "042a8514-f00b-43c4-bc88-8d5e88500922", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "980a32f5-a377-4938-83a3-adf4069d2e6c", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "37670494a3cbe927e9ad2f84ec7299f2d9074b08e6ee57b882e5c41e5ffa28cb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ea13ee28-37d7-4001-8fe2-840ef4b53680", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "ad02033ce4a353d8e856608a1653d06594c377f0370778046cb1e244bb49b301", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cb07dbea-8e5d-473d-a3a1-31d28b061eef", "node_type": "1", "metadata": {}, "hash": "c1d6c3f4425eb23947998688460f255ac6d643269b5acdd29e4019a9fa217dc1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const", "mimetype": "text/plain", "start_char_idx": 436, "end_char_idx": 441, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cb07dbea-8e5d-473d-a3a1-31d28b061eef": {"__data__": {"id_": "cb07dbea-8e5d-473d-a3a1-31d28b061eef", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "980a32f5-a377-4938-83a3-adf4069d2e6c", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "37670494a3cbe927e9ad2f84ec7299f2d9074b08e6ee57b882e5c41e5ffa28cb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "042a8514-f00b-43c4-bc88-8d5e88500922", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "4675d1f5d8a369cd5c88c8ac8aa920c61253cc0aa4bd576ef4ab36bbeb9a6677", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd444b70-c903-4632-b6a5-4987d67c7eae", "node_type": "1", "metadata": {}, "hash": "3854e212e253f0ee427a77b8f9396be65746e6669f0c4382b92845c350f4446f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "sendMessage =", "mimetype": "text/plain", "start_char_idx": 2582, "end_char_idx": 2595, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bd444b70-c903-4632-b6a5-4987d67c7eae": {"__data__": {"id_": "bd444b70-c903-4632-b6a5-4987d67c7eae", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "980a32f5-a377-4938-83a3-adf4069d2e6c", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "37670494a3cbe927e9ad2f84ec7299f2d9074b08e6ee57b882e5c41e5ffa28cb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cb07dbea-8e5d-473d-a3a1-31d28b061eef", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "5129553cbf2835b6a60b4110f83d57c3feff7b5a89210f61becadda7c636f31a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "88548200-a9dd-4ee6-9eef-445c7697ff69", "node_type": "1", "metadata": {}, "hash": "436a9b2e7c2aeaccc4bcb04d2c9c033a67cfcf5a8f3d0a0ab54d8b264e69b0b7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "useCallback", "mimetype": "text/plain", "start_char_idx": 209, "end_char_idx": 220, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "88548200-a9dd-4ee6-9eef-445c7697ff69": {"__data__": {"id_": "88548200-a9dd-4ee6-9eef-445c7697ff69", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "980a32f5-a377-4938-83a3-adf4069d2e6c", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "37670494a3cbe927e9ad2f84ec7299f2d9074b08e6ee57b882e5c41e5ffa28cb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd444b70-c903-4632-b6a5-4987d67c7eae", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "4251a39aa21367920fc2e82c48aacdec7eb9e86012704f782469e96618392f78", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "84000011-2534-4029-bb3e-c497a5ab036e", "node_type": "1", "metadata": {}, "hash": "3d53e5baba4a0ad6bbf3e6bf4ad0305d64f2b5b63d073ccd96d5e0e6e3548ac4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "(", "mimetype": "text/plain", "start_char_idx": 618, "end_char_idx": 619, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "84000011-2534-4029-bb3e-c497a5ab036e": {"__data__": {"id_": "84000011-2534-4029-bb3e-c497a5ab036e", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "980a32f5-a377-4938-83a3-adf4069d2e6c", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "37670494a3cbe927e9ad2f84ec7299f2d9074b08e6ee57b882e5c41e5ffa28cb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "88548200-a9dd-4ee6-9eef-445c7697ff69", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "394f86d42082c2efc07a75ba9fee1d3594da474cacace9a179e74486207486bd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2272584b-88b3-48fd-b153-fda89aa2235d", "node_type": "1", "metadata": {}, "hash": "9b627719793b6fb02100ebd2a9ed93a8cc2e10616f8eddc50a7aa5c17b7da5ad", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async (e?: React.FormEvent): Promise<void> =>", "mimetype": "text/plain", "start_char_idx": 2608, "end_char_idx": 2653, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2272584b-88b3-48fd-b153-fda89aa2235d": {"__data__": {"id_": "2272584b-88b3-48fd-b153-fda89aa2235d", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "980a32f5-a377-4938-83a3-adf4069d2e6c", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "37670494a3cbe927e9ad2f84ec7299f2d9074b08e6ee57b882e5c41e5ffa28cb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "84000011-2534-4029-bb3e-c497a5ab036e", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "0858ffab4f78ff18b34959985dad5bd94eccd0fad0f4f38d7da8c3595dfa39d5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ca229d7-efd9-4a9b-9be9-2e426aba6f87", "node_type": "1", "metadata": {}, "hash": "476100f6a81e7a632e9f08a21111c2e0ccdd3005c682437b50c3458b3be69b83", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n    if (e) e.preventDefault();\n    if (!input.trim() || loading) return;\n\n    const userMessage = input;\n    setMessages((msgs) => [\n      ...msgs,\n      { role: \"user\", content: toMDString(userMessage) },\n    ]);\n    setLoading(true);\n    setInput(\"\");", "mimetype": "text/plain", "start_char_idx": 2654, "end_char_idx": 2909, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6ca229d7-efd9-4a9b-9be9-2e426aba6f87": {"__data__": {"id_": "6ca229d7-efd9-4a9b-9be9-2e426aba6f87", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "980a32f5-a377-4938-83a3-adf4069d2e6c", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "37670494a3cbe927e9ad2f84ec7299f2d9074b08e6ee57b882e5c41e5ffa28cb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2272584b-88b3-48fd-b153-fda89aa2235d", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "e0f0dbf55066e47e12b5b89468085b587b376dd5353b9f57a85572a106f7cab5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7878fa09-0e91-41e9-a570-82b6cecc9cc6", "node_type": "1", "metadata": {}, "hash": "15b8646453dd0368bff21a9a1c71ce2cbd281787564b6b3ec6b886129a30a82e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "try {\n      const res = await fetch(`${API_ROOT}/mcp/run`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-User-Id\": USER_ID,\n        },\n        body: JSON.stringify({\n          query: userMessage,\n          role: \"planner\",\n          debug: true,\n        }),\n      });\n\n      const data = await res.json();\n      const result = data?.result || data;\n\n      const content =\n        result?.plan?.objective ||\n        result?.plan?.recommendation ||\n        result?.recommendation ||\n        result?.response ||\n        data?.response ||\n        \"[no answer]\";\n\n      setMessages((msgs) => [\n        ...msgs,\n        { role: \"assistant\", content: toMDString(content) },\n      ]);\n    } catch (err) {\n      console.error(\"\u26a0\ufe0f Fetch error:\", err);\n      setMessages((msgs) => [\n        ...msgs,\n        {\n          role: \"assistant\",\n          content: toMDString(\"[error] Unable to get response.\"),\n        },\n      ]);\n    }\n\n    setLoading(false);\n  }", "mimetype": "text/plain", "start_char_idx": 2915, "end_char_idx": 3921, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7878fa09-0e91-41e9-a570-82b6cecc9cc6": {"__data__": {"id_": "7878fa09-0e91-41e9-a570-82b6cecc9cc6", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "980a32f5-a377-4938-83a3-adf4069d2e6c", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "37670494a3cbe927e9ad2f84ec7299f2d9074b08e6ee57b882e5c41e5ffa28cb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ca229d7-efd9-4a9b-9be9-2e426aba6f87", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "cfc9ea2f5c31f10a9e822d9b599a3dbb8e33f8f9774837a3b85697751891f314", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d3362ca9-0e22-4700-8607-385e29278f52", "node_type": "1", "metadata": {}, "hash": "8a4d276f0273b229fe098e9063c83e7765f4ee71b7feb6e94f8cf68de6c1966f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ", [input, loading])", "mimetype": "text/plain", "start_char_idx": 3921, "end_char_idx": 3940, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d3362ca9-0e22-4700-8607-385e29278f52": {"__data__": {"id_": "d3362ca9-0e22-4700-8607-385e29278f52", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "980a32f5-a377-4938-83a3-adf4069d2e6c", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "37670494a3cbe927e9ad2f84ec7299f2d9074b08e6ee57b882e5c41e5ffa28cb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7878fa09-0e91-41e9-a570-82b6cecc9cc6", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "4f50d388fd6fe0149a8d74cb954daa334bfc54f5ea608062b2820a5e1e4d752c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ba5ca241-3961-4748-985d-fd1ae561513c", "node_type": "1", "metadata": {}, "hash": "ad79a275f5986f647b0ea9741522cc3487df9732ef3f99bf5ea808a706c70ff9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ";", "mimetype": "text/plain", "start_char_idx": 161, "end_char_idx": 162, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ba5ca241-3961-4748-985d-fd1ae561513c": {"__data__": {"id_": "ba5ca241-3961-4748-985d-fd1ae561513c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "980a32f5-a377-4938-83a3-adf4069d2e6c", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "37670494a3cbe927e9ad2f84ec7299f2d9074b08e6ee57b882e5c41e5ffa28cb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d3362ca9-0e22-4700-8607-385e29278f52", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "f836c9950bb6f1b92e6d1e2aa067a5429bee60f83d6dd8386af71e16b41d18af", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "58b659db-847e-4cd2-9223-955b5b76ce26", "node_type": "1", "metadata": {}, "hash": "ff42bf979d83d95a464574bf2c7354c2947a97e5b996f6cc01004192a4c58be5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const renderedMessages = messages.map((msg, i) => {\n    if (typeof msg.content !== \"string\") {\n      console.log(\"DEBUG 418:\", typeof msg.content, msg.content);\n    }\n    return (\n      <div\n        key={i}\n        className={\n          msg.role === \"user\"\n            ? \"text-right text-blue-700\"\n            : \"text-left text-green-700\"\n        }\n      >\n        <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n          <SafeMarkdown>{msg.content}</SafeMarkdown>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"w-full max-w-2xl mx-auto min-h-screen flex flex-col\">\n      <h1 className=\"text-3xl font-bold my-4\">Ask Echo</h1>\n      <div className=\"flex-1 space-y-2 overflow-y-auto border rounded-xl p-4 bg-muted\">\n        {renderedMessages}\n\n        {loading && (\n          <div className=\"text-left text-green-600 italic\">Thinking\u2026</div>\n        )}\n        <div ref={bottomRef} />\n      </div>\n      <form\n        onSubmit={sendMessage}", "mimetype": "text/plain", "start_char_idx": 3945, "end_char_idx": 4928, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "58b659db-847e-4cd2-9223-955b5b76ce26": {"__data__": {"id_": "58b659db-847e-4cd2-9223-955b5b76ce26", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "980a32f5-a377-4938-83a3-adf4069d2e6c", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "37670494a3cbe927e9ad2f84ec7299f2d9074b08e6ee57b882e5c41e5ffa28cb", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ba5ca241-3961-4748-985d-fd1ae561513c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/ask/page.tsx", "file_name": "page.tsx", "file_size": 5898, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "3d43e87e0a086eabd926df450fd51cf06f49e3d79d2be16b0d8d526aa52ce3ab", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "className=\"flex items-center gap-2 mt-4\"\n        autoComplete=\"off\"\n      >\n        <input\n          type=\"text\"\n          className=\"flex-1 rounded border px-3 py-2\"\n          placeholder=\"Type your question\u2026\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          disabled={loading}\n          name=\"echo-message\"\n          id=\"echo-message\"\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\" && !e.shiftKey) {\n              e.preventDefault();\n              sendMessage();\n            }\n          }}\n        />\n        <button\n          type=\"submit\"\n          className=\"bg-blue-600 text-white rounded px-4 py-2\"\n          disabled={loading || !input.trim()}\n        >\n          {loading ? \"Sending\u2026\" : \"Send\"}\n        </button>\n      </form>\n      <div className=\"text-xs text-gray-400 text-center mt-2\">\n        API root: <span className=\"font-mono\">{API_ROOT}</span>\n      </div>\n    </div>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 4937, "end_char_idx": 5885, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3c62a648-892f-4ff9-9d36-cd36e7773e7c": {"__data__": {"id_": "3c62a648-892f-4ff9-9d36-cd36e7773e7c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/audit/page.tsx", "file_name": "page.tsx", "file_size": 261, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5f1a423b-f72a-4350-be5e-df4850e224d9", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/audit/page.tsx", "file_name": "page.tsx", "file_size": 261, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "f96af9b32b5de3d72bbce16da3f1f43e2ffda7cd58dc4cb36cea6f3e2c6f7c03", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"use client\";\nimport AuditPanel from \"@/components/AuditPanel/AuditPanel\";\n\nexport default function AuditPage() {\n  return (\n    <main className=\"p-6\">\n      <h1 className=\"text-2xl font-bold mb-4\">\ud83d\udee1\ufe0f Audit Log</h1>\n      <AuditPanel />\n    </main>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 255, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "71785f0a-ac85-43a8-9c23-5ce4505c7f96": {"__data__": {"id_": "71785f0a-ac85-43a8-9c23-5ce4505c7f96", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ec98317-bdde-469e-adb3-5d896cd107c8", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "e876c63dc6e064ab76998da9d886748eb8851dc2a6b56d61b138108064a824e3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d9e13a2a-60b8-459b-a995-1e1ad6485922", "node_type": "1", "metadata": {}, "hash": "ff3042cecd888b2825552582af4d793e925fb276362f04db1bc6e54c2a581ca5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: src/app/codex/page.tsx\n// Purpose: Codex agent page with robust markdown/code output; status and patch display is bulletproofed.\n\n\"use client\";\n\nimport React, { useState } from \"react\";\nimport { CodexEditor, CodexPromptBar, CodexPatchView } from \"@/components/Codex\";\nimport { Button } from \"@/components/ui/button\";\nimport { API_ROOT } from \"@/lib/api\";\nimport SafeMarkdown from \"@/components/SafeMarkdown\";\nimport { toMDString } from \"@/lib/toMDString\";\n\n// Helper replaced by shared utility\n\nconst CodexPage: React.FC = () => {\n  const [code, setCode] = useState<string>(\"\");\n  const [prompt, setPrompt] = useState<string>(\"\");\n  const [streamingPatch, setStreamingPatch] = useState<string>(\"\");\n  const [parsedPatch, setParsedPatch] = useState<{\n    file: string;\n    patch: string;\n    reason: string;\n  } | null>(null);\n  const [status, setStatus] = useState<string>(\"\");", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 886, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d9e13a2a-60b8-459b-a995-1e1ad6485922": {"__data__": {"id_": "d9e13a2a-60b8-459b-a995-1e1ad6485922", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ec98317-bdde-469e-adb3-5d896cd107c8", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "e876c63dc6e064ab76998da9d886748eb8851dc2a6b56d61b138108064a824e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "71785f0a-ac85-43a8-9c23-5ce4505c7f96", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1bcfb40483cc7095433a580fd86c2cd9ba7564f10dda306d2f0b3004e2bb67ba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "89c8b095-c635-49c4-bc09-0f5ec3c96c2f", "node_type": "1", "metadata": {}, "hash": "5884c0a5936f8fa5705caed837694eac9f287ebfe5852a0588130c9834be2ed0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const", "mimetype": "text/plain", "start_char_idx": 504, "end_char_idx": 509, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "89c8b095-c635-49c4-bc09-0f5ec3c96c2f": {"__data__": {"id_": "89c8b095-c635-49c4-bc09-0f5ec3c96c2f", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ec98317-bdde-469e-adb3-5d896cd107c8", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "e876c63dc6e064ab76998da9d886748eb8851dc2a6b56d61b138108064a824e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d9e13a2a-60b8-459b-a995-1e1ad6485922", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "ba7ae604f50732a6baa66a427a67415514f452eb23b0f36f0c8aa002b5e08d63", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40cf2f11-634d-4451-91b3-abd32d0e93c9", "node_type": "1", "metadata": {}, "hash": "04fad66090ef27ddc1524be1443629b541584cc9da4000a7937dd84f7a8d040f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "handleSubmit =", "mimetype": "text/plain", "start_char_idx": 896, "end_char_idx": 910, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "40cf2f11-634d-4451-91b3-abd32d0e93c9": {"__data__": {"id_": "40cf2f11-634d-4451-91b3-abd32d0e93c9", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ec98317-bdde-469e-adb3-5d896cd107c8", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "e876c63dc6e064ab76998da9d886748eb8851dc2a6b56d61b138108064a824e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "89c8b095-c635-49c4-bc09-0f5ec3c96c2f", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "4f91574b0d5f2d3a29f875fe89139ded4ed171a9ce033d571d446692698b7fa4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2b05c0fb-c2d8-46b9-92df-d1cacfd358ae", "node_type": "1", "metadata": {}, "hash": "98af227ba93762c88c317362d7348361ef0649b0a9e5ca520ebb5ca90d2b108f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async (): Promise<void> =>", "mimetype": "text/plain", "start_char_idx": 911, "end_char_idx": 937, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2b05c0fb-c2d8-46b9-92df-d1cacfd358ae": {"__data__": {"id_": "2b05c0fb-c2d8-46b9-92df-d1cacfd358ae", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ec98317-bdde-469e-adb3-5d896cd107c8", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "e876c63dc6e064ab76998da9d886748eb8851dc2a6b56d61b138108064a824e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "40cf2f11-634d-4451-91b3-abd32d0e93c9", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "3d232c8a8439d8fbd09e5948332aeef37961d8da373461e9c1be1fefbdc150a3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "60fb7bb2-3310-473f-86ed-970a843cd5ec", "node_type": "1", "metadata": {}, "hash": "1560aa29b7f40410eac3f95cbbdf00c1397d29ffa1239136a217722709e65c83", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n    setStreamingPatch(\"\u23f3 Working...\");\n    setParsedPatch(null);", "mimetype": "text/plain", "start_char_idx": 938, "end_char_idx": 1004, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "60fb7bb2-3310-473f-86ed-970a843cd5ec": {"__data__": {"id_": "60fb7bb2-3310-473f-86ed-970a843cd5ec", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ec98317-bdde-469e-adb3-5d896cd107c8", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "e876c63dc6e064ab76998da9d886748eb8851dc2a6b56d61b138108064a824e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2b05c0fb-c2d8-46b9-92df-d1cacfd358ae", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "78e282f3428120cc7b38034e5f494c0a1df488c8a473e8a3e73869a52fb7ac9a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fca2d073-0a71-40ed-ad47-4bd28bd210f1", "node_type": "1", "metadata": {}, "hash": "3ed517fd268d152d08baf49cf81f6ca1650a2108cd9ce1068e6103079e33802a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "try", "mimetype": "text/plain", "start_char_idx": 1010, "end_char_idx": 1013, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fca2d073-0a71-40ed-ad47-4bd28bd210f1": {"__data__": {"id_": "fca2d073-0a71-40ed-ad47-4bd28bd210f1", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ec98317-bdde-469e-adb3-5d896cd107c8", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "e876c63dc6e064ab76998da9d886748eb8851dc2a6b56d61b138108064a824e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "60fb7bb2-3310-473f-86ed-970a843cd5ec", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b0a1fe07690bad7d05c5020a22e2aa3a95604b37f69ff72085f8f0db3d47b807", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "51c0921d-31c2-426a-9114-5b95c2debd6c", "node_type": "1", "metadata": {}, "hash": "c6e5b27c65fdc7189b095082176f14aaaefe47de2d4698e61abe9f54f7a8b54f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n      const res = await fetch(`${API_ROOT}/ask/codex_stream`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ question: prompt, context: code }),\n      });\n\n      const reader = res.body?.getReader();\n      const decoder = new TextDecoder();\n      let patch = \"\";\n\n      while (true) {\n        const { value, done } = await reader!.read();\n        if (done) break;\n        patch += decoder.decode(value, { stream: true });\n        setStreamingPatch(patch);\n      }\n\n      const fileMatch = patch.match(/File:\\s*(.*)/);\n      const reasonMatch = patch.match(/Reason:\\s*([\\s\\S]*)/);\n      const patchStart = patch.indexOf(\"Patch:\");\n      const reasonStart = patch.indexOf(\"Reason:\");\n\n      const extracted = {\n        file: fileMatch?.[1]?.trim() || \"\",\n        patch: patchStart !== -1 && reasonStart !== -1 ? patch.slice(patchStart + 6, reasonStart).trim() : \"\",\n        reason: reasonMatch?.[1]?.trim() || \"\"\n      };", "mimetype": "text/plain", "start_char_idx": 1014, "end_char_idx": 2002, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "51c0921d-31c2-426a-9114-5b95c2debd6c": {"__data__": {"id_": "51c0921d-31c2-426a-9114-5b95c2debd6c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ec98317-bdde-469e-adb3-5d896cd107c8", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "e876c63dc6e064ab76998da9d886748eb8851dc2a6b56d61b138108064a824e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fca2d073-0a71-40ed-ad47-4bd28bd210f1", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2e9facd5e95d04a39809d78afde3ebb6d065a10b1cd32097b81067927e89ca39", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6a9d8524-e3c5-4bc2-a79d-d2c1ec6ecaa4", "node_type": "1", "metadata": {}, "hash": "f9fb11691c46abea78b045d52927eef3fb51ac7fc438d6b9143b21e2ebc109ff", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if (extracted.file && extracted.patch) setParsedPatch(extracted);\n    }", "mimetype": "text/plain", "start_char_idx": 2010, "end_char_idx": 2081, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6a9d8524-e3c5-4bc2-a79d-d2c1ec6ecaa4": {"__data__": {"id_": "6a9d8524-e3c5-4bc2-a79d-d2c1ec6ecaa4", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ec98317-bdde-469e-adb3-5d896cd107c8", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "e876c63dc6e064ab76998da9d886748eb8851dc2a6b56d61b138108064a824e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "51c0921d-31c2-426a-9114-5b95c2debd6c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "9134f2eac39195ffe3737318d3b07dbac0e6d7f8a79c92564411c8150fc1d785", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a6b9c5fc-3958-456e-a178-22b95c76282e", "node_type": "1", "metadata": {}, "hash": "ffe8598133515839511bd3c79d5020e7833a42da810b6be161a09c49dc2a0cd7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "catch (err) {\n      setStreamingPatch(\"\u274c Error while generating patch: \" + String(err));\n    }", "mimetype": "text/plain", "start_char_idx": 2082, "end_char_idx": 2176, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a6b9c5fc-3958-456e-a178-22b95c76282e": {"__data__": {"id_": "a6b9c5fc-3958-456e-a178-22b95c76282e", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ec98317-bdde-469e-adb3-5d896cd107c8", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "e876c63dc6e064ab76998da9d886748eb8851dc2a6b56d61b138108064a824e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6a9d8524-e3c5-4bc2-a79d-d2c1ec6ecaa4", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "003ea8b5aa761b60f6585dc0d0b7210eaa9bc6423e60667436e36bee60299c47", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "098f8702-a262-4fb3-a7a0-28fe15f94601", "node_type": "1", "metadata": {}, "hash": "8a4d276f0273b229fe098e9063c83e7765f4ee71b7feb6e94f8cf68de6c1966f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "}", "mimetype": "text/plain", "start_char_idx": 179, "end_char_idx": 180, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "098f8702-a262-4fb3-a7a0-28fe15f94601": {"__data__": {"id_": "098f8702-a262-4fb3-a7a0-28fe15f94601", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ec98317-bdde-469e-adb3-5d896cd107c8", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "e876c63dc6e064ab76998da9d886748eb8851dc2a6b56d61b138108064a824e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a6b9c5fc-3958-456e-a178-22b95c76282e", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "e6ec42277d240ff1f106cc803316b4a54a33b550821b0577f1683896e9302498", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "efa1e6d8-a7dc-4433-83fd-6fafcf4b2b5e", "node_type": "1", "metadata": {}, "hash": "ee991495c30a6c030f7967763d3fa2dc2d0f4c53c3f6ea4a437f22825f042e93", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ";", "mimetype": "text/plain", "start_char_idx": 93, "end_char_idx": 94, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "efa1e6d8-a7dc-4433-83fd-6fafcf4b2b5e": {"__data__": {"id_": "efa1e6d8-a7dc-4433-83fd-6fafcf4b2b5e", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ec98317-bdde-469e-adb3-5d896cd107c8", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "e876c63dc6e064ab76998da9d886748eb8851dc2a6b56d61b138108064a824e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "098f8702-a262-4fb3-a7a0-28fe15f94601", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "073725ee4e17b6a7c84aa01373e6717dd05fd0b5438c43e29dfc3a6f6ee9e013", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "82a46d03-a0c9-4316-a09a-bd679788d75c", "node_type": "1", "metadata": {}, "hash": "40cbc97f4fe1c1abadb389e02d5255720aa8932fae9147cc8ad57699879d8006", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const applyPatch = async (): Promise<void> => {\n    if (!parsedPatch) return;\n    setStatus(toMDString(\"\u23f3 Applying patch...\"));\n\n    try {\n      const res = await fetch(`${API_ROOT}/codex/apply_patch`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          target_file: parsedPatch.file,\n          patch: parsedPatch.patch,\n          reason: parsedPatch.reason\n        })\n      });\n\n      if (res.ok) {\n        setStatus(toMDString(\"\u2705 Patch applied successfully.\"));\n      } else {\n        const err = await res.text();\n        setStatus(toMDString(\"\u274c Failed to apply patch: \" + err));\n      }\n    } catch (err) {\n      setStatus(toMDString(\"\u274c Patch request failed: \" + String(err)));\n    }\n  };\n\n  if (typeof status !== \"string\") {\n    console.log(\"DEBUG 418:\", typeof status, status);\n  }\n\n  return (\n    <div className=\"p-6 space-y-4\">\n      <h1 className=\"text-2xl font-bold\">\ud83e\udde0 Codex \u2014 Code Editing Agent</h1>\n\n      <CodexEditor code={code}", "mimetype": "text/plain", "start_char_idx": 2185, "end_char_idx": 3199, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "82a46d03-a0c9-4316-a09a-bd679788d75c": {"__data__": {"id_": "82a46d03-a0c9-4316-a09a-bd679788d75c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ec98317-bdde-469e-adb3-5d896cd107c8", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "e876c63dc6e064ab76998da9d886748eb8851dc2a6b56d61b138108064a824e3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "efa1e6d8-a7dc-4433-83fd-6fafcf4b2b5e", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/codex/page.tsx", "file_name": "page.tsx", "file_size": 3861, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "8e24d80d0f58c81e4f31e15969a0dd9f9c0140ed4e9e733cca99e4fdf5d1ceee", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "setCode={setCode} />\n      <CodexPromptBar prompt={prompt} setPrompt={setPrompt} onSubmit={handleSubmit} />\n      <CodexPatchView patch={streamingPatch} />\n\n      {parsedPatch && (\n        <div className=\"space-y-2\">\n          <Button onClick={applyPatch}>\u2705 Approve & Apply Patch</Button>\n          {status && (\n            <div className=\"text-sm text-muted-foreground\">\n              <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n                <SafeMarkdown>{toMDString(status)}</SafeMarkdown>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CodexPage;", "mimetype": "text/plain", "start_char_idx": 3200, "end_char_idx": 3841, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1b30bc4b-120e-4cd5-bb7b-90820c94b839": {"__data__": {"id_": "1b30bc4b-120e-4cd5-bb7b-90820c94b839", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/control/page.tsx", "file_name": "page.tsx", "file_size": 893, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e124993b-3b37-424a-8ff1-ba823840b230", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/control/page.tsx", "file_name": "page.tsx", "file_size": 893, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "f3795cf6e65b77be92a88f129957113822cd420d4e2390f0c6e3218197007e3d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: frontend/src/app/control/page.tsx\n// Purpose: Admin control dashboard with patch queue, logs, and memory panels\n\nimport ActionQueuePanel from \"@/components/ActionQueue/ActionQueuePanel\";\nimport LogsPanel from \"@/components/LogsPanel/LogsPanel\";\nimport MemoryPanel from \"@/components/MemoryPanel\";\n\nexport default function ControlPage() {\n  return (\n    <main className=\"p-6 space-y-6\">\n      <h1 className=\"text-2xl font-bold mb-4\">\ud83e\udde0 Relay Control Center</h1>\n\n      <section>\n        <h2 className=\"text-xl font-semibold mb-2\">\ud83d\udcdd Pending Actions</h2>\n        <ActionQueuePanel />\n      </section>\n\n      <section>\n        <h2 className=\"text-xl font-semibold mb-2\">\ud83d\udcc4 Execution Logs</h2>\n        <LogsPanel />\n      </section>\n\n      <section>\n        <h2 className=\"text-xl font-semibold mb-2\">\ud83e\uddec Memory Log</h2>\n        <MemoryPanel />\n      </section>\n    </main>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 880, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f8a338a6-51d6-4913-87f2-a30fa72ab4ec": {"__data__": {"id_": "f8a338a6-51d6-4913-87f2-a30fa72ab4ec", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/dashboard/page.tsx", "file_name": "page.tsx", "file_size": 173, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9c33eeab-8ddc-4c19-91b8-f219d3cdc2a9", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/dashboard/page.tsx", "file_name": "page.tsx", "file_size": 173, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "d64af0f7cd206c88bbc692d55a7d4898b5327a578612ff043001c1a2af3df217", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: frontend/src/app/dashboard/page.tsx\n\nimport Dashboard from \"@/components/dashboard/Dashboard\";\n\nexport default function DashboardPage() {\n  return <Dashboard />;\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 172, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2371a1ac-f66d-4407-b415-0707c4a1eabc": {"__data__": {"id_": "2371a1ac-f66d-4407-b415-0707c4a1eabc", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/docs/page.tsx", "file_name": "page.tsx", "file_size": 231, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3f9ab488-b602-435e-8389-6354515b593e", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/docs/page.tsx", "file_name": "page.tsx", "file_size": 231, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "afd47696fed584dab74a27da57f6b33a29b2ea8c3388806de25fc0c633e99675", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: src/app/docs/page.tsx\n// Purpose: Route-level page that renders the full DocsViewer\n\n'use client'\n\nimport DocsViewer from '@/components/DocsViewer/DocsViewer'\n\nexport default function DocsPage() {\n  return <DocsViewer />\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 231, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "87a46140-2663-4043-a4cb-01ffc81956e6": {"__data__": {"id_": "87a46140-2663-4043-a4cb-01ffc81956e6", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/layout.tsx", "file_name": "layout.tsx", "file_size": 514, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4aa3f44a-489d-49c8-9271-ccdb9179f69a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/layout.tsx", "file_name": "layout.tsx", "file_size": 514, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "30a232a0e7fad067267417d8d1f863b4ab44baf63b908c5e2e560ad10900bef5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import './globals.css';\nimport { ReactNode } from 'react';\nimport Sidebar from '@/components/Sidebar/Sidebar';\n\nexport default function RootLayout({ children }: { children: ReactNode }) {\n  return (\n    <html lang=\"en\">\n      <body className=\"min-h-screen font-sans bg-background text-foreground\">\n        <div className=\"flex h-screen\">\n          <Sidebar />\n          <main className=\"flex-1 overflow-auto p-6 bg-gray-50\">\n            {children}\n          </main>\n        </div>\n      </body>\n    </html>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 513, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3cd13449-817c-46dd-9c64-cc5b6c81ebe1": {"__data__": {"id_": "3cd13449-817c-46dd-9c64-cc5b6c81ebe1", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/metricschart/page.tsx", "file_name": "page.tsx", "file_size": 271, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "f4abdec2-bedf-4836-8c6b-cd8b7db52dc2", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/metricschart/page.tsx", "file_name": "page.tsx", "file_size": 271, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "201e9a66a1c9f4e45eff9348909822e298c08c7642cd718e5e5280c1e0d606f8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "'use client'\n\nimport MetricsChart from '@/components/MetricsCharts/MetricsCharts'\n\nexport default function MetricsChartPage() {\n  return (\n    <main className=\"p-6 space-y-6\">\n      <h1 className=\"text-2xl font-bold\">Metrics</h1>\n      <MetricsChart />\n    </main>\n  )\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 270, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e654657c-9f32-449a-98a4-5f042465fe3b": {"__data__": {"id_": "e654657c-9f32-449a-98a4-5f042465fe3b", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9f59e86a-2d7e-463b-a3ee-308c0858611c", "node_type": "1", "metadata": {}, "hash": "d9520c19d14a2cec34084a37dba5e7a888c932c2d25d8b02746c5717f53f8b4f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: src/app/page.tsx\n// Purpose: Wildfire Ranch Command Center UI (Puck-free)\n\n'use client'\n\nimport Image from 'next/image'", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 128, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9f59e86a-2d7e-463b-a3ee-308c0858611c": {"__data__": {"id_": "9f59e86a-2d7e-463b-a3ee-308c0858611c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e654657c-9f32-449a-98a4-5f042465fe3b", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "ada93c02fd9abea51a401168bb9f458993b85f1b22dc414f5a610c5c30071d4f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f6db0ad7-aced-4e89-8a84-536cf4320403", "node_type": "1", "metadata": {}, "hash": "2ce20fd78d39f601ba6da63e9a87be38fbcbcc254b1a863f025c764e281eb1d8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "export default", "mimetype": "text/plain", "start_char_idx": 130, "end_char_idx": 144, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f6db0ad7-aced-4e89-8a84-536cf4320403": {"__data__": {"id_": "f6db0ad7-aced-4e89-8a84-536cf4320403", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9f59e86a-2d7e-463b-a3ee-308c0858611c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "6e089d77a605b1121f60f8cec7f36e85cc3de599057749ad42b00b347e36d2b5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "74af99c6-6008-431a-b18c-5823ed36a559", "node_type": "1", "metadata": {}, "hash": "06c81484f2e6dbb8c5e998541f2be28c609f7143f7efa8e70c19af23fc97a533", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "function HomePage()", "mimetype": "text/plain", "start_char_idx": 145, "end_char_idx": 164, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "74af99c6-6008-431a-b18c-5823ed36a559": {"__data__": {"id_": "74af99c6-6008-431a-b18c-5823ed36a559", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f6db0ad7-aced-4e89-8a84-536cf4320403", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "6308b294c3cab6a7b9d9a3d5f42f0dbba65b7b1c08b43d2e70d47866f5b4aeed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b1e9b235-435e-47c0-88da-6990f35f6fca", "node_type": "1", "metadata": {}, "hash": "cd9873448821684d53c2e93285c66e252cb361453d0aa4e3e749306ac01a8445", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n  const statusColors = ['red', 'green', 'orange', 'green']", "mimetype": "text/plain", "start_char_idx": 165, "end_char_idx": 225, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b1e9b235-435e-47c0-88da-6990f35f6fca": {"__data__": {"id_": "b1e9b235-435e-47c0-88da-6990f35f6fca", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "74af99c6-6008-431a-b18c-5823ed36a559", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8dea5de199ef4606491b6106c166ad79f817e04ab1044e8093ee4df21ac1fdf7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ad1ae4be-f8ef-44d0-80a0-04a64746a5c2", "node_type": "1", "metadata": {}, "hash": "436a9b2e7c2aeaccc4bcb04d2c9c033a67cfcf5a8f3d0a0ab54d8b264e69b0b7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "return", "mimetype": "text/plain", "start_char_idx": 229, "end_char_idx": 235, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ad1ae4be-f8ef-44d0-80a0-04a64746a5c2": {"__data__": {"id_": "ad1ae4be-f8ef-44d0-80a0-04a64746a5c2", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b1e9b235-435e-47c0-88da-6990f35f6fca", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "aac22a46854070ad0b28c4895cb9172b4d3d9dc3c2211213f4407beb090ab38c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "75bdf8bb-cdc7-42a7-8a61-f4d95f47cb99", "node_type": "1", "metadata": {}, "hash": "bac8647394a22306c43289b990dea6293a5058a6841fe172abd6529ca784f3c6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "(", "mimetype": "text/plain", "start_char_idx": 71, "end_char_idx": 72, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "75bdf8bb-cdc7-42a7-8a61-f4d95f47cb99": {"__data__": {"id_": "75bdf8bb-cdc7-42a7-8a61-f4d95f47cb99", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ad1ae4be-f8ef-44d0-80a0-04a64746a5c2", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "a34fb49d26efe683b6f1f257a6c78cee228af0fb5fe6508310b836e6ebf77bb1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c9c6294b-aff8-4beb-b369-f79b66c0dd88", "node_type": "1", "metadata": {}, "hash": "eb5336a10c82a0d9497646f69a21a23b745cd91a4d197baced54e00905b9eecd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<main", "mimetype": "text/plain", "start_char_idx": 242, "end_char_idx": 247, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c9c6294b-aff8-4beb-b369-f79b66c0dd88": {"__data__": {"id_": "c9c6294b-aff8-4beb-b369-f79b66c0dd88", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "75bdf8bb-cdc7-42a7-8a61-f4d95f47cb99", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "e0bd066cea9ffa03de541e5be7d1317135e45efaae5b4a96cd2083d07cad6870", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bdea3ad6-823a-48ff-b250-bb73f1de119a", "node_type": "1", "metadata": {}, "hash": "153e384b3786d1d3285fb420ad33150844290b40c17c69c9bd1b886ccba6f293", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "className=", "mimetype": "text/plain", "start_char_idx": 248, "end_char_idx": 258, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bdea3ad6-823a-48ff-b250-bb73f1de119a": {"__data__": {"id_": "bdea3ad6-823a-48ff-b250-bb73f1de119a", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c9c6294b-aff8-4beb-b369-f79b66c0dd88", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "496f0999bfc36c8d0967e05082dd9966cdff39b0ca675a7dabd418f9de4a81bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f29b97ee-65d9-4bbd-b71c-da31fdeaf890", "node_type": "1", "metadata": {}, "hash": "6b52aa292950e6ce037944f9d62ffdc57ef6fbcc57bbfc19faa59ba2c67e2505", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"flex-1 grid grid-cols-4 grid-rows-2 gap-4 p-4 bg-gray-50\">", "mimetype": "text/plain", "start_char_idx": 258, "end_char_idx": 317, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f29b97ee-65d9-4bbd-b71c-da31fdeaf890": {"__data__": {"id_": "f29b97ee-65d9-4bbd-b71c-da31fdeaf890", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bdea3ad6-823a-48ff-b250-bb73f1de119a", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "be0a857477361ad0fac41038f778eb538d1803c8482c0ef1484e426df0134c82", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a19e5df2-8d78-4e34-a1ce-7e6d7aab2c4b", "node_type": "1", "metadata": {}, "hash": "eb5336a10c82a0d9497646f69a21a23b745cd91a4d197baced54e00905b9eecd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{/* Top Left Panel */}\n      <div", "mimetype": "text/plain", "start_char_idx": 324, "end_char_idx": 357, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a19e5df2-8d78-4e34-a1ce-7e6d7aab2c4b": {"__data__": {"id_": "a19e5df2-8d78-4e34-a1ce-7e6d7aab2c4b", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f29b97ee-65d9-4bbd-b71c-da31fdeaf890", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "d19a13c89e501d7054463abb57007bdb986d45c8507e9fcdebb6edc63c59b8ad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5fd04a39-8402-4acc-86ef-a63592e6c715", "node_type": "1", "metadata": {}, "hash": "93299448f9e0266c53ee30899705d7a2eb1cf57f18470e8c04d7cc4271795877", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "className=", "mimetype": "text/plain", "start_char_idx": 248, "end_char_idx": 258, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5fd04a39-8402-4acc-86ef-a63592e6c715": {"__data__": {"id_": "5fd04a39-8402-4acc-86ef-a63592e6c715", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a19e5df2-8d78-4e34-a1ce-7e6d7aab2c4b", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "496f0999bfc36c8d0967e05082dd9966cdff39b0ca675a7dabd418f9de4a81bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d6365900-f8ad-4eb9-9616-812cd9315e35", "node_type": "1", "metadata": {}, "hash": "4966bddb50cf3cb76b44edba70e77d4741ef6db126536c0143b5a6bbe417cf04", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"col-span-3 row-span-1 bg-white rounded-xl shadow p-4\">", "mimetype": "text/plain", "start_char_idx": 368, "end_char_idx": 423, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d6365900-f8ad-4eb9-9616-812cd9315e35": {"__data__": {"id_": "d6365900-f8ad-4eb9-9616-812cd9315e35", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5fd04a39-8402-4acc-86ef-a63592e6c715", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "876488ace74643b6001347d2b8491e10c1799ca467f245c7192e0aecc8385499", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c3eac059-8f73-4b16-a7db-0ec92d9a85dc", "node_type": "1", "metadata": {}, "hash": "eb5336a10c82a0d9497646f69a21a23b745cd91a4d197baced54e00905b9eecd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<h3", "mimetype": "text/plain", "start_char_idx": 432, "end_char_idx": 435, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c3eac059-8f73-4b16-a7db-0ec92d9a85dc": {"__data__": {"id_": "c3eac059-8f73-4b16-a7db-0ec92d9a85dc", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d6365900-f8ad-4eb9-9616-812cd9315e35", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "35d411476d3c137ea554a03c06835c91a0ab8b7877816e2479c62672344b3071", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "88d5fa33-eede-4f2f-9ce7-c737b7e96e84", "node_type": "1", "metadata": {}, "hash": "3de4a3b1c3d1a391ccac5c2e663e6ad7c2073b72520aef224d8ea12e8f1d16a9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "className=", "mimetype": "text/plain", "start_char_idx": 248, "end_char_idx": 258, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "88d5fa33-eede-4f2f-9ce7-c737b7e96e84": {"__data__": {"id_": "88d5fa33-eede-4f2f-9ce7-c737b7e96e84", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c3eac059-8f73-4b16-a7db-0ec92d9a85dc", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "496f0999bfc36c8d0967e05082dd9966cdff39b0ca675a7dabd418f9de4a81bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c7c04e80-d998-4982-becc-d4e09f0f09bf", "node_type": "1", "metadata": {}, "hash": "aff781102dd37136c56b81c7e4137c893c46613adce2f55ec5e7e34899e7c2b6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"font-semibold mb-2\">Top Left Panel</h3>\n        <p>Content goes here\u2026</p>\n      </div>", "mimetype": "text/plain", "start_char_idx": 446, "end_char_idx": 533, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c7c04e80-d998-4982-becc-d4e09f0f09bf": {"__data__": {"id_": "c7c04e80-d998-4982-becc-d4e09f0f09bf", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "88d5fa33-eede-4f2f-9ce7-c737b7e96e84", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "21eb2703c7994a5afbbeab635e5baa0c233a4154cf5dbe2d788f4fcd782cb140", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "936545bf-07ea-46b7-b059-0fd407fbbbe4", "node_type": "1", "metadata": {}, "hash": "eb5336a10c82a0d9497646f69a21a23b745cd91a4d197baced54e00905b9eecd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{/* Agent Status */}\n      <div", "mimetype": "text/plain", "start_char_idx": 541, "end_char_idx": 572, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "936545bf-07ea-46b7-b059-0fd407fbbbe4": {"__data__": {"id_": "936545bf-07ea-46b7-b059-0fd407fbbbe4", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c7c04e80-d998-4982-becc-d4e09f0f09bf", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "5ef8dd2249f3abadce93c46b3694597c183f1d3598b5933b95d88d2c13e8b760", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "545c01e0-0083-47a0-ba04-a185cacbcde3", "node_type": "1", "metadata": {}, "hash": "e68863910da5ebd1be2b05f35cb66148ae8616144abaf07ac124d3f0f4882f11", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "className=", "mimetype": "text/plain", "start_char_idx": 248, "end_char_idx": 258, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "545c01e0-0083-47a0-ba04-a185cacbcde3": {"__data__": {"id_": "545c01e0-0083-47a0-ba04-a185cacbcde3", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "936545bf-07ea-46b7-b059-0fd407fbbbe4", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "496f0999bfc36c8d0967e05082dd9966cdff39b0ca675a7dabd418f9de4a81bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8824c170-ac37-4e3b-845e-071ee36c82f2", "node_type": "1", "metadata": {}, "hash": "a3a71a8817e98c8c11cbfd256c8e7d1d81b918c32567153754a26267d75190da", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"col-span-1 row-span-1 bg-white rounded-xl shadow p-4\">", "mimetype": "text/plain", "start_char_idx": 583, "end_char_idx": 638, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8824c170-ac37-4e3b-845e-071ee36c82f2": {"__data__": {"id_": "8824c170-ac37-4e3b-845e-071ee36c82f2", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "545c01e0-0083-47a0-ba04-a185cacbcde3", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "537c57099a5990d605098a1630062e9f031fbddcd89ee580aaa5489c34070925", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e8998392-b304-46c5-8f34-675febbe41ba", "node_type": "1", "metadata": {}, "hash": "eb5336a10c82a0d9497646f69a21a23b745cd91a4d197baced54e00905b9eecd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<h4", "mimetype": "text/plain", "start_char_idx": 647, "end_char_idx": 650, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e8998392-b304-46c5-8f34-675febbe41ba": {"__data__": {"id_": "e8998392-b304-46c5-8f34-675febbe41ba", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8824c170-ac37-4e3b-845e-071ee36c82f2", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "10fc71978d4f2fef2116725924f4ca9f4c8338b8a79c1a6e0c633a7d97c6636e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "916e0d65-80de-4d8a-b88e-429ee401ed6c", "node_type": "1", "metadata": {}, "hash": "5e53154e8ffd072291bb141c676384039b644cfc7adc8cdda5c986454fa034c8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "className=", "mimetype": "text/plain", "start_char_idx": 248, "end_char_idx": 258, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "916e0d65-80de-4d8a-b88e-429ee401ed6c": {"__data__": {"id_": "916e0d65-80de-4d8a-b88e-429ee401ed6c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e8998392-b304-46c5-8f34-675febbe41ba", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "496f0999bfc36c8d0967e05082dd9966cdff39b0ca675a7dabd418f9de4a81bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1575b704-debc-4009-9fec-48a950a6c5d3", "node_type": "1", "metadata": {}, "hash": "9076c7b97551b2c156cedc851b9ade0216bdb1361d88dd2d5d4753d3c50280c0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"font-bold flex items-center gap-2 mb-2\">\n          <Image src=\"/PlannerCop.png\" alt=\"agent\" width={20} height={20} />\n          Agent Status\n        </h4>\n        <ul className=\"text-sm space-y-1\">\n          {statusColors.map((color, i) => (\n            <li key={i} className=\"flex items-center gap-2\">\n              <span className={`w-3 h-3 rounded-full bg-${color}-500`} />\n              Service {i + 1}\n            </li>\n          ))}\n        </ul>\n      </div>", "mimetype": "text/plain", "start_char_idx": 661, "end_char_idx": 1127, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1575b704-debc-4009-9fec-48a950a6c5d3": {"__data__": {"id_": "1575b704-debc-4009-9fec-48a950a6c5d3", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "916e0d65-80de-4d8a-b88e-429ee401ed6c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "2f22934716728ec635e123a65af77120b9fcca86f4ddf84bceed7dd89dd7c396", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fcea3600-f58d-4528-b031-a2b9c7fdb1e5", "node_type": "1", "metadata": {}, "hash": "6cb057fc6638a4584d093355d584073759f47bc7195194b63fe9683e021e815b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{/* Bottom Left Panel */}\n      <div className=\"col-span-3 row-span-1 bg-white rounded-xl shadow p-4\">\n        <h3 className=\"font-semibold mb-2\">Bottom Left Panel</h3>\n        <p>More content here\u2026</p>\n      </div>\n\n      {/* Shack Status */}\n      <div className=\"col-span-1 row-span-1 bg-white rounded-xl shadow p-4\">\n        <h4 className=\"font-bold flex items-center gap-2 mb-2\">\n          <Image src=\"/WildfireMang.png\" alt=\"shack\" width={20} height={20} />\n          Shack Status\n        </h4>\n        <ul className=\"text-sm space-y-1\">\n          {statusColors.map((color, i) => (\n            <li key={i} className=\"flex items-center gap-2\">\n              <span className={`w-3 h-3 rounded-full bg-${color}-500`} />\n              Service {i + 1}\n            </li>\n          ))}\n        </ul>\n      </div", "mimetype": "text/plain", "start_char_idx": 1135, "end_char_idx": 1945, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fcea3600-f58d-4528-b031-a2b9c7fdb1e5": {"__data__": {"id_": "fcea3600-f58d-4528-b031-a2b9c7fdb1e5", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1575b704-debc-4009-9fec-48a950a6c5d3", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "87f6fce73ea9b9cc95383b1350c5e6a153cb0784aca271d459c520dd3dcf80d8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3a8085e4-5559-4797-86f3-dec55a39b8cc", "node_type": "1", "metadata": {}, "hash": "ffe8598133515839511bd3c79d5020e7833a42da810b6be161a09c49dc2a0cd7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ">\n    </main>\n  )", "mimetype": "text/plain", "start_char_idx": 1945, "end_char_idx": 1962, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3a8085e4-5559-4797-86f3-dec55a39b8cc": {"__data__": {"id_": "3a8085e4-5559-4797-86f3-dec55a39b8cc", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8c7caf8932f9616ac90227edd8e222bba479e52325ff7de84abe10209f438a55", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fcea3600-f58d-4528-b031-a2b9c7fdb1e5", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/page.tsx", "file_name": "page.tsx", "file_size": 1969, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "391ffeea2885980eead3daacdbb8fa71c1085c69d72907b3e1d648735cb3fa9d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "}", "mimetype": "text/plain", "start_char_idx": 345, "end_char_idx": 346, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "63b58172-724d-49a6-8a64-bb79d61a3f14": {"__data__": {"id_": "63b58172-724d-49a6-8a64-bb79d61a3f14", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/settings/page.tsx", "file_name": "page.tsx", "file_size": 353, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "33fbed8f-fd0d-4781-8f3d-d59abaf7c5d9", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/settings/page.tsx", "file_name": "page.tsx", "file_size": 353, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "2f9e8809393d27477693db32b7d9575c2e19f2fb52184c730e9f8fbdc8af10bf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: frontend/src/app/settings/page.tsx\n\nexport default function SettingsPage() {\n  return (\n    <main className=\"p-6\">\n      <h1 className=\"text-2xl font-bold mb-4\">\u2699\ufe0f Settings</h1>\n      <p className=\"text-muted-foreground\">Configure your Relay experience here.</p>\n      {/* Add settings forms, toggles, API keys, etc. */}\n    </main>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 348, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e10fcc2d-93b2-43a0-9d68-749496780eac": {"__data__": {"id_": "e10fcc2d-93b2-43a0-9d68-749496780eac", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/status/page.tsx", "file_name": "page.tsx", "file_size": 284, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8bde591a-5aea-4b5f-a8aa-104c5fc96b69", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/app/status/page.tsx", "file_name": "page.tsx", "file_size": 284, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "4b423e48162a34bc27c48ee5a87296675699167fc19b75baa261de31b9906662", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: frontend/src/app/status/page.tsx\n\nimport StatusPanel from \"@/components/StatusPanel\";\n\nexport default function StatusPage() {\n  return (\n    <main className=\"p-6\">\n      <h1 className=\"text-2xl font-bold mb-4\">\ud83d\udcca System Status</h1>\n      <StatusPanel />\n    </main>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 280, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "24f2aaa0-7805-4d70-9992-7b1804cba1d7": {"__data__": {"id_": "24f2aaa0-7805-4d70-9992-7b1804cba1d7", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2c2fb39cd1cd40e5a54ffaa8aa42dcc5de4b3163bf64e048f8baae493cdba4c6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "35127fc9-69e0-44bd-91ae-51ad94d0a6a9", "node_type": "1", "metadata": {}, "hash": "d50948f42e81206a1eb4a462cea75024295f23f95be8184ced360c909546b732", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: frontend/src/components/ActionQueuePanel.tsx\n// Purpose: Superpanel for agent patch/action queue with approve/deny, context diff, and deep audit.\n//          All rationale, diff, content, and context fields are rendered with SafeMarkdown for bulletproof safety.\n\n\"use client\";\n\nimport { useEffect, useState, useCallback } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { API_ROOT } from \"@/lib/api\";\nimport SafeMarkdown from \"@/components/SafeMarkdown\";\nimport { toMDString } from \"@/lib/toMDString\";\n\ntype ActionStatus = \"pending\" | \"approved\" | \"denied\";\n\ntype HistoryEntry = {\n  timestamp: string;\n  status: ActionStatus;\n  user?: string;\n  comment?: string;\n};", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 854, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "35127fc9-69e0-44bd-91ae-51ad94d0a6a9": {"__data__": {"id_": "35127fc9-69e0-44bd-91ae-51ad94d0a6a9", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2c2fb39cd1cd40e5a54ffaa8aa42dcc5de4b3163bf64e048f8baae493cdba4c6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "24f2aaa0-7805-4d70-9992-7b1804cba1d7", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "f5d06a617a56faf3758a3cbc8d01fb746e4d9f90326566837792ca015fadbb9d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f25ba194-f327-4ec0-b1c3-61dbc148a844", "node_type": "1", "metadata": {}, "hash": "ff3042cecd888b2825552582af4d793e925fb276362f04db1bc6e54c2a581ca5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type Action = {\n  id: string;\n  timestamp: string;\n  status: ActionStatus;\n  action: {\n    type: string;\n    path?: string;\n    content?: string;\n    diff?: string;\n    context?: string;\n    rationale?: string;\n  };\n  history?: HistoryEntry[];\n};\n\n\nexport default function ActionQueuePanel() {\n  const [actions, setActions] = useState<Action[]>([]);\n  const [processing, setProcessing] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [showContext, setShowContext] = useState<{ [id: string]: boolean }>({});\n  const [showHistory, setShowHistory] = useState<{ [id: string]: boolean }>({});\n  const [comment, setComment] = useState<{ [id: string]: string }>({});\n  const [compareContextId, setCompareContextId] = useState<string | null>(null);\n  const [autoRefresh, setAutoRefresh] = useState(true);\n\n  const API_KEY = process.env.NEXT_PUBLIC_API_KEY || \"\";\n  const USER_ID = \"bret\";", "mimetype": "text/plain", "start_char_idx": 856, "end_char_idx": 1845, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f25ba194-f327-4ec0-b1c3-61dbc148a844": {"__data__": {"id_": "f25ba194-f327-4ec0-b1c3-61dbc148a844", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2c2fb39cd1cd40e5a54ffaa8aa42dcc5de4b3163bf64e048f8baae493cdba4c6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "35127fc9-69e0-44bd-91ae-51ad94d0a6a9", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "17378ae8580d9b0992b602980ce9b957255bc984d501137bb9c0758b8b27dd92", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c18f630e-6c2a-4537-9352-907191045c0a", "node_type": "1", "metadata": {}, "hash": "bfd24d2f872428b59eda61331cfc8e34d21c756824c2f2c27ac790173b3d5ce5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const", "mimetype": "text/plain", "start_char_idx": 1152, "end_char_idx": 1157, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c18f630e-6c2a-4537-9352-907191045c0a": {"__data__": {"id_": "c18f630e-6c2a-4537-9352-907191045c0a", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2c2fb39cd1cd40e5a54ffaa8aa42dcc5de4b3163bf64e048f8baae493cdba4c6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f25ba194-f327-4ec0-b1c3-61dbc148a844", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "af1149bf6fbf8aa8150f16008717c2984459873313d15fc7cea638e820250007", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b21f9cb5-52f5-4b34-98a3-2464ddf459c5", "node_type": "1", "metadata": {}, "hash": "3854e212e253f0ee427a77b8f9396be65746e6669f0c4382b92845c350f4446f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "fetchQueue =", "mimetype": "text/plain", "start_char_idx": 1855, "end_char_idx": 1867, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b21f9cb5-52f5-4b34-98a3-2464ddf459c5": {"__data__": {"id_": "b21f9cb5-52f5-4b34-98a3-2464ddf459c5", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2c2fb39cd1cd40e5a54ffaa8aa42dcc5de4b3163bf64e048f8baae493cdba4c6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c18f630e-6c2a-4537-9352-907191045c0a", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "ab981d8e5655762dbee0aebab0abc642120a5ef165cd7baf9911b662a453cd9a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9b774728-e508-4157-972b-f0bf51142f25", "node_type": "1", "metadata": {}, "hash": "f7fb5abde018d8625f94857e5f87427ded14e90a0bd0234f42aad8c5aa7dce8b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "useCallback", "mimetype": "text/plain", "start_char_idx": 317, "end_char_idx": 328, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9b774728-e508-4157-972b-f0bf51142f25": {"__data__": {"id_": "9b774728-e508-4157-972b-f0bf51142f25", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2c2fb39cd1cd40e5a54ffaa8aa42dcc5de4b3163bf64e048f8baae493cdba4c6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b21f9cb5-52f5-4b34-98a3-2464ddf459c5", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "f388a2f560c0d71dfb62e18eb4bbfc0e100e1ddbb2bba0275389323d4ffae1d3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c6d39bbb-68bd-45ba-894d-46163da6d4ad", "node_type": "1", "metadata": {}, "hash": "acf0060b10182ab73d5dfdab2ed3acccd26f019babb7a0193a4b3244bde02e08", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await fetch(`${API_ROOT}/control/list_queue`, {\n        headers: {\n          \"X-API-Key\": API_KEY,\n          \"X-User-Id\": USER_ID\n        }\n      });\n      if (!res.ok) throw new Error(\"Bad response\");\n      const data = await res.json();\n      const mapped = (data.actions || []).map((a: Action) => ({\n        ...a,\n        action: {\n          ...a.action,\n          rationale: toMDString(a.action?.rationale),\n          diff: toMDString(a.action?.diff),\n          context: toMDString(a.action?.context),\n          content: toMDString(a.action?.content)\n        },\n        history: Array.isArray(a.history)\n          ? a.history.map(h => ({\n              ...h,\n              comment: toMDString(h.comment)\n            }))\n          : a.history\n      }));\n      setActions(mapped);\n    } catch (err) {\n      console.error(\"Queue fetch failed\", err);\n      setError(\"Failed to fetch action queue.\");\n    }\n    setLoading(false);\n  },", "mimetype": "text/plain", "start_char_idx": 1879, "end_char_idx": 2896, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c6d39bbb-68bd-45ba-894d-46163da6d4ad": {"__data__": {"id_": "c6d39bbb-68bd-45ba-894d-46163da6d4ad", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2c2fb39cd1cd40e5a54ffaa8aa42dcc5de4b3163bf64e048f8baae493cdba4c6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9b774728-e508-4157-972b-f0bf51142f25", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "595d35700f668ea4e1ee615076fe5b522b3ceb5c5ea3a3d384e432ea23dedf20", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9e97ffd5-b906-4b90-ac16-f4b396fa95ec", "node_type": "1", "metadata": {}, "hash": "8a4d276f0273b229fe098e9063c83e7765f4ee71b7feb6e94f8cf68de6c1966f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "[API_KEY, USER_ID])", "mimetype": "text/plain", "start_char_idx": 2897, "end_char_idx": 2916, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9e97ffd5-b906-4b90-ac16-f4b396fa95ec": {"__data__": {"id_": "9e97ffd5-b906-4b90-ac16-f4b396fa95ec", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2c2fb39cd1cd40e5a54ffaa8aa42dcc5de4b3163bf64e048f8baae493cdba4c6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c6d39bbb-68bd-45ba-894d-46163da6d4ad", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "37dc677ff03a31a290bf365b385bb6ed0b6156e10462d547a3b425d873cae0bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fac7b240-a689-4e06-9f90-b5d9dcc9e3da", "node_type": "1", "metadata": {}, "hash": "2e34c39f15ad68269349653a0ccdd3cd75fb7a20d8e1e2bd9883348cec55932d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ";", "mimetype": "text/plain", "start_char_idx": 284, "end_char_idx": 285, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fac7b240-a689-4e06-9f90-b5d9dcc9e3da": {"__data__": {"id_": "fac7b240-a689-4e06-9f90-b5d9dcc9e3da", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2c2fb39cd1cd40e5a54ffaa8aa42dcc5de4b3163bf64e048f8baae493cdba4c6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9e97ffd5-b906-4b90-ac16-f4b396fa95ec", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b385e03470b84d53e9b5375fa6576ad24829c581b90fdfc4721f67d9ac779fc9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bd9a8683-8f7a-461e-84d2-e102cd20a40b", "node_type": "1", "metadata": {}, "hash": "0eb561473efff2ee3c68b3a1dc5418c84c60e71dd007792ef0f5006e77a21f38", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const updateStatus = async (id: string, action: \"approve\" | \"deny\") => {\n    setProcessing(id + action);\n    try {\n      const res = await fetch(`${API_ROOT}/control/${action}_action`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-API-Key\": API_KEY,\n          \"X-User-Id\": USER_ID\n        },\n        body: JSON.stringify({ id, comment: comment[id] || \"\" })\n      });\n      if (!res.ok) throw new Error(`${action} failed`);\n      await fetchQueue();\n      setComment((prev) => ({ ...prev, [id]: \"\" }));\n    } catch (err) {\n      console.error(`Action ${action} failed`, err);\n      setError(`Failed to ${action} action.`);\n    }\n    setProcessing(null);\n  };\n\n  useEffect(() => {\n    fetchQueue();\n    if (!autoRefresh) return;\n    const interval = setInterval(fetchQueue, 15000);\n    return () => clearInterval(interval);\n  }, [fetchQueue, autoRefresh]);\n\n  const getActionById = (id: string) => actions.find(a => a.id === id);", "mimetype": "text/plain", "start_char_idx": 2921, "end_char_idx": 3906, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bd9a8683-8f7a-461e-84d2-e102cd20a40b": {"__data__": {"id_": "bd9a8683-8f7a-461e-84d2-e102cd20a40b", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2c2fb39cd1cd40e5a54ffaa8aa42dcc5de4b3163bf64e048f8baae493cdba4c6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fac7b240-a689-4e06-9f90-b5d9dcc9e3da", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "6ac5e9ca6172d387c7b23b0b123a1d53e6e88c519d79eb91f4c074c5974f3b36", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f31dcd6d-be2d-4e55-bffa-ba2f53ed3b82", "node_type": "1", "metadata": {}, "hash": "01c873b4205dcde5c930580f436a5bff6b69b60f8c336fe1d3b4b84d513a0c07", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "for (const a of actions) {\n    if (a.action.rationale && typeof a.action.rationale !== \"string\") {\n      console.log(\"DEBUG 418:\", typeof a.action.rationale, a.action.rationale);\n    }\n    if (a.action.diff && typeof a.action.diff !== \"string\") {\n      console.log(\"DEBUG 418:\", typeof a.action.diff, a.action.diff);\n    }\n    if (typeof a.action.content !== \"string\") {\n      console.log(\"DEBUG 418:\", typeof a.action.content, a.action.content);\n    }\n    if (a.action.context && typeof a.action.context !== \"string\") {\n      console.log(\"DEBUG 418:\", typeof a.action.context, a.action.context);\n    }\n    if (Array.isArray(a.history)) {\n      for (const h of a.history) {\n        if (h.comment && typeof h.comment !== \"string\") {\n          console.log(\"DEBUG 418:\", typeof h.comment, h.comment);\n        }\n      }\n    }\n  }\n\n  if (error) return <p className=", "mimetype": "text/plain", "start_char_idx": 3910, "end_char_idx": 4770, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f31dcd6d-be2d-4e55-bffa-ba2f53ed3b82": {"__data__": {"id_": "f31dcd6d-be2d-4e55-bffa-ba2f53ed3b82", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2c2fb39cd1cd40e5a54ffaa8aa42dcc5de4b3163bf64e048f8baae493cdba4c6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bd9a8683-8f7a-461e-84d2-e102cd20a40b", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "ee0cc3730369e46146fc2e758344a895e88c5453374071ac9b5c50ba2c6fef47", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d07e4de3-50bf-4487-926d-2408eade20a7", "node_type": "1", "metadata": {}, "hash": "0986a36cfb1157fc3581eede4b12317e6c16d3cc3f225debddcc3a9d76c4029f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"text-red-500\">{error}</p>;\n  if (loading) return <p className=\"text-muted-foreground\">Loading queue...</p>;\n  if (!actions.length) return <p className=\"text-muted-foreground\">No actions in queue.</p>;\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex gap-2 mb-4 items-center\">\n        <Button variant={autoRefresh ? \"default\" : \"outline\"} onClick={() => setAutoRefresh(!autoRefresh)}>\n          {autoRefresh ? \"Auto-Refresh ON\" : \"Auto-Refresh OFF\"}\n        </Button>\n        <span className=\"text-xs text-gray-400\">Queue updates every 15s</span>\n      </div>\n      {actions.map((a) => (\n        <Card key={a.id}>", "mimetype": "text/plain", "start_char_idx": 4770, "end_char_idx": 5405, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d07e4de3-50bf-4487-926d-2408eade20a7": {"__data__": {"id_": "d07e4de3-50bf-4487-926d-2408eade20a7", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2c2fb39cd1cd40e5a54ffaa8aa42dcc5de4b3163bf64e048f8baae493cdba4c6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f31dcd6d-be2d-4e55-bffa-ba2f53ed3b82", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "4f15bbcb31fd55ee047849d741e9b877cef7707016d6e8b39f9eae8ae94a7bf5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3b48b1a5-db2f-4612-8804-5ee962e2c004", "node_type": "1", "metadata": {}, "hash": "b1e94bad4e365591bd4e6ed33d1599aa47acdb51945f8ca5b4c43162dc2f3706", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<CardContent className=\"p-4 space-y-2\">\n            <div className=\"flex items-center gap-2 text-sm font-mono text-muted-foreground\">\n              #{a.id.slice(0, 8)} \u2022 {a.timestamp}\n              <Badge variant={\n                a.status === \"approved\" ? \"success\" :\n                a.status === \"denied\" ? \"destructive\" : \"secondary\"\n              }>\n                {a.status}\n              </Badge>\n            </div>\n\n            <div className=\"text-sm\">\n              <strong>Type:</strong> {a.action.type}\n              {a.action.path && <span className=\"ml-2\"><strong>Path:</strong> {a.action.path}</span>}\n            </div>\n\n            {a.action.rationale && (\n              <div className=\"text-xs text-blue-800 mt-1 italic\">\n                <strong>Why?</strong>{\" \"", "mimetype": "text/plain", "start_char_idx": 5416, "end_char_idx": 6197, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3b48b1a5-db2f-4612-8804-5ee962e2c004": {"__data__": {"id_": "3b48b1a5-db2f-4612-8804-5ee962e2c004", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2c2fb39cd1cd40e5a54ffaa8aa42dcc5de4b3163bf64e048f8baae493cdba4c6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d07e4de3-50bf-4487-926d-2408eade20a7", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "c717de12429440ddde8dab958c4aecee51cd58a49b59b07b2e51ef626452a237", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "59e6dcac-16ea-4414-8158-7bd470a015a2", "node_type": "1", "metadata": {}, "hash": "7fd6b88f8e6b458bb845816b02af50aae02a5bf9dcaf25acd323ce975ef0f293", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "}\n                <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n                  <SafeMarkdown>{toMDString(a.action.rationale)}</SafeMarkdown>\n                </div>\n              </div>\n            )}\n\n            {a.action.diff ? (\n              <details>\n                <summary className=\"cursor-pointer text-xs text-blue-700\">View Diff</summary>\n                <div className=\"bg-muted p-2 rounded text-xs overflow-auto whitespace-pre-wrap\">\n                  <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n                    <SafeMarkdown>{toMDString(a.action.diff)}</SafeMarkdown>\n                  </div>\n                </div>\n              </details>\n            ) : (\n              <div className=\"bg-muted p-2 rounded text-sm overflow-auto whitespace-pre-wrap\">\n                <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n                  <SafeMarkdown>{toMDString(a.action.content?.slice(0, 500) ||", "mimetype": "text/plain", "start_char_idx": 6197, "end_char_idx": 7177, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "59e6dcac-16ea-4414-8158-7bd470a015a2": {"__data__": {"id_": "59e6dcac-16ea-4414-8158-7bd470a015a2", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2c2fb39cd1cd40e5a54ffaa8aa42dcc5de4b3163bf64e048f8baae493cdba4c6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b48b1a5-db2f-4612-8804-5ee962e2c004", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2bfb0acd21210b775e2c0c10d276492e39a726b8816d3b0526db40e5c48a3110", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11baac43-2726-4301-859e-1a6c007b3169", "node_type": "1", "metadata": {}, "hash": "be5bbfb884b5f757d5cd0e134474bb6f0a7c20757cc12c0a46c487c949f658e0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"No content\")}</SafeMarkdown>\n                </div>\n              </div>\n            )}\n\n            {a.action.context && (\n              <Button\n                size=\"sm\"\n                variant=\"outline\"\n                className=\"my-2\"\n                onClick={() => setShowContext(prev => ({ ...prev, [a.id]: !prev[a.id] }))}\n              >\n                {showContext[a.id] ? \"Hide Agent Context\" : \"Show Agent Context\"}\n              </Button>\n            )}\n\n            {showContext[a.id] && a.action.context && (\n              <div className=\"bg-gray-100 p-2 rounded text-xs max-h-32 overflow-auto mt-2\">\n                <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n                  <SafeMarkdown>{toMDString(a.action.context)}</SafeMarkdown>\n                </div>\n              </div>\n            )}\n\n            {/* Context diff compare */}\n            <div className=\"mt-2\">\n              <label className=\"text-xs mr-2\">Compare context to:</label>", "mimetype": "text/plain", "start_char_idx": 7178, "end_char_idx": 8165, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "11baac43-2726-4301-859e-1a6c007b3169": {"__data__": {"id_": "11baac43-2726-4301-859e-1a6c007b3169", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2c2fb39cd1cd40e5a54ffaa8aa42dcc5de4b3163bf64e048f8baae493cdba4c6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "59e6dcac-16ea-4414-8158-7bd470a015a2", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b2cfc28fc92ddcf12bd99db19261104e958553031889614377ce961e2f5bb7aa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b380fe3a-f9c3-4c98-8001-71e13e4a2cf5", "node_type": "1", "metadata": {}, "hash": "7e86d332c6020714b08b51a9da245b2f3296fdecedca801ca27c7e9590dafbc7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<select\n                className=\"border rounded px-1 py-0.5 text-xs\"\n                value={compareContextId === a.id ? \"\" : compareContextId || \"\"}\n                onChange={e => setCompareContextId(e.target.value || null)}\n              >\n                <option value=\"\">Select previous action\u2026</option>\n                {actions.filter(other => other.id !== a.id && other.action.context).map(other => (\n                  <option key={other.id} value={other.id}>\n                    #{other.id.slice(0, 8)} {other.action.type}\n                  </option>\n                ))}\n              </select>\n              {compareContextId && getActionById(compareContextId) && a.action.context && (\n                <details>\n                  <summary className=\"cursor-pointer text-xs text-blue-700 mt-1\">Show Context Diff</summary>\n                  <div className=\"bg-yellow-100 p-2 rounded text-xs overflow-auto whitespace-pre-wrap\">\n                    <div className=", "mimetype": "text/plain", "start_char_idx": 8180, "end_char_idx": 9149, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b380fe3a-f9c3-4c98-8001-71e13e4a2cf5": {"__data__": {"id_": "b380fe3a-f9c3-4c98-8001-71e13e4a2cf5", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2c2fb39cd1cd40e5a54ffaa8aa42dcc5de4b3163bf64e048f8baae493cdba4c6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11baac43-2726-4301-859e-1a6c007b3169", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2212602b15e537c4216a24ea6543e628b1f392c5af5b8402a8d9d0a3f15056eb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4fcef535-2869-417b-a8a5-62b06858bb87", "node_type": "1", "metadata": {}, "hash": "79aa2e6c8a9e88f4ff0e51570dd909acea1b0afe2e2ef5fca5215ce3061c6503", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"prose prose-neutral dark:prose-invert max-w-none\">\n                      <SafeMarkdown>\n                        {toMDString(\n                          diffContext(a.action.context, getActionById(compareContextId)?.action.context || \"\")\n                        )}\n                      </SafeMarkdown>\n                    </div>\n                  </div>\n                </details>\n              )}\n            </div>\n\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              className=\"my-2\"\n              onClick={() => setShowHistory(prev => ({ ...prev, [a.id]: !prev[a.id] }))}\n            >\n              {showHistory[a.id] ? \"Hide History\" : \"Show History\"}\n            </Button>\n\n            {showHistory[a.id] && Array.isArray(a.history) && (\n              <ul className=\"bg-gray-50 p-2 rounded text-xs mt-1 max-h-32 overflow-auto border\">\n                {a.history.map((h, i) => (\n                  <li key={i}>\n                    <span className=", "mimetype": "text/plain", "start_char_idx": 9149, "end_char_idx": 10137, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4fcef535-2869-417b-a8a5-62b06858bb87": {"__data__": {"id_": "4fcef535-2869-417b-a8a5-62b06858bb87", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2c2fb39cd1cd40e5a54ffaa8aa42dcc5de4b3163bf64e048f8baae493cdba4c6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b380fe3a-f9c3-4c98-8001-71e13e4a2cf5", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "259ef376cbab1ca141333ba9f8d08b3b91b8bc72bdeecc1d1d815ccb8018fe4e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8b2dce47-88de-4801-98bd-1aee910e3769", "node_type": "1", "metadata": {}, "hash": "c9e0a16ce08e4a0386a0538be8051d02ffcf4d4eeea103af8205bc3316a74b97", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"font-mono\">{h.timestamp}</span> \u2022 <Badge>{h.status}</Badge>\n                    {h.user && <span className=\"ml-2 text-blue-700\">{h.user}</span>}\n                    {h.comment && (\n                      <span className=\"ml-2 italic\">\n                        <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n                          <SafeMarkdown>{toMDString(h.comment)}</SafeMarkdown>\n                        </div>\n                      </span>\n                    )}\n                  </li>\n                ))}\n              </ul>\n            )}\n\n            {a.status === \"pending\" && (", "mimetype": "text/plain", "start_char_idx": 10137, "end_char_idx": 10746, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8b2dce47-88de-4801-98bd-1aee910e3769": {"__data__": {"id_": "8b2dce47-88de-4801-98bd-1aee910e3769", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2c2fb39cd1cd40e5a54ffaa8aa42dcc5de4b3163bf64e048f8baae493cdba4c6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4fcef535-2869-417b-a8a5-62b06858bb87", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b7c34ef7dc5294b392985c247842a7f1698c292cdf799abe7c44cbaf74ca2bd5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ceec07f8-cdf2-4bad-8ad1-a9c10d96b456", "node_type": "1", "metadata": {}, "hash": "bbf5c141552e04367040b4c53e8dc749b537344194351ea95e0d90405bb5ce89", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<form className=\"flex flex-col gap-2 mt-2\" onSubmit={e => e.preventDefault()}>\n                <Textarea\n                  id={`comment-${a.id}`}\n                  name={`comment-${a.id}`}\n                  placeholder=\"Optional comment (why approve/deny?)\"\n                  value={comment[a.id] || \"\"}\n                  onChange={e =>\n                    setComment(prev => ({ ...prev, [a.id]: e.target.value }))\n                  }\n                  className=\"text-xs\"\n                  rows={2}\n                />\n                <div className=\"flex gap-2\">\n                  <Button\n                    variant=\"default\"\n                    onClick={() => updateStatus(a.id, \"approve\")}\n                    disabled={processing === a.id + \"approve\"}\n                    type=\"button\"\n                  >\n                    {processing === a.id + \"approve\" ? \"Approving...\" : \"Approve\"}\n                  </Button>", "mimetype": "text/plain", "start_char_idx": 10761, "end_char_idx": 11682, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ceec07f8-cdf2-4bad-8ad1-a9c10d96b456": {"__data__": {"id_": "ceec07f8-cdf2-4bad-8ad1-a9c10d96b456", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2c2fb39cd1cd40e5a54ffaa8aa42dcc5de4b3163bf64e048f8baae493cdba4c6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8b2dce47-88de-4801-98bd-1aee910e3769", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ActionQueue/ActionQueuePanel.tsx", "file_name": "ActionQueuePanel.tsx", "file_size": 12602, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1ba4646184401bf4f10a6b25d854e2bd2b25302ac9467a84c770751cf20bd480", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<Button\n                    variant=\"destructive\"\n                    onClick={() => updateStatus(a.id, \"deny\")}\n                    disabled={processing === a.id + \"deny\"}\n                    type=\"button\"\n                  >\n                    {processing === a.id + \"deny\" ? \"Denying...\" : \"Deny\"}\n                  </Button>\n                </div>\n              </form>\n            )}\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n\n  // Simple line diff for context comparison\n  function diffContext(ctx1: string, ctx2: string): string {\n    const lines1 = new Set((ctx1 || \"\").split(\"\\n\"));\n    const lines2 = new Set((ctx2 || \"\").split(\"\\n\"));\n    let out = \"\";\n    for (const l of lines1) {\n      if (!lines2.has(l)) out += `+ ${l}\\n`;\n    }\n    for (const l of lines2) {\n      if (!lines1.has(l)) out += `- ${l}\\n`;\n    }\n    return out || \"No differences.\";\n  }\n}", "mimetype": "text/plain", "start_char_idx": 11701, "end_char_idx": 12595, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7ff00b61-ff44-4a9b-8013-330348ae3de5": {"__data__": {"id_": "7ff00b61-ff44-4a9b-8013-330348ae3de5", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/ChatMessage.tsx", "file_name": "ChatMessage.tsx", "file_size": 894, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "94b07f58-6718-4fa6-936e-c0f03227f675", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/ChatMessage.tsx", "file_name": "ChatMessage.tsx", "file_size": 894, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "519f31b6a1fbe73878d9ebf0c057728690b6172352f35fb588d967ebccb97805", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: components/AskAgent/ChatMessage.tsx\n// Purpose: Renders a single chat message, always string-coercing content for SafeMarkdown.\n\nimport React from \"react\";\nimport SafeMarkdown from \"@/components/SafeMarkdown\"; // Use the shared safe renderer\nimport { toMDString } from \"@/lib/toMDString\";\n\ntype Props = {\n  role: \"user\" | \"assistant\";\n  content: unknown; // Accept anything, always coerce to string for safety\n};\n\n\nexport default function ChatMessage({ role, content }: Props) {\n  const alignClass =\n    role === \"user\" ? \"text-right text-blue-700\" : \"text-left text-green-700\";\n\n  if (typeof content !== \"string\") {\n    console.log(\"DEBUG 418:\", typeof content, content);\n  }\n\n  return (\n    <div className={alignClass}>\n      <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n        <SafeMarkdown>{toMDString(content)}</SafeMarkdown>\n      </div>\n    </div>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 893, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7312a6c1-600d-42ef-9b04-c427fd43d962": {"__data__": {"id_": "7312a6c1-600d-42ef-9b04-c427fd43d962", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/ChatWindow.tsx", "file_name": "ChatWindow.tsx", "file_size": 1683, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5ee1f642-2093-4537-b583-0fccbd38eea4", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/ChatWindow.tsx", "file_name": "ChatWindow.tsx", "file_size": 1683, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "80a1d7c0e3069c49cb039f44bc54e026efaa19a8aac09ad0e27f0b919e37950c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7f43262b-6c6c-4c35-bb26-475fedfd0e55", "node_type": "1", "metadata": {}, "hash": "75b572782505703a40d90ca3d56fca89775eb5faa76633eb1f0faf3b63f23bba", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: components/AskEcho/ChatWindow.tsx\n// Purpose: Chat window for Ask Echo UI using /mcp/run pipeline\n// Updated: 2025-07-01\n\n\"use client\";\n\nimport ChatMessage from \"./ChatMessage\";\nimport InputBar from \"./InputBar\";\nimport { useAskEcho } from \"./useAskEcho\";\nimport { toMDString } from \"@/lib/toMDString\";\n\nexport default function ChatWindow() {\n  // Unified chat state and actions from the custom hook\n  const {\n    input,\n    setInput,\n    messages,\n    sendMessage,\n    loading,\n    bottomRef,\n  } = useAskEcho();\n\n  const renderedMessages = messages.map((msg, i) => {\n    if (typeof msg.content !== \"string\") {\n      console.log(\"DEBUG 418:\", typeof msg.content, msg.content);\n    }\n    return (\n      <>\n        <ChatMessage key={i} role={msg.role} content={toMDString(msg.content)} />\n      </>\n    );\n  });\n\n  return (\n    <div className=\"w-full max-w-2xl mx-auto min-h-screen flex flex-col\">\n      {/* Header */}\n      <h1 className=\"text-3xl font-bold my-4\">Ask Echo<", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 982, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7f43262b-6c6c-4c35-bb26-475fedfd0e55": {"__data__": {"id_": "7f43262b-6c6c-4c35-bb26-475fedfd0e55", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/ChatWindow.tsx", "file_name": "ChatWindow.tsx", "file_size": 1683, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5ee1f642-2093-4537-b583-0fccbd38eea4", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/ChatWindow.tsx", "file_name": "ChatWindow.tsx", "file_size": 1683, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "80a1d7c0e3069c49cb039f44bc54e026efaa19a8aac09ad0e27f0b919e37950c", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7312a6c1-600d-42ef-9b04-c427fd43d962", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/ChatWindow.tsx", "file_name": "ChatWindow.tsx", "file_size": 1683, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "4c0ba658e4a6acacc42a790b1fb2dc5ea3c7a32c4f91129584b90101a23c7229", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "/h1>\n\n      {/* Message List */}\n      <div className=\"flex-1 space-y-2 overflow-y-auto border rounded-xl p-4 bg-muted\">\n        {renderedMessages}\n        {loading && (\n          <div className=\"text-left text-green-700 animate-pulse\">\n            Echo is thinking\u2026\n          </div>\n        )}\n        <div ref={bottomRef} />\n      </div>\n\n      {/* Input Bar */}\n      <InputBar\n        value={input}\n        onChange={setInput}\n        onSend={sendMessage}\n        loading={loading}\n      />\n\n      {/* Keyboard shortcut hint */}\n      <div className=\"text-xs text-gray-400 text-center mt-2\">\n        Tip: Press <code>Enter</code> to send. Shift+Enter for newline.\n      </div>\n    </div>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 982, "end_char_idx": 1680, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7fa74443-a8fd-4400-af2d-e42726ae4f65": {"__data__": {"id_": "7fa74443-a8fd-4400-af2d-e42726ae4f65", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/InputBar.tsx", "file_name": "InputBar.tsx", "file_size": 1460, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "289722e8-f00e-4fe9-b450-4236bb381bad", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/InputBar.tsx", "file_name": "InputBar.tsx", "file_size": 1460, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "a6ad31a90f7c64f3aa7a51e71b3f91f6b655fcc27d23102ab8ee532cac3aceaf", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "de128145-3e12-4bea-93bb-90f57755e8fc", "node_type": "1", "metadata": {}, "hash": "87c1f1d9bcda39e3141a98430bb8ef500ab26a2f61e1917564d1cb1ef69439f2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: components/AskAgent/InputBar.tsx\n// Purpose: Text input + send button for AskAgent chat UI\n// Updated: 2025-06-30\n\nimport React from \"react\";\n\ntype Props = {\n  value: string;                 // Input value (controlled)\n  onChange: (val: string) => void; // Handle text changes\n  onSend: () => void;              // Called to send message\n  loading: boolean;                // Loading state (disables input/button)\n};", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 425, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "de128145-3e12-4bea-93bb-90f57755e8fc": {"__data__": {"id_": "de128145-3e12-4bea-93bb-90f57755e8fc", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/InputBar.tsx", "file_name": "InputBar.tsx", "file_size": 1460, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "289722e8-f00e-4fe9-b450-4236bb381bad", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/InputBar.tsx", "file_name": "InputBar.tsx", "file_size": 1460, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "a6ad31a90f7c64f3aa7a51e71b3f91f6b655fcc27d23102ab8ee532cac3aceaf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7fa74443-a8fd-4400-af2d-e42726ae4f65", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/InputBar.tsx", "file_name": "InputBar.tsx", "file_size": 1460, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "2bf9b4016988723bf0a5bb9c9801c0722e4bdcf0046d7818ba4897123c252069", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8960c468-1254-41e7-9e0b-11a5f622daaa", "node_type": "1", "metadata": {}, "hash": "cff696a528cab293583b45471970bdfca0d609859574d3ec9dcd0402a48f149c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const InputBar: React.FC<Props> = ({ value, onChange, onSend, loading }) => {\n  return (\n    <form\n      className=\"flex items-center gap-2 mt-4\"\n      autoComplete=\"off\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (!loading && value.trim()) onSend();\n      }}\n    >\n      <input\n        type=\"text\"\n        className=\"flex-1 rounded border px-3 py-2\"\n        placeholder=\"Type your question\u2026\"\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n        disabled={loading}\n        name=\"echo-message\"\n        id=\"echo-message\"\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\" && !e.shiftKey && value.trim() && !loading) {\n            e.preventDefault();\n            onSend();\n          }\n        }}\n        autoFocus\n      />\n      <button\n        type=\"submit\"\n        className=\"bg-blue-600 text-white rounded px-4 py-2\"\n        disabled={loading || !value.trim()}\n      >\n        {loading ? \"Sending\u2026\" : \"Send\"}\n      </button>\n    </form>\n  );\n};", "mimetype": "text/plain", "start_char_idx": 427, "end_char_idx": 1429, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8960c468-1254-41e7-9e0b-11a5f622daaa": {"__data__": {"id_": "8960c468-1254-41e7-9e0b-11a5f622daaa", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/InputBar.tsx", "file_name": "InputBar.tsx", "file_size": 1460, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "289722e8-f00e-4fe9-b450-4236bb381bad", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/InputBar.tsx", "file_name": "InputBar.tsx", "file_size": 1460, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "a6ad31a90f7c64f3aa7a51e71b3f91f6b655fcc27d23102ab8ee532cac3aceaf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "de128145-3e12-4bea-93bb-90f57755e8fc", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/InputBar.tsx", "file_name": "InputBar.tsx", "file_size": 1460, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "3bb64171ecd0814e51894ebb3b17d86873230351ae6737e56f506ad23f1911af", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "export default InputBar;", "mimetype": "text/plain", "start_char_idx": 1431, "end_char_idx": 1455, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f642873c-aad8-4f67-87fb-df4d50a0431d": {"__data__": {"id_": "f642873c-aad8-4f67-87fb-df4d50a0431d", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ea42579-802c-4e7c-8f88-071c77ea142b", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "4b216007d4ef11cc35442816d3a973209f7dee49ac96f5e9a2eab1ad6bdeb1ff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e26b868f-2b51-4a00-8df8-4e8c69151e2e", "node_type": "1", "metadata": {}, "hash": "7776e321976f2e306eaf074bc244953a71013c5165cbe4f5491f6bdd55470468", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: frontend/src/components/AskAgent/hooks.ts\n// Purpose: Reusable React hook for AskAgent chat\u2014now wired to /mcp/run for agent/critic orchestration\n//          Ensures ALL message fields for markdown rendering are always strings (prevents React #418).\n// Updated: 2025-07-01\n\nimport { useState } from \"react\";\nimport { API_ROOT } from \"@/lib/api\";\nimport { toMDString } from \"@/lib/toMDString\";\n\n// Message interface for chat history\nexport interface Message {\n  user: string;   // User's input\n  agent: string;  // Agent's reply (ALWAYS stringified)\n  context?: string; // (ALWAYS stringified if present)\n  action?: { type: string; payload: unknown };\n  id?: string;\n  status?: \"pending\" | \"approved\" | \"denied\";\n}\n\n\n// Main hook for agent chat", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 751, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e26b868f-2b51-4a00-8df8-4e8c69151e2e": {"__data__": {"id_": "e26b868f-2b51-4a00-8df8-4e8c69151e2e", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ea42579-802c-4e7c-8f88-071c77ea142b", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "4b216007d4ef11cc35442816d3a973209f7dee49ac96f5e9a2eab1ad6bdeb1ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f642873c-aad8-4f67-87fb-df4d50a0431d", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1751f536663f194dfded930ba385050bae843cdfaac67f8ea8f5702477c414da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f3e96b03-35a5-48e3-a21b-7cf2df286ac8", "node_type": "1", "metadata": {}, "hash": "5ee547af5f8cdac51816e8dff193e703bb70235a83fad54b33c34646fb5274f4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "export", "mimetype": "text/plain", "start_char_idx": 440, "end_char_idx": 446, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f3e96b03-35a5-48e3-a21b-7cf2df286ac8": {"__data__": {"id_": "f3e96b03-35a5-48e3-a21b-7cf2df286ac8", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ea42579-802c-4e7c-8f88-071c77ea142b", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "4b216007d4ef11cc35442816d3a973209f7dee49ac96f5e9a2eab1ad6bdeb1ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e26b868f-2b51-4a00-8df8-4e8c69151e2e", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "d314003adc6271096f15041135cf8f9a01577784f81a3da4807f8cb8d944cbd9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11e1a621-8edf-4b77-9559-acbbdc711ce1", "node_type": "1", "metadata": {}, "hash": "5aca068b923c77b87c0e147aee87d1dbf9b2ea8c36c5197ca3eb39a27aa93620", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "function useAskAgent(userId: string)", "mimetype": "text/plain", "start_char_idx": 759, "end_char_idx": 795, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "11e1a621-8edf-4b77-9559-acbbdc711ce1": {"__data__": {"id_": "11e1a621-8edf-4b77-9559-acbbdc711ce1", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ea42579-802c-4e7c-8f88-071c77ea142b", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "4b216007d4ef11cc35442816d3a973209f7dee49ac96f5e9a2eab1ad6bdeb1ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f3e96b03-35a5-48e3-a21b-7cf2df286ac8", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "d693c1ca8dac7e14d849f9d41a7ba04b7d21719e03b43f9c5aea5a42283a1976", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "962644ab-a666-409e-8f30-e6ce515b8b12", "node_type": "1", "metadata": {}, "hash": "ff3042cecd888b2825552582af4d793e925fb276362f04db1bc6e54c2a581ca5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  // Send user query to backend, add both user and agent messages", "mimetype": "text/plain", "start_char_idx": 796, "end_char_idx": 972, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "962644ab-a666-409e-8f30-e6ce515b8b12": {"__data__": {"id_": "962644ab-a666-409e-8f30-e6ce515b8b12", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ea42579-802c-4e7c-8f88-071c77ea142b", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "4b216007d4ef11cc35442816d3a973209f7dee49ac96f5e9a2eab1ad6bdeb1ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11e1a621-8edf-4b77-9559-acbbdc711ce1", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "10190c0b1c102e62b27652fa646bfa8177ce0bf4e73f6cf2e6dfddf295a540b0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1c8dda4e-a1e9-4027-9395-d296408b97ed", "node_type": "1", "metadata": {}, "hash": "43715fd3193ced9e0749ec7ff17c98dc7cbdfa66fa546b20c657307529211a08", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const", "mimetype": "text/plain", "start_char_idx": 800, "end_char_idx": 805, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1c8dda4e-a1e9-4027-9395-d296408b97ed": {"__data__": {"id_": "1c8dda4e-a1e9-4027-9395-d296408b97ed", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ea42579-802c-4e7c-8f88-071c77ea142b", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "4b216007d4ef11cc35442816d3a973209f7dee49ac96f5e9a2eab1ad6bdeb1ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "962644ab-a666-409e-8f30-e6ce515b8b12", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "55f95400a2d5cbf6fdbccc9d36898ad6a051241b74ee0fcaef47c19a2d2c30c8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "49cfcf0c-b7e8-4dfc-ae5b-e45d72b294c4", "node_type": "1", "metadata": {}, "hash": "410874d2c3b8697f4f507a7e746ac99878962d9a47f2f4e7c241bc8ed7d4b0ab", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "sendQuery =", "mimetype": "text/plain", "start_char_idx": 981, "end_char_idx": 992, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "49cfcf0c-b7e8-4dfc-ae5b-e45d72b294c4": {"__data__": {"id_": "49cfcf0c-b7e8-4dfc-ae5b-e45d72b294c4", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ea42579-802c-4e7c-8f88-071c77ea142b", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "4b216007d4ef11cc35442816d3a973209f7dee49ac96f5e9a2eab1ad6bdeb1ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1c8dda4e-a1e9-4027-9395-d296408b97ed", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1465cb69e72a0a1136fec12924bd6da05635b3ff4cfa0cbc39a40e199218b24a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ab6b7c5d-cd8d-495c-9821-89f8e029b094", "node_type": "1", "metadata": {}, "hash": "069f46c702711eb95ee861209a5a1c86601a977678b53899e8a61d13d3d8ede8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async (\n    query: string,\n    files: string[] = [],\n    topics: string[] = [],\n    role: string = \"planner\", // Optionally allow agent selection\n    debug: boolean = true,\n    scrollToBottom?: () => void\n  ) =>", "mimetype": "text/plain", "start_char_idx": 993, "end_char_idx": 1204, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ab6b7c5d-cd8d-495c-9821-89f8e029b094": {"__data__": {"id_": "ab6b7c5d-cd8d-495c-9821-89f8e029b094", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ea42579-802c-4e7c-8f88-071c77ea142b", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "4b216007d4ef11cc35442816d3a973209f7dee49ac96f5e9a2eab1ad6bdeb1ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "49cfcf0c-b7e8-4dfc-ae5b-e45d72b294c4", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "e6de1376f4ef62ee3bbbb1000b4686223edf58c8231b8936c1011a1cedf9d72d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "79b132ee-3558-4821-b908-551c647d4ab4", "node_type": "1", "metadata": {}, "hash": "1560aa29b7f40410eac3f95cbbdf00c1397d29ffa1239136a217722709e65c83", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n    if (!query.trim()) return;\n\n    // Add user message\n    setMessages((prev) => [...prev, { user: toMDString(query), agent: \"\" }]);\n    setLoading(true);", "mimetype": "text/plain", "start_char_idx": 1205, "end_char_idx": 1362, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "79b132ee-3558-4821-b908-551c647d4ab4": {"__data__": {"id_": "79b132ee-3558-4821-b908-551c647d4ab4", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ea42579-802c-4e7c-8f88-071c77ea142b", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "4b216007d4ef11cc35442816d3a973209f7dee49ac96f5e9a2eab1ad6bdeb1ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ab6b7c5d-cd8d-495c-9821-89f8e029b094", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "7999abfe06ad3f17cb2d28f0030c6780e252f322ed1fc92a9ea77bf94c855e63", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7422687e-3144-4061-ad9e-0f1f1f351e03", "node_type": "1", "metadata": {}, "hash": "7aebc22de37f5ab9cbc5e743bdfe58397f2c3a18a2bd2d8c9d39cb4e433a9eab", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "try", "mimetype": "text/plain", "start_char_idx": 1368, "end_char_idx": 1371, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7422687e-3144-4061-ad9e-0f1f1f351e03": {"__data__": {"id_": "7422687e-3144-4061-ad9e-0f1f1f351e03", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ea42579-802c-4e7c-8f88-071c77ea142b", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "4b216007d4ef11cc35442816d3a973209f7dee49ac96f5e9a2eab1ad6bdeb1ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "79b132ee-3558-4821-b908-551c647d4ab4", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "3c8aa534d875fc15bc20d1806dc4fd7ca687860bf7517987855e7f6d68ac9969", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "681b1631-9a28-4b57-94cd-061698126e2f", "node_type": "1", "metadata": {}, "hash": "ebdd3454f76b04ab789569df245d5546d70c86831b8f9d683d817bc805fabdc9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n      // Build payload for unified MCP endpoint\n      const payload = {\n        query,\n        files,\n        topics,\n        role,\n        debug,\n      };\n\n      const res = await fetch(`${API_ROOT}/mcp/run`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-User-Id\": userId,\n        },\n        body: JSON.stringify(payload),\n      });\n\n      const data = await res.json();\n      const result = data?.result || data;\n\n      // Coerce all markdown-displayed fields to strings for safety", "mimetype": "text/plain", "start_char_idx": 1372, "end_char_idx": 1915, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "681b1631-9a28-4b57-94cd-061698126e2f": {"__data__": {"id_": "681b1631-9a28-4b57-94cd-061698126e2f", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ea42579-802c-4e7c-8f88-071c77ea142b", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "4b216007d4ef11cc35442816d3a973209f7dee49ac96f5e9a2eab1ad6bdeb1ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7422687e-3144-4061-ad9e-0f1f1f351e03", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "7f583219de1416e62cf809729c1c4b35a8383e6607232b1f94de103f7960a0a2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "45c31b25-b609-433d-be6f-610128876199", "node_type": "1", "metadata": {}, "hash": "2dadbd1357d9850c358604da226fd7a6108cf44a2896d4d0b9df489e5e837358", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "setMessages((prev) => [\n        ...prev.slice(0, -1),\n        {\n          user: query,\n          agent: toMDString(\n            result?.plan?.objective ||\n            result?.plan?.recommendation ||\n            result?.recommendation ||\n            result?.response ||\n            data?.response ||\n            \"[no answer]\"\n          ),\n          context: toMDString(result?.context || data?.context),\n          action: result?.action,\n          id: result?.id,\n          status: result?.id ? \"pending\" : undefined,\n        },\n      ]);\n\n      scrollToBottom?.();\n    }", "mimetype": "text/plain", "start_char_idx": 1922, "end_char_idx": 2492, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "45c31b25-b609-433d-be6f-610128876199": {"__data__": {"id_": "45c31b25-b609-433d-be6f-610128876199", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ea42579-802c-4e7c-8f88-071c77ea142b", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "4b216007d4ef11cc35442816d3a973209f7dee49ac96f5e9a2eab1ad6bdeb1ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "681b1631-9a28-4b57-94cd-061698126e2f", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "9cabd5bd1b0eea2e6c694c87dfd4ef70d0252a6a456ec42ac2deaf4e2dcc2460", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8757520e-db76-495c-8b2e-74dc55cff600", "node_type": "1", "metadata": {}, "hash": "ffe8598133515839511bd3c79d5020e7833a42da810b6be161a09c49dc2a0cd7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "catch {\n      setMessages((prev) => [\n        ...prev.slice(0, -1),\n        { user: toMDString(query), agent: toMDString(\"Error contacting Relay.\") },\n      ]);\n    } finally {\n      setLoading(false);\n    }", "mimetype": "text/plain", "start_char_idx": 2493, "end_char_idx": 2700, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8757520e-db76-495c-8b2e-74dc55cff600": {"__data__": {"id_": "8757520e-db76-495c-8b2e-74dc55cff600", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ea42579-802c-4e7c-8f88-071c77ea142b", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "4b216007d4ef11cc35442816d3a973209f7dee49ac96f5e9a2eab1ad6bdeb1ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "45c31b25-b609-433d-be6f-610128876199", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "486e575a2742c659bb5e6323d1e387a10644e94ad2b6f5b8255efa07cbe6c787", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "92d35471-a49a-4cb8-91e6-be673d8f807f", "node_type": "1", "metadata": {}, "hash": "8a4d276f0273b229fe098e9063c83e7765f4ee71b7feb6e94f8cf68de6c1966f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "}", "mimetype": "text/plain", "start_char_idx": 300, "end_char_idx": 301, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "92d35471-a49a-4cb8-91e6-be673d8f807f": {"__data__": {"id_": "92d35471-a49a-4cb8-91e6-be673d8f807f", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ea42579-802c-4e7c-8f88-071c77ea142b", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "4b216007d4ef11cc35442816d3a973209f7dee49ac96f5e9a2eab1ad6bdeb1ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8757520e-db76-495c-8b2e-74dc55cff600", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "52313ec6908e6730b68a207bc47f17f8cf37f60be706f788040b8f9aaf56b753", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b27feb64-ba6a-4c97-a650-0acb030496de", "node_type": "1", "metadata": {}, "hash": "7368dc43068e566ff98523c61c19cc1c690a00c989d98f877faa5b8246cd56e8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ";", "mimetype": "text/plain", "start_char_idx": 314, "end_char_idx": 315, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b27feb64-ba6a-4c97-a650-0acb030496de": {"__data__": {"id_": "b27feb64-ba6a-4c97-a650-0acb030496de", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0ea42579-802c-4e7c-8f88-071c77ea142b", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "4b216007d4ef11cc35442816d3a973209f7dee49ac96f5e9a2eab1ad6bdeb1ff", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "92d35471-a49a-4cb8-91e6-be673d8f807f", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/hooks.ts", "file_name": "hooks.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 3620, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "f3cdea5e29abd68cb9c51eedace5d3bca242b0cac9755b84ecda4d46518e1b46", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// Approve/deny an agent-generated action, update status in message array\n  const updateActionStatus = async (\n    id: string,\n    action: \"approve\" | \"deny\",\n    idx: number\n  ) => {\n    try {\n      await fetch(`${API_ROOT}/control/${action}_action`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-User-Id\": userId,\n        },\n        body: JSON.stringify({ id, comment: \"inline approval\" }),\n      });\n\n      setMessages((prev) => {\n        const updated = [...prev];\n        if (updated[idx]) {\n          updated[idx] = {\n            ...updated[idx],\n            status: action === \"approve\" ? \"approved\" : \"denied\",\n          };\n        }\n        return updated;\n      });\n    } catch {\n      alert(\"Error approving/denying action.\");\n    }\n  };\n\n  return {\n    messages,\n    setMessages,\n    sendQuery,\n    updateActionStatus,\n    loading,\n  };\n}", "mimetype": "text/plain", "start_char_idx": 2709, "end_char_idx": 3617, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "78879324-d99b-4338-af41-2816bd32a628": {"__data__": {"id_": "78879324-d99b-4338-af41-2816bd32a628", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b2beae-4363-4343-a54e-9ae8df48ca17", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "245dd42b525f561627e039292de70fb8d2be2123aaa940a716be89b4200b8cd6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8e7b23b9-cd18-465d-9d96-56dad20035f9", "node_type": "1", "metadata": {}, "hash": "7776e321976f2e306eaf074bc244953a71013c5165cbe4f5491f6bdd55470468", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: components/AskAgent/useAskEcho.ts\n// Purpose: Custom React hook for agent chat, POSTing to /mcp/run for full agent/critic orchestration\n// Updated: 2025-06-30\n\nimport { useState, useRef, useEffect, useCallback } from \"react\";\nimport { API_ROOT } from \"@/lib/api\";\nimport { toMDString } from \"@/lib/toMDString\";\n\n// Message type for chat history\nexport type Message = {\n  role: \"user\" | \"assistant\";\n  content: string;\n  context?: string;\n  action?: { type: string; payload: unknown };\n  id?: string;\n  status?: \"pending\" | \"approved\" | \"denied\";\n};\n\n// Set a test user ID; in production, wire this to user/session context\nconst USER_ID = \"bret-demo\";\nconst STORAGE_KEY = `echo-chat-history-${USER_ID}`;", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 711, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8e7b23b9-cd18-465d-9d96-56dad20035f9": {"__data__": {"id_": "8e7b23b9-cd18-465d-9d96-56dad20035f9", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b2beae-4363-4343-a54e-9ae8df48ca17", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "245dd42b525f561627e039292de70fb8d2be2123aaa940a716be89b4200b8cd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "78879324-d99b-4338-af41-2816bd32a628", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "4a3ee015bd150c80ad11cc5c0a43c27ce62af3690b3a383ccc1bbe99b5ae42f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f9142cf8-0cda-481d-a2f5-924317e54673", "node_type": "1", "metadata": {}, "hash": "ecf11c56a3bb9e1162ab18b52933af30bdfef5280ea8112bf97b21e1967e52c6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "export", "mimetype": "text/plain", "start_char_idx": 354, "end_char_idx": 360, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f9142cf8-0cda-481d-a2f5-924317e54673": {"__data__": {"id_": "f9142cf8-0cda-481d-a2f5-924317e54673", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b2beae-4363-4343-a54e-9ae8df48ca17", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "245dd42b525f561627e039292de70fb8d2be2123aaa940a716be89b4200b8cd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8e7b23b9-cd18-465d-9d96-56dad20035f9", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "c37d01e59efbf9f084b4343aa02bb8b3c1694148df38cd839a840c9b7ecc19d1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ef8bf93b-f383-4db1-8510-a7c7ec693b4c", "node_type": "1", "metadata": {}, "hash": "755ed0ab7a971a382cbe07d29de5c72638a7e7f84033b36aeb2ae5398187cab5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "function useAskEcho()", "mimetype": "text/plain", "start_char_idx": 720, "end_char_idx": 741, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ef8bf93b-f383-4db1-8510-a7c7ec693b4c": {"__data__": {"id_": "ef8bf93b-f383-4db1-8510-a7c7ec693b4c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b2beae-4363-4343-a54e-9ae8df48ca17", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "245dd42b525f561627e039292de70fb8d2be2123aaa940a716be89b4200b8cd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f9142cf8-0cda-481d-a2f5-924317e54673", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "e0965f9ab999229aa100cf051eaed453295ad89630c4b8204f4a63eaa161abcb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "158f7c6e-59b5-40fb-ab05-f9aefe9393e4", "node_type": "1", "metadata": {}, "hash": "a2df600f3236e6024985e93977b38826c232cc639fa2380b84aa288836252532", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n  // Chat state and UI controls\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [files, setFiles] = useState(\"\");      // Comma-separated string in UI\n  const [topics, setTopics] = useState(\"\");    // Comma-separated string in UI\n  const [role, setRole] = useState(\"planner\"); // Agent role, can be \"planner\", \"codex\", etc.\n  const [showContext, setShowContext] = useState<Record<number, boolean>>({});\n  const bottomRef = useRef<HTMLDivElement>(null);\n\n  // Load chat history from localStorage on mount", "mimetype": "text/plain", "start_char_idx": 742, "end_char_idx": 1357, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "158f7c6e-59b5-40fb-ab05-f9aefe9393e4": {"__data__": {"id_": "158f7c6e-59b5-40fb-ab05-f9aefe9393e4", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b2beae-4363-4343-a54e-9ae8df48ca17", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "245dd42b525f561627e039292de70fb8d2be2123aaa940a716be89b4200b8cd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ef8bf93b-f383-4db1-8510-a7c7ec693b4c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "7bda75849a133ae928ea0628eb24e0e5620e359d06575059455491086f63b185", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "24ed2d09-7884-4ac9-ba41-d43e7b0fdc6d", "node_type": "1", "metadata": {}, "hash": "92a70521f40d862f6b06ec77afeb206b65ff5a701738b6313ee4262e47705c30", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      const raw = localStorage.getItem(STORAGE_KEY);\n      if (raw) {\n        try {\n          const parsed = JSON.parse(raw);\n          if (Array.isArray(parsed)) {\n            setMessages(\n             parsed\n  .filter(\n    (m: unknown): m is { role?: unknown; content?: unknown; context?: unknown } =>\n      typeof m === \"object\" &&\n      m !== null &&\n      \"content\" in m\n  )\n  .map((m) => ({\n    role:\n      m.role === \"user\" || m.role === \"assistant\"\n        ? m.role\n        : \"assistant\", // Fallback if missing\n    content: toMDString(m.content),\n    ...(typeof m.context === \"string\" && { context: toMDString(m.context) }),\n  }))\n\n            );\n          }\n        } catch {\n          setMessages([]);\n        }\n      }\n    }\n  }, []);\n\n  // Save chat history and scroll to bottom on message update", "mimetype": "text/plain", "start_char_idx": 1360, "end_char_idx": 2228, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "24ed2d09-7884-4ac9-ba41-d43e7b0fdc6d": {"__data__": {"id_": "24ed2d09-7884-4ac9-ba41-d43e7b0fdc6d", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b2beae-4363-4343-a54e-9ae8df48ca17", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "245dd42b525f561627e039292de70fb8d2be2123aaa940a716be89b4200b8cd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "158f7c6e-59b5-40fb-ab05-f9aefe9393e4", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2bcde7fa2f76db2bbcadf9029899968719c2f3eb9e4cabff757b114088865701", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6ed7f088-a671-4cf9-b449-aa3056fbd1ea", "node_type": "1", "metadata": {}, "hash": "69cbb00e35ddfa674b4e1e697f2f041109d73a3e669c152fabaa7acb5c1aa660", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(messages));\n    }\n    bottomRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  // Toggle expanded context view for a message\n  const toggleContext = useCallback((index: number) => {\n    setShowContext((prev) => ({ ...prev, [index]: !prev[index] }));\n  }, []);\n\n  // Approve or deny an agent-suggested action (e.g., code patch)", "mimetype": "text/plain", "start_char_idx": 2231, "end_char_idx": 2694, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6ed7f088-a671-4cf9-b449-aa3056fbd1ea": {"__data__": {"id_": "6ed7f088-a671-4cf9-b449-aa3056fbd1ea", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b2beae-4363-4343-a54e-9ae8df48ca17", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "245dd42b525f561627e039292de70fb8d2be2123aaa940a716be89b4200b8cd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "24ed2d09-7884-4ac9-ba41-d43e7b0fdc6d", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1fb16790d2327c6dcaa4fcc162effb9f8cae850e9addca5b3ba5698f64cb34d0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f33b36a9-4219-4fe4-9c0d-bc78449cb0e9", "node_type": "1", "metadata": {}, "hash": "ff3042cecd888b2825552582af4d793e925fb276362f04db1bc6e54c2a581ca5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const updateActionStatus = useCallback(\n    async (id: string, action: \"approve\" | \"deny\", idx: number) => {\n      try {\n        await fetch(`${API_ROOT}/control/${action}_action`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"X-User-Id\": USER_ID,\n          },\n          body: JSON.stringify({ id, comment: \"inline approval\" }),\n        });\n\n        setMessages((prev) => {\n          const updated = [...prev];\n          if (updated[idx]) {\n            updated[idx] = {\n              ...updated[idx],\n              status: action === \"approve\" ? \"approved\" : \"denied\",\n            };\n          }\n          return updated;\n        });\n      } catch {\n        alert(\"Error approving/denying action.\");\n      }\n    },\n    []\n  );\n\n  // Send user input to the backend (MCP entrypoint), add both user and agent messages", "mimetype": "text/plain", "start_char_idx": 2697, "end_char_idx": 3575, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f33b36a9-4219-4fe4-9c0d-bc78449cb0e9": {"__data__": {"id_": "f33b36a9-4219-4fe4-9c0d-bc78449cb0e9", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b2beae-4363-4343-a54e-9ae8df48ca17", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "245dd42b525f561627e039292de70fb8d2be2123aaa940a716be89b4200b8cd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6ed7f088-a671-4cf9-b449-aa3056fbd1ea", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "d022219639b5fc51008101e88b01023b950576f462767e72477f2f696dd74181", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5cf47046-fee5-4f4c-b574-6ac8d418c93c", "node_type": "1", "metadata": {}, "hash": "c1d6c3f4425eb23947998688460f255ac6d643269b5acdd29e4019a9fa217dc1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const", "mimetype": "text/plain", "start_char_idx": 631, "end_char_idx": 636, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5cf47046-fee5-4f4c-b574-6ac8d418c93c": {"__data__": {"id_": "5cf47046-fee5-4f4c-b574-6ac8d418c93c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b2beae-4363-4343-a54e-9ae8df48ca17", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "245dd42b525f561627e039292de70fb8d2be2123aaa940a716be89b4200b8cd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f33b36a9-4219-4fe4-9c0d-bc78449cb0e9", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "313e84de8ec942db6d5d7be92280016572d984efb49dad9802f610b1d64bc7f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f45d5828-67ff-4c91-87a1-312d4a98c973", "node_type": "1", "metadata": {}, "hash": "3854e212e253f0ee427a77b8f9396be65746e6669f0c4382b92845c350f4446f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "sendMessage =", "mimetype": "text/plain", "start_char_idx": 3584, "end_char_idx": 3597, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f45d5828-67ff-4c91-87a1-312d4a98c973": {"__data__": {"id_": "f45d5828-67ff-4c91-87a1-312d4a98c973", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b2beae-4363-4343-a54e-9ae8df48ca17", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "245dd42b525f561627e039292de70fb8d2be2123aaa940a716be89b4200b8cd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5cf47046-fee5-4f4c-b574-6ac8d418c93c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "8d65395a5f9139a1117c1d3720d059da3780cefc76ff7f9291e154a3d1db9289", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f4c7ea3-3e42-4215-a342-bb2bbd07e245", "node_type": "1", "metadata": {}, "hash": "436a9b2e7c2aeaccc4bcb04d2c9c033a67cfcf5a8f3d0a0ab54d8b264e69b0b7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "useCallback", "mimetype": "text/plain", "start_char_idx": 207, "end_char_idx": 218, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1f4c7ea3-3e42-4215-a342-bb2bbd07e245": {"__data__": {"id_": "1f4c7ea3-3e42-4215-a342-bb2bbd07e245", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b2beae-4363-4343-a54e-9ae8df48ca17", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "245dd42b525f561627e039292de70fb8d2be2123aaa940a716be89b4200b8cd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f45d5828-67ff-4c91-87a1-312d4a98c973", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "41366d8a170b5bf5658d146254d9d0484be1d5b69b3d17aa81eaefd3cb2bcac2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ae000c1b-e46b-492e-8154-2cf2d402808f", "node_type": "1", "metadata": {}, "hash": "90e49f1b1aaf8feec91ae1a324168af4784253b1a09b117b448f84688616b43b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "(", "mimetype": "text/plain", "start_char_idx": 739, "end_char_idx": 740, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ae000c1b-e46b-492e-8154-2cf2d402808f": {"__data__": {"id_": "ae000c1b-e46b-492e-8154-2cf2d402808f", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b2beae-4363-4343-a54e-9ae8df48ca17", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "245dd42b525f561627e039292de70fb8d2be2123aaa940a716be89b4200b8cd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f4c7ea3-3e42-4215-a342-bb2bbd07e245", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "a783d76fe66a5f0f4e2d541f0e83b96193824ce58f6b3be70f3a8c6a73c352c8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "22d1ac1b-7e94-44f3-95ac-73a1fcb479fe", "node_type": "1", "metadata": {}, "hash": "27c10218d7c0cf2c9810a93733fcc52d466696713a934e2456d219d0a54d16a2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async () =>", "mimetype": "text/plain", "start_char_idx": 3610, "end_char_idx": 3621, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "22d1ac1b-7e94-44f3-95ac-73a1fcb479fe": {"__data__": {"id_": "22d1ac1b-7e94-44f3-95ac-73a1fcb479fe", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b2beae-4363-4343-a54e-9ae8df48ca17", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "245dd42b525f561627e039292de70fb8d2be2123aaa940a716be89b4200b8cd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae000c1b-e46b-492e-8154-2cf2d402808f", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "cf6839791bbec5ed7fe3f96474f8b5458366e10f3b433a92a6393c0c15eaeb4d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cbc2052b-9d11-44cc-9dc1-c2d92546defb", "node_type": "1", "metadata": {}, "hash": "1560aa29b7f40410eac3f95cbbdf00c1397d29ffa1239136a217722709e65c83", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n    if (!input.trim() || loading) return;\n\n    const userMessage = input;\n    setMessages((msgs) => [...msgs, { role: \"user\", content: toMDString(userMessage) }]);\n    setInput(\"\");\n    setLoading(true);", "mimetype": "text/plain", "start_char_idx": 3622, "end_char_idx": 3827, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cbc2052b-9d11-44cc-9dc1-c2d92546defb": {"__data__": {"id_": "cbc2052b-9d11-44cc-9dc1-c2d92546defb", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b2beae-4363-4343-a54e-9ae8df48ca17", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "245dd42b525f561627e039292de70fb8d2be2123aaa940a716be89b4200b8cd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "22d1ac1b-7e94-44f3-95ac-73a1fcb479fe", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "81d6c386947976bcbf7e2e8cd52da21a678ec0e36a96fcadbdc65be365af7c18", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a01462e9-0bf3-41fc-b097-f375ce45f856", "node_type": "1", "metadata": {}, "hash": "21af159688f8e062778b91ff9cbfbc60a252e2c33bf09099b61bb8ee22521a4c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "try", "mimetype": "text/plain", "start_char_idx": 1497, "end_char_idx": 1500, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a01462e9-0bf3-41fc-b097-f375ce45f856": {"__data__": {"id_": "a01462e9-0bf3-41fc-b097-f375ce45f856", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b2beae-4363-4343-a54e-9ae8df48ca17", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "245dd42b525f561627e039292de70fb8d2be2123aaa940a716be89b4200b8cd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cbc2052b-9d11-44cc-9dc1-c2d92546defb", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "9825aee1a789bb8403b65a59855835ca406448a1582824891b7e1d4b79ae1ad7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8de4135-c70f-4117-b4f7-7a224de0a0d6", "node_type": "1", "metadata": {}, "hash": "81da4f2461f0f68d1e14456b0ccc8596f156048ffa92e5b8dc6beb3e24b49741", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n      // Prepare the payload, parsing files/topics as arrays, include selected agent role\n      const payload = {\n        query: userMessage, // could also use \"question\", but \"query\" is unified\n        files: files ? files.split(\",\").map((f) => f.trim()).filter(Boolean) : [],\n        topics: topics ? topics.split(\",\").map((t) => t.trim()).filter(Boolean) : [],\n        role,        // \"planner\", \"codex\", etc. (add a UI selector for more roles)\n        debug: true, // always enable debug for richer agent responses\n      };\n\n      const res = await fetch(`${API_ROOT}/mcp/run`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-User-Id\": USER_ID,\n        },\n        body: JSON.stringify(payload),\n      });\n\n      const data = await res.json();\n\n      // Compose assistant's reply (try multiple possible keys)\n      const result = data?.result || data;\n        // Helper: always coerce to string for SafeMarkdown", "mimetype": "text/plain", "start_char_idx": 3837, "end_char_idx": 4809, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d8de4135-c70f-4117-b4f7-7a224de0a0d6": {"__data__": {"id_": "d8de4135-c70f-4117-b4f7-7a224de0a0d6", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b2beae-4363-4343-a54e-9ae8df48ca17", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "245dd42b525f561627e039292de70fb8d2be2123aaa940a716be89b4200b8cd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a01462e9-0bf3-41fc-b097-f375ce45f856", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "580a3c4e1c67d75240bf5fe866c55d711f6f98c519f10f7b68c37059ebff323b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5dd54dff-820a-42ea-8b5d-5f684310cf52", "node_type": "1", "metadata": {}, "hash": "1f59d58fb78f920e912cc2378830f231bd3f8385b972cd7aa2aa74facad97ecd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "setMessages((msgs) => [\n        ...msgs,\n        {\n          role: \"assistant\",\n          content:\n            toMDString(\n              result?.plan?.objective ||\n              result?.plan?.recommendation ||\n              result?.recommendation ||\n              result?.response ||\n              data?.response ||\n              \"[no answer]\"\n            ),\n          context: toMDString(result?.context || data?.context),\n          action: result?.action,\n          id: result?.id,\n          status: result?.id ? \"pending\" : undefined,\n        },\n      ]);\n\n    }", "mimetype": "text/plain", "start_char_idx": 4817, "end_char_idx": 5382, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5dd54dff-820a-42ea-8b5d-5f684310cf52": {"__data__": {"id_": "5dd54dff-820a-42ea-8b5d-5f684310cf52", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b2beae-4363-4343-a54e-9ae8df48ca17", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "245dd42b525f561627e039292de70fb8d2be2123aaa940a716be89b4200b8cd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d8de4135-c70f-4117-b4f7-7a224de0a0d6", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "ce638c97f42d968dae4bba884b6e589f4298ffa1fd0d420faeb5e15f06c8f209", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "02134762-c2a2-4a9a-aca7-ac50e82d70cd", "node_type": "1", "metadata": {}, "hash": "5af0a9e8117e1e3c83c493d7fab2a16bee6dbce7492fa24c88de1604a649ffed", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "catch {\n      setMessages((msgs) => [\n        ...msgs,\n        { role: \"assistant\", content: toMDString(\"[error] Unable to get response.\") },\n      ]);\n    }", "mimetype": "text/plain", "start_char_idx": 5383, "end_char_idx": 5540, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "02134762-c2a2-4a9a-aca7-ac50e82d70cd": {"__data__": {"id_": "02134762-c2a2-4a9a-aca7-ac50e82d70cd", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b2beae-4363-4343-a54e-9ae8df48ca17", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "245dd42b525f561627e039292de70fb8d2be2123aaa940a716be89b4200b8cd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5dd54dff-820a-42ea-8b5d-5f684310cf52", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "91d9f727b9aa7ef8925abaa42604b8caac996641d82718640ac530357f2c6f07", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "11a18a74-9370-4f65-ac4d-6822ae29c21c", "node_type": "1", "metadata": {}, "hash": "0c89f0ad10da6c9658d4b4f6ee4b72352ad5c71cd9bdfa6cfa14f10da5378252", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "setLoading(false);\n  }", "mimetype": "text/plain", "start_char_idx": 5546, "end_char_idx": 5568, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "11a18a74-9370-4f65-ac4d-6822ae29c21c": {"__data__": {"id_": "11a18a74-9370-4f65-ac4d-6822ae29c21c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b2beae-4363-4343-a54e-9ae8df48ca17", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "245dd42b525f561627e039292de70fb8d2be2123aaa940a716be89b4200b8cd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "02134762-c2a2-4a9a-aca7-ac50e82d70cd", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2bcd9730b6f7baab3bc4f29fb54ac6c84ca60a1ad67d2640c9e983fb01f60e40", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bee1db08-77a8-4dc6-8881-a1a0057450e8", "node_type": "1", "metadata": {}, "hash": "8a4d276f0273b229fe098e9063c83e7765f4ee71b7feb6e94f8cf68de6c1966f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ", [input, loading, files, topics, role])", "mimetype": "text/plain", "start_char_idx": 5568, "end_char_idx": 5608, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bee1db08-77a8-4dc6-8881-a1a0057450e8": {"__data__": {"id_": "bee1db08-77a8-4dc6-8881-a1a0057450e8", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b2beae-4363-4343-a54e-9ae8df48ca17", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "245dd42b525f561627e039292de70fb8d2be2123aaa940a716be89b4200b8cd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "11a18a74-9370-4f65-ac4d-6822ae29c21c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b5fc263e947ae3201a28b6ab62b7058ddc7eddbc2993777f7cb422c805beb8f5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2d0d46c3-0a23-4459-9784-5c245d18e091", "node_type": "1", "metadata": {}, "hash": "0f5cd3065c03e2fd0eef98e92109d09bf2ec45afe41c7dcd4c4705d905c4072c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ";", "mimetype": "text/plain", "start_char_idx": 233, "end_char_idx": 234, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2d0d46c3-0a23-4459-9784-5c245d18e091": {"__data__": {"id_": "2d0d46c3-0a23-4459-9784-5c245d18e091", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "87b2beae-4363-4343-a54e-9ae8df48ca17", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "245dd42b525f561627e039292de70fb8d2be2123aaa940a716be89b4200b8cd6", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bee1db08-77a8-4dc6-8881-a1a0057450e8", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AskAgent/useAskEcho.ts", "file_name": "useAskEcho.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 5907, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "7ac16bf20e2a2e6568ea24f4d10aaeae11fa94604fb9b41441a342ffb7c609f8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "return {\n    input,\n    setInput,\n    messages,\n    sendMessage,\n    loading,\n    bottomRef,\n    files,\n    setFiles,\n    topics,\n    setTopics,\n    role,\n    setRole, // Expose role setter so UI can allow agent role selection\n    showContext,\n    toggleContext,\n    updateActionStatus,\n  };\n}", "mimetype": "text/plain", "start_char_idx": 5613, "end_char_idx": 5906, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "915c566a-0699-4f50-9c52-9da29e73671a": {"__data__": {"id_": "915c566a-0699-4f50-9c52-9da29e73671a", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c1da7268-9fe0-48fe-9042-d7386a714184", "node_type": "1", "metadata": {}, "hash": "0114240d88df93089eda998de1a7716e7e450b121f59897e42122ffd27e3b67d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: frontend/src/components/AuditPanel.tsx\n// Purpose: Unified agent audit dashboard with drilldown into agent actions/patches and related context.\n//          All comments, context, rationales, and diffs now render via SafeMarkdown for clarity and security.\n\n\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { API_ROOT } from \"@/lib/api\";\nimport SafeMarkdown from \"@/components/SafeMarkdown\";\n\n// Bulletproof Markdown stringifier for all content/comments/diffs/rationales/etc.\nfunction toMDString(val: unknown): string {\n  if (val == null) return \"\";\n  if (typeof val === \"string\") return val;\n  if (Array.isArray(val)) return val.map(toMDString).join(\"\\n\\n\");\n  try {\n    return \"```json\\n\" + JSON.stringify(val, null, 2) + \"\\n```\";\n  } catch {\n    return String(val);\n  }\n}\n\n\n// === Types ===", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 914, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c1da7268-9fe0-48fe-9042-d7386a714184": {"__data__": {"id_": "c1da7268-9fe0-48fe-9042-d7386a714184", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "915c566a-0699-4f50-9c52-9da29e73671a", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "6f1b2fa9dea00ade69a1a5c2087bc8996815a5b4faac16b7c4bbb5f8b3309721", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eabd84fe-0ec1-4801-9e80-6309ed8882ee", "node_type": "1", "metadata": {}, "hash": "605a8cf2c13c76a71023d99e9ebb1675741288ed507592d6470992991ae27aff", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "type LogEntry = {\n  id: string;\n  type?: string;\n  path?: string;\n  timestamp: string;\n  status: string;\n  user?: string;\n  comment?: string;\n  result?: unknown;\n};\ntype ActionDetail = {\n  id: string;\n  action: {\n    context?: string;\n    rationale?: string;\n    diff?: string;\n  };\n  history?: {\n    timestamp: string;\n    status: string;\n    user?: string;\n    comment?: string;\n  }[];\n};\n\nexport default function AuditPanel() {\n  const [logs, setLogs] = useState<LogEntry[]>([]);\n  const [filter, setFilter] = useState<{ user?: string; type?: string; status?: string }>({});\n  const [search, setSearch] = useState(\"\");\n  const [exporting, setExporting] = useState(false);\n  const [selected, setSelected] = useState<LogEntry | null>(null);\n  const [relatedAction, setRelatedAction] = useState<ActionDetail | null>(null);\n\n  // === Fetch audit logs from backend ===", "mimetype": "text/plain", "start_char_idx": 915, "end_char_idx": 1781, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eabd84fe-0ec1-4801-9e80-6309ed8882ee": {"__data__": {"id_": "eabd84fe-0ec1-4801-9e80-6309ed8882ee", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c1da7268-9fe0-48fe-9042-d7386a714184", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "16cb0034cd48728b9a123e746d0d1cdbcb9e8d972a6a2c2e24e57460b00b5875", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3b839412-abb2-43fb-958a-6eb267117f28", "node_type": "1", "metadata": {}, "hash": "8068b5edb1a90758381c989171adc7ceb5d58a1709507f1b216af1562ff2fc01", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async function fetchLog() {\n    try {\n      const res = await fetch(`${API_ROOT}/control/list_log`, {\n        headers: { \"X-API-Key\": process.env.NEXT_PUBLIC_API_KEY || \"\" }\n      });\n      if (!res.ok) throw new Error(\"Bad response\");\n      const data = await res.json();\n      const mapped = (data.log || []).map((l: LogEntry) => ({\n        ...l,\n        comment: toMDString(l.comment),\n        result: toMDString(l.result)\n      }));\n      setLogs(mapped);\n    } catch (err) {\n      console.error(\"[AuditPanel] Failed to fetch logs:\", err);\n      setLogs([]);\n    }\n  }\n\n  // === Fetch related queue action by id ===", "mimetype": "text/plain", "start_char_idx": 1784, "end_char_idx": 2403, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3b839412-abb2-43fb-958a-6eb267117f28": {"__data__": {"id_": "3b839412-abb2-43fb-958a-6eb267117f28", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eabd84fe-0ec1-4801-9e80-6309ed8882ee", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "9525a7dd51d51d8a3838069cfcc8584c215835882955ae10229175c45e4fc967", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ca4469bc-3c62-43ca-b964-908f307bbf73", "node_type": "1", "metadata": {}, "hash": "6049e27c00085d0e64be69fb4350afedd9179be72e8a0028fcdf16cde83f19e0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async function fetchRelated(id: string)", "mimetype": "text/plain", "start_char_idx": 2406, "end_char_idx": 2445, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ca4469bc-3c62-43ca-b964-908f307bbf73": {"__data__": {"id_": "ca4469bc-3c62-43ca-b964-908f307bbf73", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3b839412-abb2-43fb-958a-6eb267117f28", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "18780b2f1408e3358c1bdfe8c13502c67857a63c85a376a8a74d1e3e8ead5133", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f7e4c9cc-6022-4cac-bcb2-0336fceea5ec", "node_type": "1", "metadata": {}, "hash": "12d6acc0a047cbb0ec46553f556af36f9f26fc3fc5b0bc4e1c340674d07261c6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{", "mimetype": "text/plain", "start_char_idx": 287, "end_char_idx": 288, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f7e4c9cc-6022-4cac-bcb2-0336fceea5ec": {"__data__": {"id_": "f7e4c9cc-6022-4cac-bcb2-0336fceea5ec", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ca4469bc-3c62-43ca-b964-908f307bbf73", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "08a76018ae08d5f5819aad3a1e8e76745c89c4e110d9642c1413463578a8e3b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c6f134d1-35c1-4622-855b-9faa65767bf6", "node_type": "1", "metadata": {}, "hash": "bf7c6701df339d937ba00deb3abb2f8363f1697bfafc98640e5e0d7c37161d16", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "try {\n      const res = await fetch(`${API_ROOT}/control/list_queue`, {\n        headers: { \"X-API-Key\": process.env.NEXT_PUBLIC_API_KEY || \"\" }\n      });\n      if (!res.ok) throw new Error(\"Bad response\");\n      const data = await res.json();\n      const action: ActionDetail | undefined = (data.actions as ActionDetail[] | undefined)?.find(a => a.id === id);\n      const mapped = action\n        ? {\n            ...action,\n            action: {\n              ...action.action,\n              context: toMDString(action.action?.context),\n              rationale: toMDString(action.action?.rationale),\n              diff: toMDString(action.action?.diff)\n            },\n            history: Array.isArray(action.history)\n              ? action.history.map(h => ({\n                  ...h,\n                  comment: toMDString(h.comment)\n                }))\n              : action.history\n          }\n        : null;\n      setRelatedAction(mapped);\n    }", "mimetype": "text/plain", "start_char_idx": 2452, "end_char_idx": 3401, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c6f134d1-35c1-4622-855b-9faa65767bf6": {"__data__": {"id_": "c6f134d1-35c1-4622-855b-9faa65767bf6", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f7e4c9cc-6022-4cac-bcb2-0336fceea5ec", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "5dd5281eaac0edf2b17826b38a7b15b5e01d481110bacee5fa8458472489286b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "edf4a488-a999-42d5-ba70-aeb40bae87e6", "node_type": "1", "metadata": {}, "hash": "ffe8598133515839511bd3c79d5020e7833a42da810b6be161a09c49dc2a0cd7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "catch (err) {\n      console.error(\"[AuditPanel] Failed to fetch related action:\", err);\n      setRelatedAction(null);\n    }", "mimetype": "text/plain", "start_char_idx": 3402, "end_char_idx": 3525, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "edf4a488-a999-42d5-ba70-aeb40bae87e6": {"__data__": {"id_": "edf4a488-a999-42d5-ba70-aeb40bae87e6", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c6f134d1-35c1-4622-855b-9faa65767bf6", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "c9d82ff98152f88b423ced6508001406734379bd6067d757e90df4c1b7141de4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "82029320-8a69-436a-9eb6-c092830b2abc", "node_type": "1", "metadata": {}, "hash": "fe22a1bcac8e822d76be186ea5d990f04024d39907839a12116f5b241abcbd74", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "}", "mimetype": "text/plain", "start_char_idx": 309, "end_char_idx": 310, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "82029320-8a69-436a-9eb6-c092830b2abc": {"__data__": {"id_": "82029320-8a69-436a-9eb6-c092830b2abc", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "edf4a488-a999-42d5-ba70-aeb40bae87e6", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "89eff6d76f9c40d2a695c59d065dc2944d88615df81b5c20e64f31da0d074094", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cc565f2a-4c98-4a4b-830c-cde2faa772f7", "node_type": "1", "metadata": {}, "hash": "a3482c6a4b0888b455a8e32aeadcca39173457aa3a1314fb1492614e166b3631", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "useEffect(() => {\n    fetchLog();\n    const interval = setInterval(fetchLog, 15000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // === Filtered/search results ===\n  const filtered = logs.filter(entry =>\n    (!filter.user || entry.user === filter.user) &&\n    (!filter.type || entry.type === filter.type) &&\n    (!filter.status || entry.status === filter.status) &&\n    (search.trim() === \"\" ||\n      (entry.comment?.toLowerCase().includes(search.toLowerCase()) ?? false) ||\n      (entry.type?.toLowerCase().includes(search.toLowerCase()) ?? false) ||\n      (entry.path?.toLowerCase().includes(search.toLowerCase()) ?? false) ||\n      (entry.id?.toLowerCase().includes(search.toLowerCase()) ?? false))\n  );\n\n  // === Export as JSON/CSV ===", "mimetype": "text/plain", "start_char_idx": 3533, "end_char_idx": 4283, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cc565f2a-4c98-4a4b-830c-cde2faa772f7": {"__data__": {"id_": "cc565f2a-4c98-4a4b-830c-cde2faa772f7", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "82029320-8a69-436a-9eb6-c092830b2abc", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "27378dcb1f96f0a877b2935572df212df74422ee3d7535a67f290e1a5627cee6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "019784bb-e75c-47e4-b0e4-ffd06409e339", "node_type": "1", "metadata": {}, "hash": "ff3042cecd888b2825552582af4d793e925fb276362f04db1bc6e54c2a581ca5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "function exportLog(format: \"json\" | \"csv\") {\n    setExporting(true);\n    let blob;\n    if (format === \"json\") {\n      blob = new Blob([JSON.stringify(filtered, null, 2)], { type: \"application/json\" });\n    } else {\n      const header = [\"id\", \"type\", \"path\", \"timestamp\", \"status\", \"user\", \"comment\"];\n      const csv = [\n        header.join(\",\"),\n        ...filtered.map(l => header.map(k => `\"${(l as Record<string, string | undefined>)[k] ?? \"\"}\"`).join(\",\"))\n      ].join(\"\\n\");\n      blob = new Blob([csv], { type: \"text/csv\" });\n    }\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `relay_audit_log.${format}`;\n    a.click();\n    setTimeout(() => {\n      setExporting(false);\n      URL.revokeObjectURL(url);\n    }, 1000);\n  }\n\n  // === UI ===", "mimetype": "text/plain", "start_char_idx": 4286, "end_char_idx": 5108, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "019784bb-e75c-47e4-b0e4-ffd06409e339": {"__data__": {"id_": "019784bb-e75c-47e4-b0e4-ffd06409e339", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cc565f2a-4c98-4a4b-830c-cde2faa772f7", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "653590f748851d9f026be824b5e349f7190d5e0eb80fb3db65108e0c4e92a2de", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "011c1678-a701-4cb9-a5d0-36fbdfe43ff5", "node_type": "1", "metadata": {}, "hash": "1e71ea545fb5e3b4d742cfef0c7fd4638e4a4314b28cba242e754ebd043f35be", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const", "mimetype": "text/plain", "start_char_idx": 1348, "end_char_idx": 1353, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "011c1678-a701-4cb9-a5d0-36fbdfe43ff5": {"__data__": {"id_": "011c1678-a701-4cb9-a5d0-36fbdfe43ff5", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "019784bb-e75c-47e4-b0e4-ffd06409e339", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "34015166921c7624358725fcbb8d97004a44c5341bbba72875c39305f05a1d5b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "91ad83df-6fd8-48fb-860e-d5e72a69fa86", "node_type": "1", "metadata": {}, "hash": "e0d58cffb25fb6159971985aeaa28343d13864d7dc89bc65768f1806419a2974", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "rows =", "mimetype": "text/plain", "start_char_idx": 5117, "end_char_idx": 5123, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "91ad83df-6fd8-48fb-860e-d5e72a69fa86": {"__data__": {"id_": "91ad83df-6fd8-48fb-860e-d5e72a69fa86", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "011c1678-a701-4cb9-a5d0-36fbdfe43ff5", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b4a95783ab69093d1a722b070f643a4475ba48937943eb8f048c0295953cc858", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3fd6db07-292e-4148-bcaf-58cd01b96dce", "node_type": "1", "metadata": {}, "hash": "436a9b2e7c2aeaccc4bcb04d2c9c033a67cfcf5a8f3d0a0ab54d8b264e69b0b7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "filtered.map", "mimetype": "text/plain", "start_char_idx": 4645, "end_char_idx": 4657, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3fd6db07-292e-4148-bcaf-58cd01b96dce": {"__data__": {"id_": "3fd6db07-292e-4148-bcaf-58cd01b96dce", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "91ad83df-6fd8-48fb-860e-d5e72a69fa86", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "98ab0bda871568ad2ec73e9502a0263eb5146aab1d5feac5c379597b23279760", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "47f8c71d-7b01-4347-8a01-5835f0556adf", "node_type": "1", "metadata": {}, "hash": "e407f9e20f37d553d4f752c99212430ae3cb5a720874f6a8823cb42723ccba23", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "(", "mimetype": "text/plain", "start_char_idx": 616, "end_char_idx": 617, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "47f8c71d-7b01-4347-8a01-5835f0556adf": {"__data__": {"id_": "47f8c71d-7b01-4347-8a01-5835f0556adf", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3fd6db07-292e-4148-bcaf-58cd01b96dce", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "f57583837cc43f9da577b651e4fd0048b9dda32473c853d053bb3817ce6e7f1b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d6f64d7a-0939-43e1-8e4d-3ca807194907", "node_type": "1", "metadata": {}, "hash": "0b547e3eff63ad685d63e18b4b0de2ad0c244e35512a11e39ac43a64eee3bc58", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "(entry, i) =>", "mimetype": "text/plain", "start_char_idx": 5137, "end_char_idx": 5150, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d6f64d7a-0939-43e1-8e4d-3ca807194907": {"__data__": {"id_": "d6f64d7a-0939-43e1-8e4d-3ca807194907", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "47f8c71d-7b01-4347-8a01-5835f0556adf", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "fa930e460b8304e93dcb713820c444cba56721751e04b4e0a930c9d479d17382", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "901274fa-6ae5-4d52-8222-92be0ba8f267", "node_type": "1", "metadata": {}, "hash": "cd9873448821684d53c2e93285c66e252cb361453d0aa4e3e749306ac01a8445", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n    if (entry.comment && typeof entry.comment !== \"string\") {\n      console.log(\"DEBUG 418:\", typeof entry.comment, entry.comment);\n    }", "mimetype": "text/plain", "start_char_idx": 5151, "end_char_idx": 5290, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "901274fa-6ae5-4d52-8222-92be0ba8f267": {"__data__": {"id_": "901274fa-6ae5-4d52-8222-92be0ba8f267", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d6f64d7a-0939-43e1-8e4d-3ca807194907", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "0392868399f2f931bfc9edf0b54e4d0f3d09b36c3e90ae366f3c55c86cbebbc7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d1179111-3a63-4b3f-86fa-5b5463a00261", "node_type": "1", "metadata": {}, "hash": "a65b0cd0076210eabe579ad6bd16ed7dbccdeb453fd48f0faaa76c9f6604404d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "return", "mimetype": "text/plain", "start_char_idx": 660, "end_char_idx": 666, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d1179111-3a63-4b3f-86fa-5b5463a00261": {"__data__": {"id_": "d1179111-3a63-4b3f-86fa-5b5463a00261", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "901274fa-6ae5-4d52-8222-92be0ba8f267", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "ba9df4e0d8f8410b8a76345687c50bad9de357a0f7f22b3fd45a5d8eaf025b78", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4c700435-5428-4226-b7d0-c0e5b95199df", "node_type": "1", "metadata": {}, "hash": "ba862e92ae94eb1ed2b5f81705af21dea50e8fe0838021dd283c8275a7394b13", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "(\n      <tr\n        key={i}\n        className=\"border-t border-gray-300 cursor-pointer hover:bg-blue-50\"\n        onClick={() => {\n          setSelected(entry);\n          fetchRelated(entry.id);\n        }}\n      >\n        <td", "mimetype": "text/plain", "start_char_idx": 5302, "end_char_idx": 5526, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4c700435-5428-4226-b7d0-c0e5b95199df": {"__data__": {"id_": "4c700435-5428-4226-b7d0-c0e5b95199df", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d1179111-3a63-4b3f-86fa-5b5463a00261", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b642517f7708011094f3d9e3f82582e1388962422438962bfeb0575b7a210709", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "92b53c16-5c51-487a-b148-415ccd9763c6", "node_type": "1", "metadata": {}, "hash": "8a4d276f0273b229fe098e9063c83e7765f4ee71b7feb6e94f8cf68de6c1966f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "className=\"px-2 py-1\">{entry.timestamp}</td>\n        <td className=\"px-2 py-1\">\n          <Badge\n            variant={\n              entry.status === \"approved\"\n                ? \"success\"\n                : entry.status === \"denied\"\n                ? \"destructive\"\n                : entry.status === \"pending\"\n                ? \"secondary\"\n                : \"default\"\n            }\n          >\n            {entry.status}\n          </Badge>\n        </td>\n        <td className=\"px-2 py-1\">{entry.user || \"\"}</td>\n        <td className=\"px-2 py-1\">{entry.type || \"\"}</td>\n        <td className=\"px-2 py-1 font-mono\">{entry.path || \"\"}</td>\n        <td className=\"px-2 py-1 font-mono\">{entry.id.slice(0, 8)}</td>\n        <td className=\"px-2 py-1\">\n          {entry.comment ? (\n            <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n              <SafeMarkdown>{entry.comment}</SafeMarkdown>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </td>\n      </tr>\n    )", "mimetype": "text/plain", "start_char_idx": 5527, "end_char_idx": 6533, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "92b53c16-5c51-487a-b148-415ccd9763c6": {"__data__": {"id_": "92b53c16-5c51-487a-b148-415ccd9763c6", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4c700435-5428-4226-b7d0-c0e5b95199df", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "943418075f2f424ebc560777309814f07570cadc8f70fb5e4ae83c40e18e9d5d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7f080b2c-4d08-4d8b-8538-15b375c987e3", "node_type": "1", "metadata": {}, "hash": "ffe8598133515839511bd3c79d5020e7833a42da810b6be161a09c49dc2a0cd7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ";", "mimetype": "text/plain", "start_char_idx": 277, "end_char_idx": 278, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7f080b2c-4d08-4d8b-8538-15b375c987e3": {"__data__": {"id_": "7f080b2c-4d08-4d8b-8538-15b375c987e3", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "92b53c16-5c51-487a-b148-415ccd9763c6", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "3aa1384b774dfc0743241c8ec9436d518521aa3e3f0d4d1bc5a2c5fce9885107", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a1b50aea-4a01-4877-984c-4da7d26e4a1d", "node_type": "1", "metadata": {}, "hash": "7a37041832b89262ddfb4eee33448834486dd54bb2798c791dac4221efd2c27f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "}", "mimetype": "text/plain", "start_char_idx": 309, "end_char_idx": 310, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a1b50aea-4a01-4877-984c-4da7d26e4a1d": {"__data__": {"id_": "a1b50aea-4a01-4877-984c-4da7d26e4a1d", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7f080b2c-4d08-4d8b-8538-15b375c987e3", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "89eff6d76f9c40d2a695c59d065dc2944d88615df81b5c20e64f31da0d074094", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6d608c84-0e07-4919-b8d8-370e1824c271", "node_type": "1", "metadata": {}, "hash": "8a4d276f0273b229fe098e9063c83e7765f4ee71b7feb6e94f8cf68de6c1966f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ")", "mimetype": "text/plain", "start_char_idx": 629, "end_char_idx": 630, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6d608c84-0e07-4919-b8d8-370e1824c271": {"__data__": {"id_": "6d608c84-0e07-4919-b8d8-370e1824c271", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a1b50aea-4a01-4877-984c-4da7d26e4a1d", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "28c69f2cd1aee339b255311593ba74c6bd491ce5e7e21ba7985df94332d2b7a3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "008398bb-ae0c-4202-bf59-87b74e4dfa02", "node_type": "1", "metadata": {}, "hash": "89b14dd0f1c950ac60ee0dc1f8392854646c1f9f089911df99e441e4417d89dd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ";", "mimetype": "text/plain", "start_char_idx": 277, "end_char_idx": 278, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "008398bb-ae0c-4202-bf59-87b74e4dfa02": {"__data__": {"id_": "008398bb-ae0c-4202-bf59-87b74e4dfa02", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6d608c84-0e07-4919-b8d8-370e1824c271", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "3aa1384b774dfc0743241c8ec9436d518521aa3e3f0d4d1bc5a2c5fce9885107", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0f0a43d2-700c-424e-8952-897f37c7179f", "node_type": "1", "metadata": {}, "hash": "20484bb9bacd2faaef416c832aa64aa774b86de86f1eab3c855e55f5bfb53982", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if (selected && typeof selected.comment !== \"string\") {\n    console.log(\"DEBUG 418:\", typeof selected.comment, selected.comment);\n  }\n  if (relatedAction?.action?.context && typeof relatedAction.action.context !== \"string\") {\n    console.log(\"DEBUG 418:\", typeof relatedAction.action.context, relatedAction.action.context);\n  }\n  if (relatedAction?.action?.rationale && typeof relatedAction.action.rationale !== \"string\") {\n    console.log(\n      \"DEBUG 418:\",\n      typeof relatedAction.action.rationale,\n      relatedAction.action.rationale\n    );\n  }\n  if (relatedAction?.action?.diff && typeof relatedAction.action.diff !== \"string\") {\n    console.log(\"DEBUG 418:\", typeof relatedAction.action.diff, relatedAction.action.diff);\n  }\n  if (relatedAction?.history) {\n    for (const h of relatedAction.history) {\n      if (h.comment && typeof h.comment !== \"string\") {\n        console.log(\"DEBUG 418:\", typeof h.comment, h.comment);\n      }\n    }\n  }\n\n  return (\n    <div className=\"max-w-5xl mx-auto py-8\">\n      <h2", "mimetype": "text/plain", "start_char_idx": 6544, "end_char_idx": 7561, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0f0a43d2-700c-424e-8952-897f37c7179f": {"__data__": {"id_": "0f0a43d2-700c-424e-8952-897f37c7179f", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "008398bb-ae0c-4202-bf59-87b74e4dfa02", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "11b054681b83d5d0133a1508c35e3904da52be9b000ad33edf862c917d0ea12f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "94f840ee-9bf9-4aaa-ab73-17966992b8dc", "node_type": "1", "metadata": {}, "hash": "34aaed9521c9f33b74327fe4e3f68b2bc9adf4ac888a537fc197298f52d2054a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "className=\"font-bold text-xl mb-6\">\ud83d\udee1\ufe0f Audit Log & Operator Panel</h2>\n      <div className=\"flex gap-2 mb-4 items-end\">\n        <input\n          placeholder=\"\ud83d\udd0e Search user/type/path/comment/ID\"\n          className=\"border rounded px-2 py-1 w-60 text-sm\"\n          value={search}\n          onChange={e => setSearch(e.target.value)}\n        />\n        <input\n          placeholder=\"Filter user\"\n          className=\"border rounded px-2 py-1 text-xs\"\n          value={filter.user || \"\"}\n          onChange={e => setFilter(f => ({ ...f, user: e.target.value }))}\n        />\n        <input\n          placeholder=\"Filter type\"\n          className=\"border rounded px-2 py-1 text-xs\"\n          value={filter.type || \"\"}\n          onChange={e => setFilter(f => ({ ...f, type: e.target.value }))}\n        />\n        <select\n          className=\"border rounded px-2 py-1 text-xs\"\n          value={filter.status || \"\"}\n          onChange={e => setFilter(f => ({ ...f, status: e.target.value }))}\n        >\n          <option value=\"\">", "mimetype": "text/plain", "start_char_idx": 7562, "end_char_idx": 8583, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "94f840ee-9bf9-4aaa-ab73-17966992b8dc": {"__data__": {"id_": "94f840ee-9bf9-4aaa-ab73-17966992b8dc", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0f0a43d2-700c-424e-8952-897f37c7179f", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "47ca797bd21acfe72f5ddf012bf9f3dddfa4b0034eba99aac97814e95c279df1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9620dc96-080e-45bc-b782-889551766fc7", "node_type": "1", "metadata": {}, "hash": "c4ca2a611cca2e1b50f2083e0d3179fe5acde484281c09607de0f7626dfd4d12", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Status</option>\n          <option value=\"approved\">approved</option>\n          <option value=\"denied\">denied</option>\n          <option value=\"executed\">executed</option>\n          <option value=\"pending\">pending</option>\n        </select>\n        <Button onClick={() => fetchLog()} className=\"ml-2\">Refresh</Button>\n        <Button\n          variant=\"outline\"\n          disabled={exporting}\n          onClick={() => exportLog(\"json\")}\n        >\n          Export JSON\n        </Button>\n        <Button\n          variant=\"outline\"\n          disabled={exporting}\n          onClick={() => exportLog(\"csv\")}\n        >\n          Export CSV\n        </Button>\n      </div>\n      <div className=\"bg-gray-100 rounded-md p-2 max-h-[60vh] overflow-auto text-xs\">\n        {filtered.length === 0 && (", "mimetype": "text/plain", "start_char_idx": 8583, "end_char_idx": 9370, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9620dc96-080e-45bc-b782-889551766fc7": {"__data__": {"id_": "9620dc96-080e-45bc-b782-889551766fc7", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "94f840ee-9bf9-4aaa-ab73-17966992b8dc", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "f0491902d90245a7eec7ab9dabd807a9b2b598c46be37159e8be31c7d2c45983", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7d6fa417-b45b-4843-95b5-6b1930f3328c", "node_type": "1", "metadata": {}, "hash": "3e638586f486c5a819a98437955cc3a865a67398d18600a8c979aebd7ed62432", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<div className=\"text-muted-foreground text-center py-8\">\n            No log entries match the filters.\n          </div>\n        )}\n        <table className=\"w-full\">\n          <thead>\n            <tr className=\"font-semibold text-gray-700 bg-gray-200\">\n              <th className=\"px-2 py-1 text-left\">Time</th>\n              <th className=\"px-2 py-1 text-left\">Status</th>\n              <th className=\"px-2 py-1 text-left\">User</th>\n              <th className=\"px-2 py-1 text-left\">Type</th>\n              <th className=\"px-2 py-1 text-left\">Path</th>\n              <th className=\"px-2 py-1 text-left\">ID</th>\n              <th className=\"px-2 py-1 text-left\">Comment</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </table>\n      </div>\n      <div className=\"text-xs text-gray-400 mt-3\">\n        Tip: Click any row for full drilldown: context, rationale, diff, timeline, and", "mimetype": "text/plain", "start_char_idx": 9381, "end_char_idx": 10293, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7d6fa417-b45b-4843-95b5-6b1930f3328c": {"__data__": {"id_": "7d6fa417-b45b-4843-95b5-6b1930f3328c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9620dc96-080e-45bc-b782-889551766fc7", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "5a9224d3b23356c8534c1216fa2414c31818fb341e319d1b8ea6a7d190cb4914", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c999ba29-a8e3-4a61-8678-985ce3b03001", "node_type": "1", "metadata": {}, "hash": "5dad7525258874834fa13a34f33f7a1966a98a9e48840c7447c52ced1acbcf11", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "more.\n      </div>\n\n      {/* === Per-action Modal Drilldown === */}\n      {selected && (\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black/30 z-50\">\n          <div className=\"bg-white p-6 rounded shadow-lg w-full max-w-xl relative\">\n            <button className=\"absolute top-2 right-3 text-xl\" onClick={() => { setSelected(null); setRelatedAction(null); }}>&times;</button>\n            <h3 className=\"font-bold mb-2\">Action Detail (#{selected.id.slice(0, 8)})</h3>\n            <div className=\"mb-2 text-xs\">\n              <strong>Status:</strong>{\" \"}\n              <Badge variant={\n                selected.status === \"approved\" ? \"success\" :\n                selected.status === \"denied\" ? \"destructive\" : \"secondary\"\n              }>\n                {selected.status}\n              </Badge><br />\n              <strong>User:</strong> {selected.user}<br />\n              <strong>Type:</strong> {selected.type}<br />\n              <strong>Path:</strong> {selected.path}<br />\n              <strong>Comment", "mimetype": "text/plain", "start_char_idx": 10294, "end_char_idx": 11332, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c999ba29-a8e3-4a61-8678-985ce3b03001": {"__data__": {"id_": "c999ba29-a8e3-4a61-8678-985ce3b03001", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d6fa417-b45b-4843-95b5-6b1930f3328c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1ea3a5bf7e1520737609eaf8e0dd5d11dfdc25ec46f2d05d5c2a9022de53c94e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9258ee7c-763a-47ae-b51f-ae7cd106599c", "node_type": "1", "metadata": {}, "hash": "9d50c462dd9f90dd7b95be19e8f6da2969f2967af6a3cb7a595f5c2033997e84", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ":</strong>{\" \"}\n              {selected.comment", "mimetype": "text/plain", "start_char_idx": 11332, "end_char_idx": 11379, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9258ee7c-763a-47ae-b51f-ae7cd106599c": {"__data__": {"id_": "9258ee7c-763a-47ae-b51f-ae7cd106599c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c999ba29-a8e3-4a61-8678-985ce3b03001", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2dc6b081d7dd8bad7796f9b925963f7b801ad9447483134faaf721449f7e4f98", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8885b39-4df2-44c1-9ae8-6d5be87fe860", "node_type": "1", "metadata": {}, "hash": "50953df146a7ef410da4368d9534ebf90e25c823fb599a259740aca139a11e71", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "? (\n                <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n                  <SafeMarkdown>{selected.comment}</SafeMarkdown>\n                </div>\n              ) : \"\"}\n              <br />\n              <strong>Timestamp", "mimetype": "text/plain", "start_char_idx": 11380, "end_char_idx": 11630, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d8885b39-4df2-44c1-9ae8-6d5be87fe860": {"__data__": {"id_": "d8885b39-4df2-44c1-9ae8-6d5be87fe860", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9258ee7c-763a-47ae-b51f-ae7cd106599c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "6f278154a382a321214a702be3537358b5591ac952257851c7912a8aac25deec", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6cc5806f-fb2d-40e4-be17-e7f8ef35072f", "node_type": "1", "metadata": {}, "hash": "7cd6e2db85cf8fd7d7263568ec8996563b7bf64b4aa90f04c67ecbbd69537c19", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ":</strong> {selected.timestamp}\n            </div", "mimetype": "text/plain", "start_char_idx": 11630, "end_char_idx": 11679, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6cc5806f-fb2d-40e4-be17-e7f8ef35072f": {"__data__": {"id_": "6cc5806f-fb2d-40e4-be17-e7f8ef35072f", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d8885b39-4df2-44c1-9ae8-6d5be87fe860", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "ad1f02a2fd8a6efbfc3471fabaed9ce94bac26c2904ba7a8e06894ddbf8ea571", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "114d4ea0-e08f-4785-9dad-128d516216b0", "node_type": "1", "metadata": {}, "hash": "11244d9b731465de5387e4c8397ca12d02acf45202c7532eed05d89824a62dfe", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ">\n            {relatedAction?.action", "mimetype": "text/plain", "start_char_idx": 11679, "end_char_idx": 11715, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "114d4ea0-e08f-4785-9dad-128d516216b0": {"__data__": {"id_": "114d4ea0-e08f-4785-9dad-128d516216b0", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6cc5806f-fb2d-40e4-be17-e7f8ef35072f", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "68ec633abfacc059165752f6a3b1c09ae0210d60ec23dc261228b9816d1b5c99", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "421beaf8-c9b8-480d-9e94-f3d7c682386e", "node_type": "1", "metadata": {}, "hash": "365c95db0fa740a677389cf5411a9bef4bc614ede1ead883a6a918a97de392c3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "?.context", "mimetype": "text/plain", "start_char_idx": 2976, "end_char_idx": 2985, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "421beaf8-c9b8-480d-9e94-f3d7c682386e": {"__data__": {"id_": "421beaf8-c9b8-480d-9e94-f3d7c682386e", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "114d4ea0-e08f-4785-9dad-128d516216b0", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "9801bf907f82d396676996e59efb615ede811b8fc437c43e1ed3305227a18817", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d246792e-191e-45c5-a987-a233c4164bbc", "node_type": "1", "metadata": {}, "hash": "d7605d41fc809a3925f13cd44be80553ff06415eb2d1645bf12fbc3b8149c234", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "&& (\n              <details>\n                <summary className=\"cursor-pointer text-blue-700 mb-2\">View Agent Context</summary>\n                <div className=\"bg-gray-50 p-2 rounded text-xs max-h-40 overflow-auto whitespace-pre-wrap\">\n                  <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n                    <SafeMarkdown>{relatedAction.action.context}</SafeMarkdown>\n                  </div>\n                </div>\n              </details>\n            )}\n            {relatedAction?.action?.rationale && (\n              <div className=\"text-xs italic mb-2\">\n                <strong>Agent rationale:</strong>{\" \"}\n                <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n                  <SafeMarkdown>{relatedAction.action.rationale}</SafeMarkdown>\n                </div>\n              </div>\n            )}\n            {relatedAction?.action?.diff && (\n              <details>\n                <summary className=\"cursor-pointer text-blue-700 mb-2\">View Diff<", "mimetype": "text/plain", "start_char_idx": 11725, "end_char_idx": 12746, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d246792e-191e-45c5-a987-a233c4164bbc": {"__data__": {"id_": "d246792e-191e-45c5-a987-a233c4164bbc", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "421beaf8-c9b8-480d-9e94-f3d7c682386e", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "727c76d0381f297c5fa91c89b07e0c52bfc5df03686de88a2fc871f186cff58c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8f6d277e-610a-4d14-bb52-73d2bd96b35f", "node_type": "1", "metadata": {}, "hash": "166c0a2359bcbe0bdce5dbb466b767c77f11b17288bcd097b5f5fc4ea4935909", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "/summary>\n                <div className=\"bg-yellow-50 p-2 rounded text-xs max-h-40 overflow-auto whitespace-pre-wrap\">\n                  <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n                    <SafeMarkdown>{relatedAction.action.diff}</SafeMarkdown>\n                  </div>\n                </div>\n              </details>\n            )}\n            {relatedAction?.history && (\n              <div>\n                <h4 className=\"font-semibold mt-2 mb-1 text-sm\">Timeline</h4>\n                <ul className=\"bg-gray-100 p-2 rounded text-xs max-h-32 overflow-auto border\">\n                  {relatedAction.history.map((h, i) => (\n                    <li key={i}>\n                      <span className=\"font-mono\">{h.timestamp}</span> \u2022 <Badge>{h.status}</Badge>\n                      {h.user && <span className=\"ml-2 text-blue-700\">{h.user}</span>}\n                      {h.comment && (\n                        <span className=\"ml-2 italic\">\n                          <div className=", "mimetype": "text/plain", "start_char_idx": 12746, "end_char_idx": 13760, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8f6d277e-610a-4d14-bb52-73d2bd96b35f": {"__data__": {"id_": "8f6d277e-610a-4d14-bb52-73d2bd96b35f", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1c529c216dfeeefada3795e1ff963ec70d87f5805f2c73ae199e3c5127712eee", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d246792e-191e-45c5-a987-a233c4164bbc", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/AuditPanel/AuditPanel.tsx", "file_name": "AuditPanel.tsx", "file_size": 14146, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "547cee001b91682f788d717b06be85f4b3cf4e3766572387586f1253abe32882", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"prose prose-neutral dark:prose-invert max-w-none\">\n                            <SafeMarkdown>{h.comment}</SafeMarkdown>\n                          </div>\n                        </span>\n                      )}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 13760, "end_char_idx": 14135, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6e4113fb-74c0-4cdb-80d2-2994b6a7f8b8": {"__data__": {"id_": "6e4113fb-74c0-4cdb-80d2-2994b6a7f8b8", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/CodexEditor.tsx", "file_name": "CodexEditor.tsx", "file_size": 842, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "32dc3542-c4ef-4464-a837-d432484812e6", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/CodexEditor.tsx", "file_name": "CodexEditor.tsx", "file_size": 842, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "5f7928140e4409bc9ddea45d8606eeda34b0abfe6074f7c7a973eaca8e07831d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: src/components/Codex/CodexEditor.tsx\n// Purpose: Simple text/code editor for Codex agent\n// Updated: 2025-06-30\n\nimport { Dispatch, SetStateAction } from \"react\";\n\nexport interface Props {\n  code: string; // Source code being edited\n  setCode: Dispatch<SetStateAction<string>>; // Update function\n}\n\nexport default function CodexEditor({ code, setCode }: Props) {\n  return (\n    <div>\n      <label htmlFor=\"codex-editor\" className=\"block text-sm font-medium mb-1\">\n        Source Code\n      </label>\n      <textarea\n        id=\"codex-editor\"\n        value={code}\n        onChange={(e) => setCode(e.target.value)}\n        className=\"w-full h-48 p-2 border rounded font-mono resize-y\"\n        spellCheck={false}\n        placeholder=\"Paste or type your code here\u2026\"\n        aria-label=\"Code input for Codex\"\n      />\n    </div>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 839, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0c813d3f-191a-44a3-af38-82650f6be5e4": {"__data__": {"id_": "0c813d3f-191a-44a3-af38-82650f6be5e4", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/CodexPatchView.tsx", "file_name": "CodexPatchView.tsx", "file_size": 1321, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9b7d1f10-f7c2-4086-b1eb-1e56478ea6fc", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/CodexPatchView.tsx", "file_name": "CodexPatchView.tsx", "file_size": 1321, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "3e9832f1ccc51013bdb932ccf03c890de0a550886da7744b28d458f47d59dbad", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "07986cec-30fd-4fe8-8bc3-4f96decca041", "node_type": "1", "metadata": {}, "hash": "72570e13ce9be7ef445cfb975c68264de9b803887e19a77057030d54072e24b9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: frontend/src/components/Codex/CodexPatchView.tsx\n// Purpose: Displays the generated code patch/result from the Codex agent.\n//          All Markdown/code rendering MUST go through SafeMarkdown.\n// Updated: 2025-07-01\n\n\"use client\";\n\nimport SafeMarkdown from \"@/components/SafeMarkdown\";\n\ninterface Props {\n  patch: string;\n  loading?: boolean; // Optionally show loading state (prop-driven)\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 401, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "07986cec-30fd-4fe8-8bc3-4f96decca041": {"__data__": {"id_": "07986cec-30fd-4fe8-8bc3-4f96decca041", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/CodexPatchView.tsx", "file_name": "CodexPatchView.tsx", "file_size": 1321, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9b7d1f10-f7c2-4086-b1eb-1e56478ea6fc", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/CodexPatchView.tsx", "file_name": "CodexPatchView.tsx", "file_size": 1321, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "3e9832f1ccc51013bdb932ccf03c890de0a550886da7744b28d458f47d59dbad", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0c813d3f-191a-44a3-af38-82650f6be5e4", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/CodexPatchView.tsx", "file_name": "CodexPatchView.tsx", "file_size": 1321, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "4d2cfad17627fe0b80b47d5e413acccf132db7d9c843cacbe9aa92b9a11260af", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "export default function CodexPatchView({ patch, loading = false }: Props) {\n  if (typeof patch !== \"string\") {\n    console.log(\"DEBUG 418:\", typeof patch, patch);\n  }\n  return (\n    <div className=\"mt-4\">\n      <label htmlFor=\"codex-patch\" className=\"block text-sm font-medium mb-1\">\n        Generated Patch\n      </label>\n      <div\n        id=\"codex-patch\"\n        className=\"w-full max-h-[500px] overflow-auto bg-black text-green-400 p-4 rounded text-sm whitespace-pre-wrap\"\n        aria-busy={loading}\n      >\n        {/* DO NOT render markdown/code any other way\u2014SafeMarkdown only */}\n        {loading ? (\n          \"\u23f3 Codex is generating your patch...\"\n        ) : patch?.trim() ? (\n          <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n            <SafeMarkdown>{patch}</SafeMarkdown>\n          </div>\n        ) : (\n          \"No patch yet.\"\n        )}\n      </div>\n    </div>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 403, "end_char_idx": 1316, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0766a382-1f42-4011-a6a6-24bfc067633c": {"__data__": {"id_": "0766a382-1f42-4011-a6a6-24bfc067633c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/CodexPromptBar.tsx", "file_name": "CodexPromptBar.tsx", "file_size": 1423, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5cbb088d-9539-416f-a259-71f6b74e6514", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/CodexPromptBar.tsx", "file_name": "CodexPromptBar.tsx", "file_size": 1423, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "8a5fa4901979041be449400eb1b4a89ad44126d86233edf0a7890f9410ba8a26", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7532c07c-aa05-41e5-ae98-5207445cbfbb", "node_type": "1", "metadata": {}, "hash": "01d226881f5bbdf7f63317ff62f258133a1d7f47079228a8f42b383b40fc0b73", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: frontend/src/components/Codex/CodexPromptBar.tsx\n// Purpose: Prompt input bar for Codex code editing agent\n// Updated: 2025-06-30\n\n\"use client\";\n\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface Props {\n  prompt: string;                 // Prompt/instruction for the code agent\n  setPrompt: (val: string) => void; // Handler to update prompt in parent state\n  onSubmit: () => void;           // Handler called when user submits\n  loading?: boolean;              // Show loading state, disable input (prop-driven)\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 581, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7532c07c-aa05-41e5-ae98-5207445cbfbb": {"__data__": {"id_": "7532c07c-aa05-41e5-ae98-5207445cbfbb", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/CodexPromptBar.tsx", "file_name": "CodexPromptBar.tsx", "file_size": 1423, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5cbb088d-9539-416f-a259-71f6b74e6514", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/CodexPromptBar.tsx", "file_name": "CodexPromptBar.tsx", "file_size": 1423, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "8a5fa4901979041be449400eb1b4a89ad44126d86233edf0a7890f9410ba8a26", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0766a382-1f42-4011-a6a6-24bfc067633c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/CodexPromptBar.tsx", "file_name": "CodexPromptBar.tsx", "file_size": 1423, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "3558e6f8d3a11fd64e646a2d80ac7be8a47648f26582224e616bb29c28e54af6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "export default function CodexPromptBar({ prompt, setPrompt, onSubmit, loading = false }: Props) {\n  // Handle Enter key to submit (unless Shift is held for multi-line, if ever needed)\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\" && !e.shiftKey && prompt.trim() && !loading) {\n      e.preventDefault();\n      onSubmit();\n    }\n  };\n\n  return (\n    <div className=\"flex items-center gap-4\">\n      <Input\n        value={prompt}\n        onChange={(e) => setPrompt(e.target.value)}\n        onKeyDown={handleKeyDown}\n        placeholder=\"What should Codex do? (e.g., Add docstrings)\"\n        className=\"flex-1\"\n        disabled={loading}\n      />\n      <Button onClick={onSubmit} disabled={loading || !prompt.trim()}>\n        {loading ? \"Running...\" : \"Run\"}\n      </Button>\n    </div>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 583, "end_char_idx": 1422, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e7da7969-2961-4431-b742-d928fe8a047c": {"__data__": {"id_": "e7da7969-2961-4431-b742-d928fe8a047c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/index.ts", "file_name": "index.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 277, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3e0b2e9f-c510-43f2-8451-4b8d2530f4c1", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/index.ts", "file_name": "index.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 277, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "2bd3c21332b78f4e6ab5ce03f2ab892048c7d8e7cd9d7452f64fc7b70fcd2f92", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: frontend/src/components/Codex/index.ts\n// Purpose: Barrel exports for Codex components\n\nexport { default as CodexEditor } from \"./CodexEditor\";\nexport { default as CodexPromptBar } from \"./CodexPromptBar\";\nexport { default as CodexPatchView } from \"./CodexPatchView\";", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 276, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cef6f5c8-c707-460a-92f8-a2d4de7ef7f1": {"__data__": {"id_": "cef6f5c8-c707-460a-92f8-a2d4de7ef7f1", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/page.tsx", "file_name": "page.tsx", "file_size": 2108, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9da16c98-74fc-4c76-ba2f-b88c95fbfd9c", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/page.tsx", "file_name": "page.tsx", "file_size": 2108, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "2101e52e3e53216ef730df9e97b8304f6660a75e56b66a9eda5d1476c3f5c19e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6440f7fc-c47e-4acd-8908-60cd4504dc9c", "node_type": "1", "metadata": {}, "hash": "d9520c19d14a2cec34084a37dba5e7a888c932c2d25d8b02746c5717f53f8b4f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: frontend/src/components/Codex/CodexPage.tsx\n// Purpose: UI for Codex agent with code editor, prompt bar, and streaming patch view\n// Updated: 2025-06-30\n\n\"use client\";\n\nimport { CodexEditor, CodexPromptBar, CodexPatchView } from \"@/components/Codex\";\nimport { useState } from \"react\";\nimport { API_ROOT } from \"@/lib/api\";", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 331, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6440f7fc-c47e-4acd-8908-60cd4504dc9c": {"__data__": {"id_": "6440f7fc-c47e-4acd-8908-60cd4504dc9c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/page.tsx", "file_name": "page.tsx", "file_size": 2108, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9da16c98-74fc-4c76-ba2f-b88c95fbfd9c", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/page.tsx", "file_name": "page.tsx", "file_size": 2108, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "2101e52e3e53216ef730df9e97b8304f6660a75e56b66a9eda5d1476c3f5c19e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cef6f5c8-c707-460a-92f8-a2d4de7ef7f1", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/page.tsx", "file_name": "page.tsx", "file_size": 2108, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "a2c01d9cc339917f086e3267431cf31a4a3b9fbdeb1c9413a532ae0d9e5c225e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7308a31e-def6-4b4a-b251-78cb96aed1d3", "node_type": "1", "metadata": {}, "hash": "3ddb0e6ed20cc4543bb09e72f660c26396ad327cae93ffb526f80bcef19071e5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "export default", "mimetype": "text/plain", "start_char_idx": 333, "end_char_idx": 347, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7308a31e-def6-4b4a-b251-78cb96aed1d3": {"__data__": {"id_": "7308a31e-def6-4b4a-b251-78cb96aed1d3", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/page.tsx", "file_name": "page.tsx", "file_size": 2108, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9da16c98-74fc-4c76-ba2f-b88c95fbfd9c", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/page.tsx", "file_name": "page.tsx", "file_size": 2108, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "2101e52e3e53216ef730df9e97b8304f6660a75e56b66a9eda5d1476c3f5c19e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6440f7fc-c47e-4acd-8908-60cd4504dc9c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/page.tsx", "file_name": "page.tsx", "file_size": 2108, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "b8a11c9e17482216366d4c008a818969921bcf6e69d3373778d2be9f5d8aee45", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "83016ca6-7a38-40ca-a996-a0a233984b3c", "node_type": "1", "metadata": {}, "hash": "52da894bff09cac747b8dadb4e1c8a5379f88c64ce0eb728e3ee4e928f363c16", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "function CodexPage()", "mimetype": "text/plain", "start_char_idx": 348, "end_char_idx": 368, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "83016ca6-7a38-40ca-a996-a0a233984b3c": {"__data__": {"id_": "83016ca6-7a38-40ca-a996-a0a233984b3c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/page.tsx", "file_name": "page.tsx", "file_size": 2108, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9da16c98-74fc-4c76-ba2f-b88c95fbfd9c", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/page.tsx", "file_name": "page.tsx", "file_size": 2108, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "2101e52e3e53216ef730df9e97b8304f6660a75e56b66a9eda5d1476c3f5c19e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7308a31e-def6-4b4a-b251-78cb96aed1d3", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/page.tsx", "file_name": "page.tsx", "file_size": 2108, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "e9a8f5af4b763a5f2665941ef7ca0f4875ba70a44b99c7b0af6f38d051e06997", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a9f16877-09aa-441f-a999-64265d98b5c8", "node_type": "1", "metadata": {}, "hash": "d0953947b85643f3ec0444c6ce56abb6ce87be67fd23d29dc070f9df9d7d5310", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n  const [code, setCode] = useState(\"\");           // User's source code\n  const [prompt, setPrompt] = useState(\"\");       // Editing instruction (prompt)\n  const [streamingPatch, setStreamingPatch] = useState(\"\"); // Live code patch output\n  const [loading, setLoading] = useState(false);  // Loading state for UX\n\n  // Handler for submitting the edit prompt to the Codex agent", "mimetype": "text/plain", "start_char_idx": 369, "end_char_idx": 748, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a9f16877-09aa-441f-a999-64265d98b5c8": {"__data__": {"id_": "a9f16877-09aa-441f-a999-64265d98b5c8", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/page.tsx", "file_name": "page.tsx", "file_size": 2108, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9da16c98-74fc-4c76-ba2f-b88c95fbfd9c", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/page.tsx", "file_name": "page.tsx", "file_size": 2108, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "2101e52e3e53216ef730df9e97b8304f6660a75e56b66a9eda5d1476c3f5c19e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "83016ca6-7a38-40ca-a996-a0a233984b3c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/page.tsx", "file_name": "page.tsx", "file_size": 2108, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "8bb974cd1fee38990d2beaca69461ff1b8cf7ebe7c7583b6cba5cb19822481e9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b36e0529-69b5-4e04-87e1-9a4b8ce550eb", "node_type": "1", "metadata": {}, "hash": "f8009c3ba294cf229491899f35751d322437e6236c21d1d42c7513945890053c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const handleSubmit = async () => {\n    if (!prompt.trim() || !code.trim() || loading) return;\n\n    setStreamingPatch(\"\u23f3 Working...\");\n    setLoading(true);\n\n    try {\n      const res = await fetch(`${API_ROOT}/ask/codex_stream`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ question: prompt, context: code }),\n      });\n\n      const reader = res.body?.getReader();\n      const decoder = new TextDecoder();\n      let patch = \"\";\n\n      while (reader) {\n        const { value, done } = await reader.read();\n        if (done) break;\n        patch += decoder.decode(value, { stream: true });\n        setStreamingPatch(patch);\n      }\n    } catch {\n      setStreamingPatch(\"\u274c Error streaming patch from Codex agent.\");\n    } finally {\n      setLoading(false);\n    }\n  };", "mimetype": "text/plain", "start_char_idx": 751, "end_char_idx": 1585, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b36e0529-69b5-4e04-87e1-9a4b8ce550eb": {"__data__": {"id_": "b36e0529-69b5-4e04-87e1-9a4b8ce550eb", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/page.tsx", "file_name": "page.tsx", "file_size": 2108, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9da16c98-74fc-4c76-ba2f-b88c95fbfd9c", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/page.tsx", "file_name": "page.tsx", "file_size": 2108, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "2101e52e3e53216ef730df9e97b8304f6660a75e56b66a9eda5d1476c3f5c19e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a9f16877-09aa-441f-a999-64265d98b5c8", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Codex/page.tsx", "file_name": "page.tsx", "file_size": 2108, "creation_date": "2025-06-30", "last_modified_date": "2025-06-30", "tier": "code"}, "hash": "9a8bce4bde67a9b3f7137504005d02b832fc58347d0ebb07a38e64bf45d9342a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "return (\n    <div className=\"p-6 space-y-4\">\n      <h1 className=\"text-2xl font-bold\">\ud83e\udde0 Codex \u2014 Code Editing Agent</h1>\n      {/* Code input area */}\n      <CodexEditor code={code} setCode={setCode} />\n\n      {/* Prompt bar for edit instructions */}\n      <CodexPromptBar\n        prompt={prompt}\n        setPrompt={setPrompt}\n        onSubmit={handleSubmit}\n        loading={loading}\n      />\n\n      {/* Patch/result area */}\n      <CodexPatchView patch={streamingPatch} loading={loading} />\n    </div>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 1589, "end_char_idx": 2098, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b1215892-0edd-4101-a579-78327c549d6a": {"__data__": {"id_": "b1215892-0edd-4101-a579-78327c549d6a", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsSyncPanel.tsx", "file_name": "DocsSyncPanel.tsx", "file_size": 5158, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "294db636-4976-40c6-b004-c7e3e9b808bc", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsSyncPanel.tsx", "file_name": "DocsSyncPanel.tsx", "file_size": 5158, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "ae4ece897bd47e3e904d05bebc32f1928ba4ad5eb05dc3c2706f197eaea1f89e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b4ba60bd-723f-4cb8-a08c-c125558fb091", "node_type": "1", "metadata": {}, "hash": "3645bd07c64fd6ca39969b3ebddd63c6952b0d6da6c515ca3dbe4b2495ab1c6b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: components/DocsSyncPanel.tsx\n// Purpose: UI panel for syncing, refreshing, and reindexing knowledge base docs. \n//          All status and result messages are rendered with SafeMarkdown for rich, safe output.\n\n\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { API_ROOT } from \"@/lib/api\";\nimport SafeMarkdown from \"@/components/SafeMarkdown\";\nimport { toMDString } from \"@/lib/toMDString\";\n\nexport default function DocsSyncPanel() {\n  const [status, setStatus] = useState<string | null>(null);\n  const [files, setFiles] = useState<string[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  // New state for reindex button\n  const [reindexStatus, setReindexStatus] = useState<string | null>(null);\n  const [reindexLoading, setReindexLoading] = useState<boolean>(false);\n\n  /**\n   * Trigger a sync operation at the given endpoint and handle results.\n   * @param endpoint 'sync', 'refresh_kb', or 'full_sync'\n   */", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 994, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b4ba60bd-723f-4cb8-a08c-c125558fb091": {"__data__": {"id_": "b4ba60bd-723f-4cb8-a08c-c125558fb091", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsSyncPanel.tsx", "file_name": "DocsSyncPanel.tsx", "file_size": 5158, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "294db636-4976-40c6-b004-c7e3e9b808bc", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsSyncPanel.tsx", "file_name": "DocsSyncPanel.tsx", "file_size": 5158, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "ae4ece897bd47e3e904d05bebc32f1928ba4ad5eb05dc3c2706f197eaea1f89e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b1215892-0edd-4101-a579-78327c549d6a", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsSyncPanel.tsx", "file_name": "DocsSyncPanel.tsx", "file_size": 5158, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "8fdc10e078d42ce827d1c67cceb8e3e7cdcf0d0209a45a48e4023ab706160b4c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2c7beaa9-9a02-45ea-b218-41a47c261ff7", "node_type": "1", "metadata": {}, "hash": "2e4fe04a6a21a8799d9e2e22594f23373a1d7b5344a1adc16d9cb94f0418f6f5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const triggerSync = async (endpoint: string) => {\n    if (!API_ROOT) {\n      setStatus(toMDString(\"\u274c API URL not configured\"));\n      return;\n    }\n    setStatus(toMDString(\"\u23f3 Running...\"));\n    setFiles([]);\n    setLoading(true);\n    try {\n      const res = await fetch(`${API_ROOT}/docs/${endpoint}`, { method: \"POST\" });\n      if (!res.ok) {\n        throw new Error(`Request failed: ${res.status}`);\n      }\n      const data = await res.json();\n      if (Array.isArray(data.synced_docs)) {\n        setFiles(data.synced_docs);\n        setStatus(toMDString(`\u2705 Synced ${data.synced_docs.length} docs.`));\n      } else if (data.message) {\n        setStatus(toMDString(`\u2705 ${data.message}`));\n      } else {\n        setStatus(toMDString(\"\u2705 Operation completed.\"));\n      }\n    } catch (err) {\n      console.error(\"DocsSync error:\", err);\n      setStatus(toMDString(\"\u274c Failed to sync. See console for details.\"));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // --- NEW: Trigger a KB reindex (admin only) ---", "mimetype": "text/plain", "start_char_idx": 997, "end_char_idx": 2011, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2c7beaa9-9a02-45ea-b218-41a47c261ff7": {"__data__": {"id_": "2c7beaa9-9a02-45ea-b218-41a47c261ff7", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsSyncPanel.tsx", "file_name": "DocsSyncPanel.tsx", "file_size": 5158, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "294db636-4976-40c6-b004-c7e3e9b808bc", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsSyncPanel.tsx", "file_name": "DocsSyncPanel.tsx", "file_size": 5158, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "ae4ece897bd47e3e904d05bebc32f1928ba4ad5eb05dc3c2706f197eaea1f89e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b4ba60bd-723f-4cb8-a08c-c125558fb091", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsSyncPanel.tsx", "file_name": "DocsSyncPanel.tsx", "file_size": 5158, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "d22bab1a019d605af845ec766ba939e4d4c523c65363c7ef076123b33c28feee", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f4b04ba0-1298-4faf-af7c-ce3884352253", "node_type": "1", "metadata": {}, "hash": "92a4243e564a805cc60020b6de39c741da177d82ccd200e15e68d16354a40cc5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const triggerReindex = async () => {\n    if (!API_ROOT) {\n      setReindexStatus(toMDString(\"\u274c API URL not configured\"));\n      return;\n    }\n    setReindexStatus(toMDString(\"\u23f3 Reindexing...\"));\n    setReindexLoading(true);\n    try {\n      const res = await fetch(`${API_ROOT}/admin/trigger_reindex`, {\n        method: \"POST\",\n        headers: {\n          // If you use a static admin API key for local, include it here\n          // For production, secure this!\n          \"X-API-Key\": process.env.NEXT_PUBLIC_API_KEY || \"\",\n        },\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setReindexStatus(toMDString(`\u2705 ${data.message || \"Reindex complete.\"}`));\n      } else {\n        setReindexStatus(toMDString(`\u274c ${data.detail || \"Reindex failed.\"}`));\n      }\n    } catch (err) {\n      console.error(\"Reindex error:\", err);\n      setReindexStatus(toMDString(\"\u274c Failed to reindex. See console for details.\"));\n    } finally {\n      setReindexLoading(false);\n    }\n  };", "mimetype": "text/plain", "start_char_idx": 2014, "end_char_idx": 3007, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f4b04ba0-1298-4faf-af7c-ce3884352253": {"__data__": {"id_": "f4b04ba0-1298-4faf-af7c-ce3884352253", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsSyncPanel.tsx", "file_name": "DocsSyncPanel.tsx", "file_size": 5158, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "294db636-4976-40c6-b004-c7e3e9b808bc", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsSyncPanel.tsx", "file_name": "DocsSyncPanel.tsx", "file_size": 5158, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "ae4ece897bd47e3e904d05bebc32f1928ba4ad5eb05dc3c2706f197eaea1f89e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c7beaa9-9a02-45ea-b218-41a47c261ff7", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsSyncPanel.tsx", "file_name": "DocsSyncPanel.tsx", "file_size": 5158, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "264e7c27a7eec4a049fc0ff4c95d8510b923f33337b82f1483f1c983a26b2903", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1da29885-8e5a-481c-a1a6-5062c1310ee2", "node_type": "1", "metadata": {}, "hash": "9db6adbf1a2cf65bc29ab25a9cce6b6f32ba247370854c1dd783c33f24aa27f5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if (typeof status !== \"string\") {\n    console.log(\"DEBUG 418:\", typeof status, status);\n  }\n  if (typeof reindexStatus !== \"string\") {\n    console.log(\"DEBUG 418:\", typeof reindexStatus, reindexStatus);\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <h2 className=\"text-lg font-semibold\">\ud83e\udde0 Sync & Refresh Docs</h2>\n      <div className=\"flex flex-wrap gap-2\">\n        <Button onClick={() => triggerSync(\"sync\")} disabled={loading}>\n          {loading ? \"\u23f3 Syncing...\" : \"\ud83d\udd04 Sync Google Docs\"}\n        </Button>\n        <Button onClick={() => triggerSync(\"refresh_kb\")} disabled={loading}>\n          {loading ? \"\u23f3 Refreshing...\" : \"\ud83e\udde0 Refresh KB\"}\n        </Button>\n        <Button onClick={() => triggerSync(\"full_sync\")} disabled={loading}>\n          {loading ? \"\u23f3 Working...\" : \"\ud83d\ude80 Full Sync\"}\n        </Button>\n      </div>\n\n      {/* Status messages rendered as markdown */}\n      {status && (\n        <div className=\"mt-2 text-sm text-muted-foreground\">\n          <div className=", "mimetype": "text/plain", "start_char_idx": 3011, "end_char_idx": 3999, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1da29885-8e5a-481c-a1a6-5062c1310ee2": {"__data__": {"id_": "1da29885-8e5a-481c-a1a6-5062c1310ee2", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsSyncPanel.tsx", "file_name": "DocsSyncPanel.tsx", "file_size": 5158, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "294db636-4976-40c6-b004-c7e3e9b808bc", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsSyncPanel.tsx", "file_name": "DocsSyncPanel.tsx", "file_size": 5158, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "ae4ece897bd47e3e904d05bebc32f1928ba4ad5eb05dc3c2706f197eaea1f89e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f4b04ba0-1298-4faf-af7c-ce3884352253", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsSyncPanel.tsx", "file_name": "DocsSyncPanel.tsx", "file_size": 5158, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "45777714cfd2096c744b5a6017cbd81de10586f64c76d7fa2368ef8a3c031640", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5c5a1ef6-825d-47ae-8a0b-8bf732f97c59", "node_type": "1", "metadata": {}, "hash": "199a17106be96348f88e245e5795be944d414426ea85b8451417d6b6b961ad42", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"prose prose-neutral dark:prose-invert max-w-none\">\n            <SafeMarkdown>{status}</SafeMarkdown>\n          </div>\n        </div>\n      )}\n\n      {files.length > 0 && (\n        <ul className=\"mt-2 list-disc list-inside\">\n          {files.map((f) => (\n            <li key={f} className=\"text-sm\">{f}</li>\n          ))}\n        </ul>\n      )}\n\n      {/* Divider */}\n      <hr className=\"my-4\" />\n\n      {/* Reindex Button */}\n      <div>\n        <h3 className=\"text-base font-medium mb-2\">Admin: Reindex KB</h3>\n        <Button\n          onClick={triggerReindex}\n          disabled={reindexLoading}\n          variant=\"destructive\"\n          className=\"mb-2\"\n        >\n          {reindexLoading ? \"\u23f3 Reindexing...\" : \"\ud83d\udee0\ufe0f Reindex Now\"}\n        </Button>\n        {reindexStatus && (\n          <div className={`mt-1 text-sm ${reindexStatus.startsWith(\"\u2705\") ? \"text-green-600\" : \"text-red-500\"}`}>\n            <div className=", "mimetype": "text/plain", "start_char_idx": 3999, "end_char_idx": 4920, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5c5a1ef6-825d-47ae-8a0b-8bf732f97c59": {"__data__": {"id_": "5c5a1ef6-825d-47ae-8a0b-8bf732f97c59", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsSyncPanel.tsx", "file_name": "DocsSyncPanel.tsx", "file_size": 5158, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "294db636-4976-40c6-b004-c7e3e9b808bc", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsSyncPanel.tsx", "file_name": "DocsSyncPanel.tsx", "file_size": 5158, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "ae4ece897bd47e3e904d05bebc32f1928ba4ad5eb05dc3c2706f197eaea1f89e", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1da29885-8e5a-481c-a1a6-5062c1310ee2", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsSyncPanel.tsx", "file_name": "DocsSyncPanel.tsx", "file_size": 5158, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "86ac10f541d3b2e1bf0fc6e559dd9cfd68fe4952fd45b14693f2923f557763d5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"prose prose-neutral dark:prose-invert max-w-none\">\n              <SafeMarkdown>{reindexStatus}</SafeMarkdown>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 4920, "end_char_idx": 5108, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bab675dd-284b-416f-8779-5d8c62e4b544": {"__data__": {"id_": "bab675dd-284b-416f-8779-5d8c62e4b544", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b748bfc125af0f24d201d4074b6b9551b1e33279a318625b79770633d34cb019", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "54fad1d4-8a27-4d1e-af6b-85200862e921", "node_type": "1", "metadata": {}, "hash": "61d1b17397a109008172fee3f40442c6a21db7eebd77faca4edc5ca3800df517", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: frontend/src/components/DocsViewer.tsx\n// Purpose: Browse, manage, and debug semantic context docs with tier-aware metadata.\n//          Renders all doc/snippet/context output via SafeMarkdown for safety/uniformity.\n\n\"use client\";\n\nimport { API_ROOT } from \"@/lib/api\";\nimport { useEffect, useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport SafeMarkdown from \"@/components/SafeMarkdown\";\n\n// --- Types for KB docs and semantic search ---\ntype KBMeta = {\n  path: string;\n  doc_id?: string;\n  tier?: string;\n  source?: string;\n  last_modified?: string;\n};\n\ntype KBHit = {\n  file?: string;\n  snippet: string;\n  score?: number;\n  type?: string;\n  line?: number;\n};\n\nconst apiUrl = API_ROOT || \"\";\n\n// --- Main DocsViewer Component ---\nexport default function DocsViewer() {\n  const [tab, setTab] = useState<\"docs\" | \"search\" | \"context\">(\"docs\");\n  const [docs, setDocs] = useState<KBMeta[]>([]);\n  const [activeDoc, setActiveDoc] = useState<string | null>(null);", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 998, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "54fad1d4-8a27-4d1e-af6b-85200862e921": {"__data__": {"id_": "54fad1d4-8a27-4d1e-af6b-85200862e921", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b748bfc125af0f24d201d4074b6b9551b1e33279a318625b79770633d34cb019", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bab675dd-284b-416f-8779-5d8c62e4b544", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "477b327a56bc64477c755bc116eab38ca3dae43d9efbf04b7e0257775103dddb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2f975ff3-878e-48d7-a1af-a32d1bff0600", "node_type": "1", "metadata": {}, "hash": "d82644ae4ce8306bcc5f5240ece0fce1deda11993943f18f56f052795fd37c40", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const [content, setContent] = useState<string>(\"\");\n\n  const [search, setSearch] = useState(\"\");\n  const [hits, setHits] = useState<KBHit[]>([]);\n  const [selectedHit, setSelectedHit] = useState<number | null>(null);\n  const [searchLoading, setSearchLoading] = useState(false);\n\n  const [ctxQuestion, setCtxQuestion] = useState(\"\");\n  const [ctxLoading, setCtxLoading] = useState(false);\n  const [ctxResult, setCtxResult] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (tab === \"docs\") loadDocs();\n  }, [tab]);\n\n  useEffect(() => {\n    if (activeDoc) loadContent(activeDoc);\n    else setContent(\"\");\n  }, [activeDoc]);\n\n  async function loadDocs() {\n    try {\n      const res = await fetch(`${apiUrl}/docs/list`);\n      const data = await res.json();\n      setDocs(data.files || []);\n    } catch {\n      setDocs([]);\n    }\n  }", "mimetype": "text/plain", "start_char_idx": 1001, "end_char_idx": 1832, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2f975ff3-878e-48d7-a1af-a32d1bff0600": {"__data__": {"id_": "2f975ff3-878e-48d7-a1af-a32d1bff0600", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b748bfc125af0f24d201d4074b6b9551b1e33279a318625b79770633d34cb019", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "54fad1d4-8a27-4d1e-af6b-85200862e921", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "9ae27c9a95f228480db519aaa343033a241fc5cb39b3dd9ee1998dddd9f1bb46", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f68f9163-1117-4791-9bca-af7449fa78f9", "node_type": "1", "metadata": {}, "hash": "d143ad11b56398e2660a2d79578c65198128d8abe4f99dbca41bcf1d6500e432", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async function loadContent(path: string) {\n    try {\n      const res = await fetch(`${apiUrl}/docs/view?path=${encodeURIComponent(path)}`);\n      const data = await res.json();\n      setContent(data.content || \"\");\n    } catch {\n      setContent(\"Failed to load doc.\");\n    }\n  }\n\n  async function doSearch(e?: React.FormEvent) {\n    if (e) e.preventDefault();\n    setSearchLoading(true);\n    setHits([]);\n    setSelectedHit(null);\n    try {\n      const res = await fetch(`${apiUrl}/kb/search?query=${encodeURIComponent(search)}`);\n      const data = await res.json();\n      setHits(data.results || []);\n    } catch {\n      setHits([]);\n    }\n    setSearchLoading(false);\n  }", "mimetype": "text/plain", "start_char_idx": 1836, "end_char_idx": 2511, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f68f9163-1117-4791-9bca-af7449fa78f9": {"__data__": {"id_": "f68f9163-1117-4791-9bca-af7449fa78f9", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b748bfc125af0f24d201d4074b6b9551b1e33279a318625b79770633d34cb019", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2f975ff3-878e-48d7-a1af-a32d1bff0600", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "4c8d8dbd8f56b9c753046ae7af29b14c45906b0804c06ee0eef212850b153922", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b86af43f-cd2b-47e1-ba59-3e62bc502af7", "node_type": "1", "metadata": {}, "hash": "7ceb9ad00bf1f757c85b36042777b14ca16b92ccad0cc0322e6a91f4c2d5c82a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async function fetchContextForPrompt(e?: React.FormEvent) {\n    if (e) e.preventDefault();\n    if (!ctxQuestion) return;\n    setCtxLoading(true);\n    setCtxResult(\"\");\n    try {\n      const res = await fetch(`${apiUrl}/ask?question=${encodeURIComponent(ctxQuestion)}&debug=true`);\n      const data = await res.json();\n      setCtxResult(data.context || \"No context returned.\");\n    } catch {\n      setCtxResult(\"Failed to fetch context window.\");\n    }\n    setCtxLoading(false);\n  }\n\n  if (typeof content !== \"string\") {\n    console.log(\"DEBUG 418:\", typeof content, content);\n  }\n  for (const hit of hits) {\n    if (typeof hit.snippet !== \"string\") {\n      console.log(\"DEBUG 418:\", typeof hit.snippet, hit.snippet);\n    }\n  }\n  if (ctxResult && typeof ctxResult !== \"string\") {\n    console.log(\"DEBUG 418:\", typeof ctxResult, ctxResult);\n  }\n\n  return (\n    <div className=\"max-w-5xl mx-auto py-6\">\n      <div className=\"flex gap-4 mb-4\">\n        <Button variant={tab === \"docs\" ? \"default\" : \"outline\"} onClick={() =>", "mimetype": "text/plain", "start_char_idx": 2515, "end_char_idx": 3535, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b86af43f-cd2b-47e1-ba59-3e62bc502af7": {"__data__": {"id_": "b86af43f-cd2b-47e1-ba59-3e62bc502af7", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b748bfc125af0f24d201d4074b6b9551b1e33279a318625b79770633d34cb019", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f68f9163-1117-4791-9bca-af7449fa78f9", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "8a1c1f952e31d71717855318d8b854c2497d9ae4a363d691597e3648de8646a7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9bd3f33b-2f5e-4132-89e2-bbee398af8a2", "node_type": "1", "metadata": {}, "hash": "276ef3643af72932136edea0520efc8587a53aa860d6aced7aaeb18f57aceb37", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "setTab(\"docs\")}>\ud83d\udcdd Docs</Button>\n        <Button variant={tab === \"search\" ? \"default\" : \"outline\"} onClick={() => setTab(\"search\")}>\ud83d\udd0d Semantic Search</Button>\n        <Button variant={tab === \"context\" ? \"default\" : \"outline\"} onClick={() => setTab(\"context\")}>\ud83e\udde0 Agent Context</Button>\n      </div>\n\n      {tab === \"docs\" && (\n        <div className=\"grid grid-cols-1 md:grid-cols-6 gap-6\">\n          <div className=\"space-y-4 col-span-1 md:col-span-1\">\n            <div>\n              <div className=", "mimetype": "text/plain", "start_char_idx": 3536, "end_char_idx": 4037, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9bd3f33b-2f5e-4132-89e2-bbee398af8a2": {"__data__": {"id_": "9bd3f33b-2f5e-4132-89e2-bbee398af8a2", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b748bfc125af0f24d201d4074b6b9551b1e33279a318625b79770633d34cb019", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b86af43f-cd2b-47e1-ba59-3e62bc502af7", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "35d3e9b9d4467102719b6262037dee2c1373e2ed483c816f06d25a2f16c5dac8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f4a3255e-60ae-453c-a8de-68a5dec07b04", "node_type": "1", "metadata": {}, "hash": "7e1675b6565307fb1feae635f987815b979e1045ed419bbd27917bda23bf02e2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"font-semibold mb-2\">Knowledge Base Files</div>\n              <ul className=\"space-y-1 text-xs max-h-80 overflow-y-auto\">\n                {docs.map((doc) => (\n                  <li key={doc.path}>\n                    <button\n                      className={`w-full text-left py-1 px-2 rounded hover:bg-accent/40 ${activeDoc === doc.path ? \"bg-accent/30 font-bold\" : \"\"}`}\n                      onClick={() => setActiveDoc(doc.path)}\n                    >\n                      {doc.path}\n                      {doc.tier && <span className=\"ml-2 text-emerald-600 font-semibold\">[{doc.tier}]</span>}\n                      {doc.source && <span className=\"ml-1 text-xs text-gray-400\">({doc.source})</span>}\n                    </button>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          <div className=\"col-span-5\">\n            <h2 className=\"font-semibold mb-2\">{activeDoc || \"Select a document\"}</h2>\n            <div className=", "mimetype": "text/plain", "start_char_idx": 4037, "end_char_idx": 5024, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f4a3255e-60ae-453c-a8de-68a5dec07b04": {"__data__": {"id_": "f4a3255e-60ae-453c-a8de-68a5dec07b04", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b748bfc125af0f24d201d4074b6b9551b1e33279a318625b79770633d34cb019", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9bd3f33b-2f5e-4132-89e2-bbee398af8a2", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "6537527707da466bed0f695d2436b92174cf6d0f2f1cfb35b90ac9b2d89c1f57", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "96c03b75-63f0-4db3-9393-a788dc9ecf0b", "node_type": "1", "metadata": {}, "hash": "a6e4ce3719a3678009b9942fc6ccd5f97733d6ec3e6bd7b5b58a507d3b9963b1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"h-[400px] overflow-auto border rounded-md p-4 whitespace-pre-wrap text-sm bg-background\">\n              {content ? (\n                <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n                  <SafeMarkdown>{content}</SafeMarkdown>\n                </div>\n              ) : (\n                \"Select a document to view its content.\"\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {tab === \"search\" && (\n        <div className=\"grid grid-cols-1 md:grid-cols-6 gap-6\">\n          <div className=\"space-y-4 col-span-1\">\n            <form className=\"flex gap-2 mb-2\" onSubmit={doSearch}>\n              <input\n                className=\"border px-2 py-1 rounded w-full\"\n                placeholder=\"Search docs/knowledge base\u2026\"\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button type=\"submit\" size=\"sm\" disabled={searchLoading}>\n                {searchLoading ? \"\u2026\" :", "mimetype": "text/plain", "start_char_idx": 5024, "end_char_idx": 6026, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "96c03b75-63f0-4db3-9393-a788dc9ecf0b": {"__data__": {"id_": "96c03b75-63f0-4db3-9393-a788dc9ecf0b", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b748bfc125af0f24d201d4074b6b9551b1e33279a318625b79770633d34cb019", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f4a3255e-60ae-453c-a8de-68a5dec07b04", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "e47279d0ce82dd70a8975823c1d640ac15bef749e0557fec50cf4845afffd347", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f65bad68-7c4e-4641-aa42-ee3b252c22fe", "node_type": "1", "metadata": {}, "hash": "385c66ff34ee8f9d8e3034c585f790d616c3a7088af11a51f64689321e1e2d0c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"Search\"}\n              </Button>\n            </form>\n            <ul className=\"space-y-1 text-xs max-h-72 overflow-y-auto\">\n              {hits.map((hit, i) => (\n                <li key={i}>\n                  <button\n                    className={`w-full text-left py-1 px-2 rounded hover:bg-accent/30 ${selectedHit === i ? \"bg-accent/40 font-bold\" : \"\"}`}\n                    onClick={() => setSelectedHit(i)}\n                  >\n                    {hit.file || \"Semantic Snippet\"}\n                  </button>\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"col-span-5\">\n            {selectedHit !== null && hits[selectedHit] ? (", "mimetype": "text/plain", "start_char_idx": 6027, "end_char_idx": 6714, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f65bad68-7c4e-4641-aa42-ee3b252c22fe": {"__data__": {"id_": "f65bad68-7c4e-4641-aa42-ee3b252c22fe", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b748bfc125af0f24d201d4074b6b9551b1e33279a318625b79770633d34cb019", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96c03b75-63f0-4db3-9393-a788dc9ecf0b", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1b88321eaf9da00be6487a8890b296424f63b1a71829d4273d122f3a94d33fab", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9607002d-bd0c-4945-948a-e6d2f1e921ad", "node_type": "1", "metadata": {}, "hash": "6049e27c00085d0e64be69fb4350afedd9179be72e8a0028fcdf16cde83f19e0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<div>\n                <div className=\"font-bold mb-2\">{hits[selectedHit].file || \"Semantic Snippet\"}</div>\n                <div className=\"bg-gray-100 p-3 rounded max-h-[70vh] overflow-y-auto whitespace-pre-wrap text-xs\">\n                  <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n                    <SafeMarkdown>{hits[selectedHit].snippet}</SafeMarkdown>\n                  </div>\n                </div>\n                <div className=\"text-xs text-gray-500 mt-2\">\n                  Score: {hits[selectedHit].score?.toFixed(2) || \"N/A\"} | Type: {hits[selectedHit].type || \"?\"}\n                </div>\n              </div>\n            ) : (\n              <div className=\"text-gray-500 text-center pt-10\">\n                {searchLoading ? \"Searching\u2026\" : \"Select a semantic hit to preview context.\"}\n              </div>\n            )}\n          </div>\n        </div>\n      )}", "mimetype": "text/plain", "start_char_idx": 6729, "end_char_idx": 7629, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9607002d-bd0c-4945-948a-e6d2f1e921ad": {"__data__": {"id_": "9607002d-bd0c-4945-948a-e6d2f1e921ad", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b748bfc125af0f24d201d4074b6b9551b1e33279a318625b79770633d34cb019", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f65bad68-7c4e-4641-aa42-ee3b252c22fe", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "3c090ba6cfd23d31946620b56e433320ede2a36a6976787752ee29aa997a17b5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c81149fa-eb22-4a82-858e-41814ce9502b", "node_type": "1", "metadata": {}, "hash": "bf0b6a81eaf84b50084447ba603c43ca093ac0ebd6cc1a7ab3837e985f4d95f5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{", "mimetype": "text/plain", "start_char_idx": 248, "end_char_idx": 249, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c81149fa-eb22-4a82-858e-41814ce9502b": {"__data__": {"id_": "c81149fa-eb22-4a82-858e-41814ce9502b", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b748bfc125af0f24d201d4074b6b9551b1e33279a318625b79770633d34cb019", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9607002d-bd0c-4945-948a-e6d2f1e921ad", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "6edf38453faa98a08e42c6bbcbb85c5694e2abf50dbbf1f3661c824440e6aabc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "cf4a3f70-f807-4146-9e3f-374244016a55", "node_type": "1", "metadata": {}, "hash": "8833a1ea35b11588c3abbfda7757c8f014d2cb2ba7ccbffe514d8d1bc3ebaa78", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "tab ===", "mimetype": "text/plain", "start_char_idx": 1476, "end_char_idx": 1483, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "cf4a3f70-f807-4146-9e3f-374244016a55": {"__data__": {"id_": "cf4a3f70-f807-4146-9e3f-374244016a55", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b748bfc125af0f24d201d4074b6b9551b1e33279a318625b79770633d34cb019", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c81149fa-eb22-4a82-858e-41814ce9502b", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "803c64916a05d177e9c9482f07040e031b1a2e096d79cd374430427ec7c24b15", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "521df911-21ec-48e2-afdb-0ed2926d3067", "node_type": "1", "metadata": {}, "hash": "07f514285731d590df70036ee20a228e3acbbe05fd89ad7efa3daa4db3c1cf43", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"context\" &&", "mimetype": "text/plain", "start_char_idx": 7646, "end_char_idx": 7658, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "521df911-21ec-48e2-afdb-0ed2926d3067": {"__data__": {"id_": "521df911-21ec-48e2-afdb-0ed2926d3067", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b748bfc125af0f24d201d4074b6b9551b1e33279a318625b79770633d34cb019", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "cf4a3f70-f807-4146-9e3f-374244016a55", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "d09ec610644ab970e246a2f2bd064052f5db501756b4fe27e6d8e86a9a3636da", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "83ec35a1-e003-4b23-9c2f-475357ef55e9", "node_type": "1", "metadata": {}, "hash": "7a37041832b89262ddfb4eee33448834486dd54bb2798c791dac4221efd2c27f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "(\n        <div className=\"max-w-2xl mx-auto mt-8\">\n          <form className=\"flex gap-2 mb-4\" onSubmit={fetchContextForPrompt}>\n            <input\n              className=\"border px-2 py-1 rounded w-full\"\n              placeholder=\"Type a user/agent prompt\u2026\"\n              value={ctxQuestion}\n              onChange={(e) => setCtxQuestion(e.target.value)}\n            />\n            <Button type=\"submit\" disabled={ctxLoading}>\n              {ctxLoading ? \"\u2026\" : \"Show Context\"}\n            </Button>\n          </form>\n          <div className=\"h-[400px] overflow-auto border rounded-md p-4 whitespace-pre-wrap text-xs bg-gray-50\">\n            {ctxLoading\n              ? \"Fetching context\u2026\"\n              : ctxResult\n              ? (\n                <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n                  <SafeMarkdown>{ctxResult}</SafeMarkdown>\n                </div>\n              )\n              : \"Enter a prompt to see what context the agent would use.\"}\n          </div>\n        </div>", "mimetype": "text/plain", "start_char_idx": 7659, "end_char_idx": 8682, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "83ec35a1-e003-4b23-9c2f-475357ef55e9": {"__data__": {"id_": "83ec35a1-e003-4b23-9c2f-475357ef55e9", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b748bfc125af0f24d201d4074b6b9551b1e33279a318625b79770633d34cb019", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "521df911-21ec-48e2-afdb-0ed2926d3067", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "a8be1003b9ca5b3918a8f95221718c53e04021d0d7086f4e1d86aec400efee45", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2e7650f2-061d-45e4-9a30-1467210b1882", "node_type": "1", "metadata": {}, "hash": "ffe8598133515839511bd3c79d5020e7833a42da810b6be161a09c49dc2a0cd7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ")", "mimetype": "text/plain", "start_char_idx": 805, "end_char_idx": 806, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2e7650f2-061d-45e4-9a30-1467210b1882": {"__data__": {"id_": "2e7650f2-061d-45e4-9a30-1467210b1882", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b748bfc125af0f24d201d4074b6b9551b1e33279a318625b79770633d34cb019", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "83ec35a1-e003-4b23-9c2f-475357ef55e9", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "fa6b992150d16a82d702f9bb52c769c667c1b97112b9eeabdb5ab0bd4470e21d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "97a40117-e721-414f-bbff-f2d958cb40fa", "node_type": "1", "metadata": {}, "hash": "6519458b91a7319ad0cef627a4f992d775ed13bd5e34c5a6a17bc35b5002201b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "}", "mimetype": "text/plain", "start_char_idx": 259, "end_char_idx": 260, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "97a40117-e721-414f-bbff-f2d958cb40fa": {"__data__": {"id_": "97a40117-e721-414f-bbff-f2d958cb40fa", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "b748bfc125af0f24d201d4074b6b9551b1e33279a318625b79770633d34cb019", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2e7650f2-061d-45e4-9a30-1467210b1882", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/DocsViewer/DocsViewer.tsx", "file_name": "DocsViewer.tsx", "file_size": 8731, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "37a047d375e3d43651883eb1bb7f3a01b3a8a74af640db280afb3c7fc6976d5f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "</div>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 8696, "end_char_idx": 8709, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8410c2de-8135-4dff-b3c3-87abf1c92cff": {"__data__": {"id_": "8410c2de-8135-4dff-b3c3-87abf1c92cff", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/GmailOps/GmailOpsPanel.tsx", "file_name": "GmailOpsPanel.tsx", "file_size": 3509, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "adfa85cf-1ad4-4246-a4cc-ca6b29ba7be4", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/GmailOps/GmailOpsPanel.tsx", "file_name": "GmailOpsPanel.tsx", "file_size": 3509, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "76626b4934976cbcb2466568052486193b8da8fefb910a3a499857b1f05c77a8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f9a8caa4-5f82-4bb1-ad55-e16ce2db02dc", "node_type": "1", "metadata": {}, "hash": "468d8c10f5e56b4d2f82af7a7b32d0699fbbf8d79832f0dfe8b60215a0e635a7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: components/GmailOps/GmailOpsPanel.tsx\n// Purpose: Panel to send and view emails, now with SafeMarkdown rendering for messages and snippets.\n\n\"use client\";\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { API_ROOT } from \"@/lib/api\";\nimport SafeMarkdown from \"@/components/SafeMarkdown\";\nimport { toMDString } from \"@/lib/toMDString\";\n\n// Explicitly type the Email shape\ntype Email = {\n  from: string;\n  subject: string;\n  date: string;\n  snippet: string;\n};\n\nexport default function GmailOpsPanel() {\n  const [to, setTo] = useState(\"\");\n  const [subject, setSubject] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [msg, setMsg] = useState<string | null>(null);\n  const [emails, setEmails] = useState<Email[]>([]);", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 782, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f9a8caa4-5f82-4bb1-ad55-e16ce2db02dc": {"__data__": {"id_": "f9a8caa4-5f82-4bb1-ad55-e16ce2db02dc", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/GmailOps/GmailOpsPanel.tsx", "file_name": "GmailOpsPanel.tsx", "file_size": 3509, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "adfa85cf-1ad4-4246-a4cc-ca6b29ba7be4", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/GmailOps/GmailOpsPanel.tsx", "file_name": "GmailOpsPanel.tsx", "file_size": 3509, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "76626b4934976cbcb2466568052486193b8da8fefb910a3a499857b1f05c77a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8410c2de-8135-4dff-b3c3-87abf1c92cff", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/GmailOps/GmailOpsPanel.tsx", "file_name": "GmailOpsPanel.tsx", "file_size": 3509, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "8319e1d4715d8db321d82bcbb6727ef85e862b4f5db4fe184033100496a8a975", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "393cc687-ce53-4f3a-86b2-e5a3aea7984c", "node_type": "1", "metadata": {}, "hash": "d57d1b9273e4e0a9fedebab5ae5eb85cd2d65395e788ea9ab0fdbc273f2952f6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async function send() {\n    const res = await fetch(`${API_ROOT}/control/send_email`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\", \"X-API-Key\": process.env.NEXT_PUBLIC_API_KEY || \"\" },\n      body: JSON.stringify({ to_email: to, subject, body })\n    });\n    const data = await res.json();\n    setMsg(\n      toMDString(\n        data.status === \"sent\" ? \"Email sent!\" : `Failed: ${data.detail}`\n      )\n    );\n  }\n\n  async function list() {\n    const res = await fetch(`${API_ROOT}/control/list_email`, {\n      headers: { \"X-API-Key\": process.env.NEXT_PUBLIC_API_KEY || \"\" }\n    });\n    const data = await res.json();\n    const mapped = Array.isArray(data.emails)\n      ? (data.emails as Email[]).map((em) => ({\n          ...em,\n          snippet: toMDString(em.snippet),\n        }))\n      : [];\n    setEmails(mapped);\n  }\n\n  if (msg && typeof msg !== \"string\") {\n    console.log(\"DEBUG 418:\", typeof msg, msg);\n  }", "mimetype": "text/plain", "start_char_idx": 786, "end_char_idx": 1730, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "393cc687-ce53-4f3a-86b2-e5a3aea7984c": {"__data__": {"id_": "393cc687-ce53-4f3a-86b2-e5a3aea7984c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/GmailOps/GmailOpsPanel.tsx", "file_name": "GmailOpsPanel.tsx", "file_size": 3509, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "adfa85cf-1ad4-4246-a4cc-ca6b29ba7be4", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/GmailOps/GmailOpsPanel.tsx", "file_name": "GmailOpsPanel.tsx", "file_size": 3509, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "76626b4934976cbcb2466568052486193b8da8fefb910a3a499857b1f05c77a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f9a8caa4-5f82-4bb1-ad55-e16ce2db02dc", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/GmailOps/GmailOpsPanel.tsx", "file_name": "GmailOpsPanel.tsx", "file_size": 3509, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "7552831b3d2370da0d200a49524179af88ebd74b6d49c0e88c40117e7bd2c5fc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8a7b7a93-aabb-4ebd-b310-6c6acebef753", "node_type": "1", "metadata": {}, "hash": "d9414670820f3c85996054d929b41757a7a161a90761cce225a9fb3dfd76207c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "for (const em of emails) {\n    if (typeof em.snippet !== \"string\") {\n      console.log(\"DEBUG 418:\", typeof em.snippet, em.snippet);\n    }\n  }\n\n  return (\n    <div className=\"max-w-2xl mx-auto my-8 space-y-4\">\n      <div>\n        <h3 className=\"font-bold mb-2\">Send Email</h3>\n        <input className=\"border rounded px-2 py-1 w-full mb-1\" placeholder=\"To Email\" value={to} onChange={e => setTo(e.target.value)} />\n        <input className=\"border rounded px-2 py-1 w-full mb-1\" placeholder=\"Subject\" value={subject} onChange={e => setSubject(e.target.value)} />\n        <textarea className=\"border rounded px-2 py-1 w-full mb-2\" placeholder=\"Body\" rows={4} value={body} onChange={e => setBody(e.target.value)} />\n        <Button onClick={send}>Send Email</Button>\n        {msg && (\n          <div className=\"text-xs mt-2\">\n            <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n              <SafeMarkdown>{msg}</SafeMarkdown>\n            </div>\n          </div>\n        )}\n      </div>\n      <div>", "mimetype": "text/plain", "start_char_idx": 1733, "end_char_idx": 2757, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8a7b7a93-aabb-4ebd-b310-6c6acebef753": {"__data__": {"id_": "8a7b7a93-aabb-4ebd-b310-6c6acebef753", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/GmailOps/GmailOpsPanel.tsx", "file_name": "GmailOpsPanel.tsx", "file_size": 3509, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "adfa85cf-1ad4-4246-a4cc-ca6b29ba7be4", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/GmailOps/GmailOpsPanel.tsx", "file_name": "GmailOpsPanel.tsx", "file_size": 3509, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "76626b4934976cbcb2466568052486193b8da8fefb910a3a499857b1f05c77a8", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "393cc687-ce53-4f3a-86b2-e5a3aea7984c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/GmailOps/GmailOpsPanel.tsx", "file_name": "GmailOpsPanel.tsx", "file_size": 3509, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "f91bb4f07fc7c40ac562dae5cd9445cfc9398c8f8aa8d0ee4bdfc585a7f9effb", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<h3 className=\"font-bold mb-2\">List Recent Emails</h3>\n        <Button onClick={list}>Refresh Inbox</Button>\n        <ul className=\"mt-2 space-y-1\">\n          {emails.map((em, i) => (\n            <li key={i} className=\"bg-gray-100 rounded p-2 text-xs\">\n              <div><strong>From:</strong> {em.from}</div>\n              <div><strong>Subject:</strong> {em.subject}</div>\n              <div><strong>Date:</strong> {em.date}</div>\n              <div className=\"text-gray-500\">\n                <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n                  <SafeMarkdown>{em.snippet}</SafeMarkdown>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 2766, "end_char_idx": 3508, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ae77cd7d-8794-486d-a2fb-e1aa5db21d91": {"__data__": {"id_": "ae77cd7d-8794-486d-a2fb-e1aa5db21d91", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/LogsPanel/LogsPanel.tsx", "file_name": "LogsPanel.tsx", "file_size": 5877, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "04fb77e3-dc49-4d27-a360-dd2408318851", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/LogsPanel/LogsPanel.tsx", "file_name": "LogsPanel.tsx", "file_size": 5877, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "27f7533964e1a783e3ec60addaf129b902fb4243b3853c280c7b440e7bcbd7d3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "57b044d0-f8cc-476c-a1e7-aa70dad30f7a", "node_type": "1", "metadata": {}, "hash": "c8dbaf620e6704254aed95f4e8ddd56a3e4725a59f951ed7a55dee83fed16196", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: frontend/src/components/LogsPanel.tsx\n// Purpose: Displays the system action log with results, file paths, timestamps, auto-refresh, action-type filtering, text-based search, and JSON/CSV download.\n//          Result output is rendered with SafeMarkdown when string; otherwise, pretty JSON.\n\n\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { API_ROOT } from \"@/lib/api\";\nimport SafeMarkdown from \"@/components/SafeMarkdown\";\nimport { toMDString } from \"@/lib/toMDString\";\n\ninterface LogEntry {\n  id: string;\n  timestamp: string;\n  type: string;\n  path?: string;\n  status: string;\n  result?: unknown; // Can be string (markdown), object, or null\n}\n\nexport default function LogsPanel() {\n  const [log, setLog] = useState<LogEntry[]>([]);\n  const [autoRefresh, setAutoRefresh] = useState(true);\n  const [filterType, setFilterType] = useState<string>(\"\");", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 986, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "57b044d0-f8cc-476c-a1e7-aa70dad30f7a": {"__data__": {"id_": "57b044d0-f8cc-476c-a1e7-aa70dad30f7a", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/LogsPanel/LogsPanel.tsx", "file_name": "LogsPanel.tsx", "file_size": 5877, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "04fb77e3-dc49-4d27-a360-dd2408318851", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/LogsPanel/LogsPanel.tsx", "file_name": "LogsPanel.tsx", "file_size": 5877, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "27f7533964e1a783e3ec60addaf129b902fb4243b3853c280c7b440e7bcbd7d3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ae77cd7d-8794-486d-a2fb-e1aa5db21d91", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/LogsPanel/LogsPanel.tsx", "file_name": "LogsPanel.tsx", "file_size": 5877, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "d4961f0715319da0732908a80ecf59db0944abfdd03b99428f9b1cce34808471", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4fc503a8-72b9-48aa-8381-5511fb526f63", "node_type": "1", "metadata": {}, "hash": "92d5496bfe633b3387e9ff2843d321d2ff10e7f4cf297af7c733951588786020", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const [searchText, setSearchText] = useState<string>(\"\");\n\n  async function fetchLog() {\n    const res = await fetch(`${API_ROOT}/control/list_log`, {\n      headers: {\n        \"X-API-Key\": process.env.NEXT_PUBLIC_API_KEY || \"\"\n      }\n    });\n    const data = await res.json();\n    const mapped = (data.log || []).map((entry: LogEntry) => ({\n      ...entry,\n      result: toMDString(entry.result)\n    }));\n    setLog(mapped);\n  }\n\n  function downloadJSON() {\n    const blob = new Blob([JSON.stringify(filteredLog, null, 2)], { type: \"application/json\" });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"relay_log.json\";\n    link.click();\n    URL.revokeObjectURL(url);\n  }", "mimetype": "text/plain", "start_char_idx": 989, "end_char_idx": 1744, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4fc503a8-72b9-48aa-8381-5511fb526f63": {"__data__": {"id_": "4fc503a8-72b9-48aa-8381-5511fb526f63", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/LogsPanel/LogsPanel.tsx", "file_name": "LogsPanel.tsx", "file_size": 5877, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "04fb77e3-dc49-4d27-a360-dd2408318851", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/LogsPanel/LogsPanel.tsx", "file_name": "LogsPanel.tsx", "file_size": 5877, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "27f7533964e1a783e3ec60addaf129b902fb4243b3853c280c7b440e7bcbd7d3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "57b044d0-f8cc-476c-a1e7-aa70dad30f7a", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/LogsPanel/LogsPanel.tsx", "file_name": "LogsPanel.tsx", "file_size": 5877, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "3be07f98206d3cd138d0ef8b944756858b47710e845977e17156042211cb0719", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "afa03f38-77f6-43b9-b08b-4dfe1a8d7a64", "node_type": "1", "metadata": {}, "hash": "870fd03e033fa4a80776965635904d410ae2e4573708374f7332652ca74e6cc1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "function downloadCSV() {\n    const headers = [\"id\", \"timestamp\", \"type\", \"path\", \"status\"];\n    const csvRows = [headers.join(\",\")];\n    filteredLog.forEach(entry => {\n      const row = [\n        entry.id,\n        entry.timestamp,\n        entry.type,\n        entry.path || \"\",\n        entry.status\n      ].map(field => `\"${String(field).replace(/\"/g, '\"\"')}\"`);\n      csvRows.push(row.join(\",\"));\n    });\n    const csvContent = csvRows.join(\"\\n\");\n    const blob = new Blob([csvContent], { type: \"text/csv\" });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"relay_log.csv\";\n    link.click();\n    URL.revokeObjectURL(url);\n  }\n\n  useEffect(() => {\n    fetchLog();\n    if (!autoRefresh) return;\n    const interval = setInterval(fetchLog, 15000);\n    return () => clearInterval(interval);\n  }, [autoRefresh]);\n\n  const uniqueTypes = Array.from(new Set(log.map(l => l.type))).sort();", "mimetype": "text/plain", "start_char_idx": 1748, "end_char_idx": 2711, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "afa03f38-77f6-43b9-b08b-4dfe1a8d7a64": {"__data__": {"id_": "afa03f38-77f6-43b9-b08b-4dfe1a8d7a64", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/LogsPanel/LogsPanel.tsx", "file_name": "LogsPanel.tsx", "file_size": 5877, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "04fb77e3-dc49-4d27-a360-dd2408318851", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/LogsPanel/LogsPanel.tsx", "file_name": "LogsPanel.tsx", "file_size": 5877, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "27f7533964e1a783e3ec60addaf129b902fb4243b3853c280c7b440e7bcbd7d3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4fc503a8-72b9-48aa-8381-5511fb526f63", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/LogsPanel/LogsPanel.tsx", "file_name": "LogsPanel.tsx", "file_size": 5877, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "1a15aca2ec094bd0a24f8e3ab6a5a321050bc46d8eb5a512007b461f821151c2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "380962a8-390f-45a0-8774-3ddceeef9cf4", "node_type": "1", "metadata": {}, "hash": "a62eba42f9e9717cd435c918d2a3ee3a9378e279b88a7b1c242f0a3587a22299", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const filteredLog = log.filter(entry => {\n    const matchType = !filterType || entry.type === filterType;\n    const matchSearch = !searchText || JSON.stringify(entry).toLowerCase().includes(searchText.toLowerCase());\n    return matchType && matchSearch;\n  });\n\n  if (!filteredLog.length)\n    return (\n      <p className=\"text-muted-foreground\">\n        No log entries{filterType ? ` of type '${filterType}'` : \"\"} found.\n      </p>\n    );\n\n  for (const entry of filteredLog) {\n    if (entry.result && typeof entry.result !== \"string\") {\n      console.log(\"DEBUG 418:\", typeof entry.result, entry.result);\n    }\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      {/* Controls */}\n      <div className=\"flex flex-wrap gap-4 mb-4 items-center\">\n        <Button variant={autoRefresh ? \"default\" : \"outline\"} onClick={() => setAutoRefresh(!autoRefresh)}>\n          {autoRefresh ? \"Auto-Refresh ON\" : \"Auto-Refresh OFF\"}\n        </Button>\n        <div className=\"text-sm text-gray-500\">Log updates every 15s</div>\n        <", "mimetype": "text/plain", "start_char_idx": 2714, "end_char_idx": 3734, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "380962a8-390f-45a0-8774-3ddceeef9cf4": {"__data__": {"id_": "380962a8-390f-45a0-8774-3ddceeef9cf4", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/LogsPanel/LogsPanel.tsx", "file_name": "LogsPanel.tsx", "file_size": 5877, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "04fb77e3-dc49-4d27-a360-dd2408318851", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/LogsPanel/LogsPanel.tsx", "file_name": "LogsPanel.tsx", "file_size": 5877, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "27f7533964e1a783e3ec60addaf129b902fb4243b3853c280c7b440e7bcbd7d3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "afa03f38-77f6-43b9-b08b-4dfe1a8d7a64", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/LogsPanel/LogsPanel.tsx", "file_name": "LogsPanel.tsx", "file_size": 5877, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "f7b2fc76ed3e72619e1c3237072d07a77b84af175b36a470807ec65fb88cfec4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "585545c8-4013-4d55-95f9-f11a92e39909", "node_type": "1", "metadata": {}, "hash": "a8bf8b4e4f750c3acee2cf3459137db1fc207cb5ee27c7bb3cb8465bdb7640d5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "select\n          className=\"border rounded px-2 py-1 text-sm\"\n          value={filterType}\n          onChange={e => setFilterType(e.target.value)}\n        >\n          <option value=\"\">All Types</option>\n          {uniqueTypes.map(type => (\n            <option key={type} value={type}>{type}</option>\n          ))}\n        </select>\n        <input\n          type=\"text\"\n          placeholder=\"Search logs...\"\n          value={searchText}\n          onChange={e => setSearchText(e.target.value)}\n          className=\"border rounded px-2 py-1 text-sm w-60\"\n        />\n        <Button onClick={downloadJSON} variant=\"secondary\">\n          Download JSON\n        </Button>\n        <Button onClick={downloadCSV} variant=\"outline\">\n          Export CSV\n        </Button>\n      </div>\n\n      {/* Log entries */}\n      {filteredLog.map((entry) => (\n        <Card key={entry.id}>", "mimetype": "text/plain", "start_char_idx": 3734, "end_char_idx": 4601, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "585545c8-4013-4d55-95f9-f11a92e39909": {"__data__": {"id_": "585545c8-4013-4d55-95f9-f11a92e39909", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/LogsPanel/LogsPanel.tsx", "file_name": "LogsPanel.tsx", "file_size": 5877, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "04fb77e3-dc49-4d27-a360-dd2408318851", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/LogsPanel/LogsPanel.tsx", "file_name": "LogsPanel.tsx", "file_size": 5877, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "27f7533964e1a783e3ec60addaf129b902fb4243b3853c280c7b440e7bcbd7d3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "380962a8-390f-45a0-8774-3ddceeef9cf4", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/LogsPanel/LogsPanel.tsx", "file_name": "LogsPanel.tsx", "file_size": 5877, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "a9c295203345e1dcf9241cfcb72138e0b557137b71d7c1ef6205d635f5bd41e2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "59e13ac8-1d08-4664-bf7c-ee9178f075ac", "node_type": "1", "metadata": {}, "hash": "07289c52acee69281c40cdfdeee6933bfaee04b4cdcb45db34768a8503d8673c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<CardContent className=\"p-4 space-y-2\">\n            <div className=\"text-sm font-mono text-muted-foreground\">\n              #{entry.id.slice(0, 8)} \u2022 {entry.timestamp}\n            </div>\n            <div className=\"text-sm\">\n              <strong>Type:</strong> {entry.type}\n              {entry.path && (\n                <span className=\"ml-2\"><strong>Path:</strong> {entry.path}</span>\n              )}\n              <span className=\"ml-2\"><strong>Status:</strong> {entry.status}</span>\n            </div>\n            {/* If the result is a markdown string, render as markdown.\n                Otherwise, pretty-print as JSON. */}\n            {typeof entry.result === \"string\" ? (\n              <div className=\"bg-muted p-2 rounded text-sm overflow-auto whitespace-pre-wrap\">\n                <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n                  <SafeMarkdown>{entry.result}</SafeMarkdown>\n                </div>\n              </div>\n            ) : entry.result ? (", "mimetype": "text/plain", "start_char_idx": 4612, "end_char_idx": 5611, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "59e13ac8-1d08-4664-bf7c-ee9178f075ac": {"__data__": {"id_": "59e13ac8-1d08-4664-bf7c-ee9178f075ac", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/LogsPanel/LogsPanel.tsx", "file_name": "LogsPanel.tsx", "file_size": 5877, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "04fb77e3-dc49-4d27-a360-dd2408318851", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/LogsPanel/LogsPanel.tsx", "file_name": "LogsPanel.tsx", "file_size": 5877, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "27f7533964e1a783e3ec60addaf129b902fb4243b3853c280c7b440e7bcbd7d3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "585545c8-4013-4d55-95f9-f11a92e39909", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/LogsPanel/LogsPanel.tsx", "file_name": "LogsPanel.tsx", "file_size": 5877, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "c916ddbbaed76c38195c68a75b52df2347894d8a8682c8078c2abfb408c84628", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<pre className=\"bg-muted p-2 rounded text-sm overflow-auto whitespace-pre-wrap\">\n                {JSON.stringify(entry.result, null, 2)}\n              </pre>\n            ) : null}\n          </CardContent>\n        </Card>\n      ))}\n    </div>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 5626, "end_char_idx": 5874, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "271427d1-54a6-4335-8127-7a0079c2f470": {"__data__": {"id_": "271427d1-54a6-4335-8127-7a0079c2f470", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "61845f9f33a14ba2701482c256340f037f83d35c56d9f748492e7bdaa2c8e598", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a35867ee-b81b-46b2-931a-acf264144a59", "node_type": "1", "metadata": {}, "hash": "7296766c449384a28f463f5b3f1e806b268a9746fd45e2dc4acfc762d6016e69", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: frontend/src/components/MemoryPanel.tsx\n// Purpose: Robust, scalable, tier-aware memory inspector with pagination, user filtering, tag/save, date filtering, and replay support.\n//          Now supports Markdown/code in summary, agent response, and context modals via SafeMarkdown.\n\n\"use client\"\n\nimport { useEffect, useMemo, useState } from \"react\"\nimport { Card, CardContent } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { API_ROOT } from \"@/lib/api\"\nimport SafeMarkdown from \"@/components/SafeMarkdown\"\nimport { toMDString } from \"@/lib/toMDString\"\n\ninterface ContextSource {\n  type: string\n  title?: string\n  path?: string\n  tier?: string\n  score?: number\n  doc_id?: string\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 726, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a35867ee-b81b-46b2-931a-acf264144a59": {"__data__": {"id_": "a35867ee-b81b-46b2-931a-acf264144a59", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "61845f9f33a14ba2701482c256340f037f83d35c56d9f748492e7bdaa2c8e598", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "271427d1-54a6-4335-8127-7a0079c2f470", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2b700888cf574b82a50815042f6a41690aa195b354c71b9bbf105c5d4ae62876", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b4ad8b21-270e-486f-99da-b83e0a6ee993", "node_type": "1", "metadata": {}, "hash": "b762f5554972e5f4eed4ed50c016a9a5e11afa4ed266f7aa4ccf23416a576731", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "interface MemoryEntry {\n  timestamp: string\n  user: string\n  query: string\n  topics?: string[]\n  files?: string[]\n  summary?: string\n  context_length?: number\n  used_global_context?: boolean\n  context_files?: string[]\n  files_used?: ContextSource[]\n  agent_response?: string\n  prompt_length?: number\n  response_length?: number\n  fallback?: boolean\n  tags?: string[]\n  saved?: boolean\n}\n\nconst isNonEmptyArray = <T,>(arr?: T[] | null): arr is T[] => Array.isArray(arr) && arr.length > 0\n\nexport default function MemoryPanel() {\n  const [memory, setMemory] = useState<MemoryEntry[]>([])\n  const [search, setSearch] = useState(\"\")\n  const [filterUser, setFilterUser] = useState(\"\")\n  const [filterGlobal, setFilterGlobal] = useState<\"any\" | \"with\" | \"without\">(\"any\")\n  const [filterDays, setFilterDays] = useState(7)\n  const [fetchInfo, setFetchInfo] = useState({\n    status: \"idle\",\n    time: 0,\n    error: undefined as string | undefined,\n  })", "mimetype": "text/plain", "start_char_idx": 728, "end_char_idx": 1671, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b4ad8b21-270e-486f-99da-b83e0a6ee993": {"__data__": {"id_": "b4ad8b21-270e-486f-99da-b83e0a6ee993", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "61845f9f33a14ba2701482c256340f037f83d35c56d9f748492e7bdaa2c8e598", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a35867ee-b81b-46b2-931a-acf264144a59", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "753aa314ca0efc61ba13b300f9bee83d5a39e2946c23a8094f75db7af052db09", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dec2ddf7-27ac-4783-b46d-ddc00c9ab370", "node_type": "1", "metadata": {}, "hash": "5dc41f755e4c57404958b074991cee5125e3e89ca211725dd1f8b9dbeb06e47e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const [modalContext, setModalContext] = useState<{ path: string; content: string } | null>(null)\n\n  const [currentPage, setCurrentPage] = useState(1)\n  const pageSize = 10\n\n  useEffect(() => {\n    fetchMemory()\n  }, [])", "mimetype": "text/plain", "start_char_idx": 1674, "end_char_idx": 1893, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dec2ddf7-27ac-4783-b46d-ddc00c9ab370": {"__data__": {"id_": "dec2ddf7-27ac-4783-b46d-ddc00c9ab370", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "61845f9f33a14ba2701482c256340f037f83d35c56d9f748492e7bdaa2c8e598", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b4ad8b21-270e-486f-99da-b83e0a6ee993", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "eebd129f13457439641fc3c1bb80ae60379fddf36bea5a27224117eb04d8d2b5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2c54560b-a6fd-42ab-a504-191d2652a987", "node_type": "1", "metadata": {}, "hash": "905d8a9173b0241777f2aa76ed4420d1abfc02c56ddcc3ff18fdabea285c7bb0", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async function fetchMemory() {\n    const start = Date.now()\n    setFetchInfo({ status: \"loading\", time: 0, error: undefined })\n\n    try {\n      const res = await fetch(`${API_ROOT}/logs/sessions/all`, {\n        headers: { \"X-API-Key\": process.env.NEXT_PUBLIC_API_KEY || \"\" },\n      })\n      if (!res.ok) throw new Error(`Status ${res.status}`)\n      const data = await res.json()\n      const mapped = (data.entries || []).map((m: unknown) => {\n        const entry = m as Partial<MemoryEntry>\n        return {\n          ...entry,\n          summary: toMDString(entry.summary),\n          agent_response: toMDString(entry.agent_response),\n        }\n      })\n      setMemory(mapped)\n      setFetchInfo({ status: \"success\", time: Date.now() - start, error: \"\" })\n    } catch (e: unknown) {\n      const errorMsg = e instanceof Error ? e.message : String(e)\n      setFetchInfo({ status: \"error\", time: Date.now() - start, error: errorMsg })\n      setMemory([])\n    }\n  }", "mimetype": "text/plain", "start_char_idx": 1897, "end_char_idx": 2859, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2c54560b-a6fd-42ab-a504-191d2652a987": {"__data__": {"id_": "2c54560b-a6fd-42ab-a504-191d2652a987", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "61845f9f33a14ba2701482c256340f037f83d35c56d9f748492e7bdaa2c8e598", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dec2ddf7-27ac-4783-b46d-ddc00c9ab370", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "115f64d37020a562cd31691c03d06be7d345530e5263107b2b4f176260432ed4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5a8b7431-62aa-409b-9b87-833aa21bee3d", "node_type": "1", "metadata": {}, "hash": "d34f3780ead97eca57c1302fa55f21c0315bae59a9cd2c96056c94b5a02e1d0b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async function fetchContextFile(path: string) {\n    try {\n      const res = await fetch(`${API_ROOT}/files/context?path=${encodeURIComponent(path)}`, {\n        headers: { \"X-API-Key\": process.env.NEXT_PUBLIC_API_KEY || \"\" },\n      })\n      if (!res.ok) throw new Error(`Status ${res.status}`)\n      const content = await res.text()\n      setModalContext({ path, content })\n    } catch (e) {\n      setModalContext({ path, content: `Failed to fetch: ${e}` })\n    }\n  }\n\n  function toggleSave(index: number) {\n    setMemory(prev => {\n      const clone = [...prev]\n      clone[index].saved = !clone[index].saved\n      return clone\n    })\n  }\n\n  function toggleTag(index: number, tag: string) {\n    setMemory(prev => {\n      const clone = [...prev]\n      const tags = new Set(clone[index].tags || [])\n      if (tags.has(tag)) {\n        tags.delete(tag)\n      } else {\n        tags.add(tag)\n      }\n      clone[index].tags = Array.from(tags)\n      return clone\n    })\n  }", "mimetype": "text/plain", "start_char_idx": 2863, "end_char_idx": 3828, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5a8b7431-62aa-409b-9b87-833aa21bee3d": {"__data__": {"id_": "5a8b7431-62aa-409b-9b87-833aa21bee3d", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "61845f9f33a14ba2701482c256340f037f83d35c56d9f748492e7bdaa2c8e598", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2c54560b-a6fd-42ab-a504-191d2652a987", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "d3f457b0d8958c30e855d87b25560671ad0eaab5f73c4908f6a18732e7ca6510", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "391e2ea9-875a-4ca1-90c6-8f0700741836", "node_type": "1", "metadata": {}, "hash": "ff3042cecd888b2825552582af4d793e925fb276362f04db1bc6e54c2a581ca5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const users = useMemo(() => Array.from(new Set(memory.map(m => m.user))).sort(), [memory])", "mimetype": "text/plain", "start_char_idx": 3832, "end_char_idx": 3922, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "391e2ea9-875a-4ca1-90c6-8f0700741836": {"__data__": {"id_": "391e2ea9-875a-4ca1-90c6-8f0700741836", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "61845f9f33a14ba2701482c256340f037f83d35c56d9f748492e7bdaa2c8e598", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5a8b7431-62aa-409b-9b87-833aa21bee3d", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "f83499cc7c3f64632b1f4a587664cef7d5001353198841c13de8128abd182aa7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "19df0585-348a-4bb2-b420-e344a792facb", "node_type": "1", "metadata": {}, "hash": "65cee62fca58b11143656c1cb62f390d2ced38182271525e7c9b672c8b117d56", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const", "mimetype": "text/plain", "start_char_idx": 1115, "end_char_idx": 1120, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "19df0585-348a-4bb2-b420-e344a792facb": {"__data__": {"id_": "19df0585-348a-4bb2-b420-e344a792facb", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "61845f9f33a14ba2701482c256340f037f83d35c56d9f748492e7bdaa2c8e598", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "391e2ea9-875a-4ca1-90c6-8f0700741836", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "fa114ffecbf15fd874b0e323cf747c751c1f0c04b300b183c2f94a94b50d491a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "96be358c-32a7-472f-b97b-8b1e6f93a309", "node_type": "1", "metadata": {}, "hash": "24b62d428abaae9182bb394be8892f5a931ca5ec5e83cf1681a4679b5dbdfd53", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "filtered =", "mimetype": "text/plain", "start_char_idx": 3932, "end_char_idx": 3942, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "96be358c-32a7-472f-b97b-8b1e6f93a309": {"__data__": {"id_": "96be358c-32a7-472f-b97b-8b1e6f93a309", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "61845f9f33a14ba2701482c256340f037f83d35c56d9f748492e7bdaa2c8e598", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "19df0585-348a-4bb2-b420-e344a792facb", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "d2d43e94e1411300ceae15d3647cc7c9048f783445d0fe5c900d844e73270bb9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "83020a17-a315-4631-9d1a-adc5a7c26ff1", "node_type": "1", "metadata": {}, "hash": "51672032a28b77c844e10653842cd4797f5bc5d17f19c3c2b347cd1b7fa0fc78", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "useMemo", "mimetype": "text/plain", "start_char_idx": 325, "end_char_idx": 332, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "83020a17-a315-4631-9d1a-adc5a7c26ff1": {"__data__": {"id_": "83020a17-a315-4631-9d1a-adc5a7c26ff1", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "61845f9f33a14ba2701482c256340f037f83d35c56d9f748492e7bdaa2c8e598", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "96be358c-32a7-472f-b97b-8b1e6f93a309", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "7bd4efee1eeb7285e26d3d37e4a2fa8217a94a2b15fcaac4ca4d072ca5e2f024", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1002d0d4-52d8-498f-9b53-0a1888851659", "node_type": "1", "metadata": {}, "hash": "d0239af765e8bc7a3ab1f691412a0fc2ad450eaf6a9635a046a7bfa7493fe937", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "(() => {\n    const now = Date.now()\n    const cutoff = now - filterDays * 24 * 60 * 60 * 1000\n\n    return memory\n      .filter(m => {\n        const matchUser = !filterUser || m.user === filterUser\n        const matchSearch = !search || JSON.stringify(m).toLowerCase().includes(search.toLowerCase())\n        const matchGlobal =\n          filterGlobal === \"any\"\n            ? true\n            : filterGlobal === \"with\"\n            ? !!m.used_global_context\n            : !m.used_global_context\n        const matchTime = new Date(m.timestamp).getTime() >= cutoff\n        return matchUser && matchSearch && matchGlobal && matchTime\n      })\n      .sort((a, b) => {\n        const tierScore = (tier?: string) => (tier === \"global\" ? 3 : tier === \"project\" ? 2 : tier === \"code\" ? 1 : 0)\n        const maxTier = (files?: ContextSource[]) => Math.max(...(files || []).map(f => tierScore(f.tier)), 0)\n        return maxTier(b.files_used) - maxTier(a.files_used)\n      })\n  }, [memory, search, filterUser, filterGlobal, filterDays])", "mimetype": "text/plain", "start_char_idx": 3950, "end_char_idx": 4972, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1002d0d4-52d8-498f-9b53-0a1888851659": {"__data__": {"id_": "1002d0d4-52d8-498f-9b53-0a1888851659", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "61845f9f33a14ba2701482c256340f037f83d35c56d9f748492e7bdaa2c8e598", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "83020a17-a315-4631-9d1a-adc5a7c26ff1", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "6a80a06a042701367f72da182a751c5f0502a3ce077ac9e28385ff530a24590d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "2bfd3e12-86eb-4376-afa9-d88dbdf6f4a0", "node_type": "1", "metadata": {}, "hash": "c763a3556736ec125a53d900b5f8296ec9b9a409fb5c20c13dd3388ff5390877", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const paginated = useMemo(() => {\n    const start = (currentPage - 1) * pageSize\n    return filtered.slice(start, start + pageSize)\n  }, [filtered, currentPage])\n\n  function replayQuery(query: string) {\n    window.open(`/ask?question=${encodeURIComponent(query)}`, \"_blank\")\n  }\n\n  for (const m of paginated) {\n    if (m.summary && typeof m.summary !== \"string\") {\n      console.log(\"DEBUG 418:\", typeof m.summary, m.summary)\n    }\n    if (m.agent_response && typeof m.agent_response !== \"string\") {\n      console.log(\"DEBUG 418:\", typeof m.agent_response, m.agent_response)\n    }\n  }\n  if (modalContext && typeof modalContext.content !== \"string\") {\n    console.log(\"DEBUG 418:\", typeof modalContext.content, modalContext.content)\n  }\n\n  return (", "mimetype": "text/plain", "start_char_idx": 4976, "end_char_idx": 5723, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "2bfd3e12-86eb-4376-afa9-d88dbdf6f4a0": {"__data__": {"id_": "2bfd3e12-86eb-4376-afa9-d88dbdf6f4a0", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "61845f9f33a14ba2701482c256340f037f83d35c56d9f748492e7bdaa2c8e598", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1002d0d4-52d8-498f-9b53-0a1888851659", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "a99e64438ff2a42fe96d0200c1c770ae3b4b8c050621fbacb7f66e01e99e1bc1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c8df323a-08a0-4412-8fe8-49877fc8b6e1", "node_type": "1", "metadata": {}, "hash": "191da5fad74a6f2fc83865abade5eecd8de71648c67572b9ee74bd89cc4c47cf", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<div className=\"space-y-4\">\n      <div className=\"flex flex-wrap gap-4 text-xs text-gray-500 mb-2 items-center\">\n        <span>Fetch: <b>{fetchInfo.status}</b>{fetchInfo.time ? ` (${fetchInfo.time}ms)` : \"\"}</span>\n        <span>Total: <b>{memory.length}</b></span>\n        <span>Filtered: <b>{filtered.length}</b></span>\n        <span>Users: <b>{users.length}</b></span>\n        <span>Global: <b>{filtered.filter(m => m.used_global_context).length}</b></span>\n        <Button onClick={fetchMemory} variant=\"outline\">Refresh</Button>\n      </div>\n\n      <div className=\"flex gap-2 mb-4\">\n        <select className=\"border rounded px-2 py-1 text-sm\" value={filterUser} onChange={e => setFilterUser(e.target.value)}>\n          <option value=\"\">All Users</option>\n          {users.map(u => <option key={u} value={u}>{u}</option>)}\n        </select>\n        <select\n          className=\"border rounded px-2 py-1 text-sm\"\n          value={filterGlobal}\n          onChange={e =>\n            setFilterGlobal(", "mimetype": "text/plain", "start_char_idx": 5728, "end_char_idx": 6729, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c8df323a-08a0-4412-8fe8-49877fc8b6e1": {"__data__": {"id_": "c8df323a-08a0-4412-8fe8-49877fc8b6e1", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "61845f9f33a14ba2701482c256340f037f83d35c56d9f748492e7bdaa2c8e598", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2bfd3e12-86eb-4376-afa9-d88dbdf6f4a0", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "072aa0dd07ab873fa186ea7f7f2ac6d4244b8bf3f609d4623cc1f6d8e2f7de8c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9a4b6f06-6aab-48ef-a4bd-74f050fd1336", "node_type": "1", "metadata": {}, "hash": "c10d32ff29346cdce67f5a49a4828bd8f94e372c989312ce9126e6e028e4b5b7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "e.target.value as \"any\" | \"with\" | \"without\"\n            )\n          }\n        >\n          <option value=\"any\">All Context</option>\n          <option value=\"with\">With Global</option>\n          <option value=\"without\">Without Global</option>\n        </select>\n        <input\n          className=\"border rounded px-2 py-1 text-sm w-64\"\n          placeholder=\"Search memory...\"\n          value={search}\n          onChange={e => setSearch(e.target.value)}\n        />\n        <select\n          className=\"border rounded px-2 py-1 text-sm\"\n          value={filterDays}\n          onChange={e => setFilterDays(parseInt(e.target.value))}\n        >\n          {[1, 7, 14, 30, 90].map(days => (\n            <option key={days} value={days}>Last {days} days</option>\n          ))}\n        </select>\n      </div>\n\n      {paginated.map((m, i) => (\n        <Card key={i}>\n          <CardContent className=\"p-4 space-y-2\">\n            <div className=\"text-sm font-mono text-muted-foreground\">", "mimetype": "text/plain", "start_char_idx": 6744, "end_char_idx": 7719, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9a4b6f06-6aab-48ef-a4bd-74f050fd1336": {"__data__": {"id_": "9a4b6f06-6aab-48ef-a4bd-74f050fd1336", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "61845f9f33a14ba2701482c256340f037f83d35c56d9f748492e7bdaa2c8e598", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c8df323a-08a0-4412-8fe8-49877fc8b6e1", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "bd593b4aae95619312d48fac03548900d03c07990476ebf75ec7bf86c66161ba", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "49b66923-e458-439c-96c1-8fc7533d9e74", "node_type": "1", "metadata": {}, "hash": "2b60872f443d0502f23fcd9f901fbc7533024101e6f248b8ac12e69c825618dd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{new Date(m.timestamp).toLocaleString()} \u2022 {m.user}\n            </div>\n            <div className=\"text-sm font-semibold\">Query:</div>\n            <div className=\"text-sm\">{m.query}</div>\n\n            {isNonEmptyArray(m.topics) && <div className=\"text-xs\">Topics: {m.topics.join(\", \")}</div>}\n            {isNonEmptyArray(m.files) && <div className=\"text-xs\">Files: {m.files.join(\", \")}</div>}\n\n            {isNonEmptyArray(m.context_files) && (\n              <div className=\"text-xs text-blue-800\">\n                <strong>Context Files:</strong> {m.context_files.map((cf, idx) => (\n                  <span key={cf}>\n                    <a className=\"underline cursor-pointer\" onClick={() => fetchContextFile(cf)}>{cf}</a>\n                    {idx < m.context_files!.length - 1 ? \", \" : \"\"}\n                  </span>\n                ))}\n              </div>\n            )}\n\n            {isNonEmptyArray(m.files_used) && (\n              <div className=\"text-xs text-purple-700\">", "mimetype": "text/plain", "start_char_idx": 7734, "end_char_idx": 8712, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "49b66923-e458-439c-96c1-8fc7533d9e74": {"__data__": {"id_": "49b66923-e458-439c-96c1-8fc7533d9e74", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "61845f9f33a14ba2701482c256340f037f83d35c56d9f748492e7bdaa2c8e598", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9a4b6f06-6aab-48ef-a4bd-74f050fd1336", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "0790560e2e8406d2e42de571ee40febc8e27cce1151f8edb588333cdac982e56", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b829f14a-a8b4-4769-833f-828bd96d9dea", "node_type": "1", "metadata": {}, "hash": "1d03daa9d156135111a32469d2b574d0ef46a5b570448ca4374a3ed534509807", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<strong>Injected:</strong>{\" \"}\n                {m.files_used.map((f, idx) => (\n                  <span key={idx}>\n                    <span className=\"underline cursor-pointer\" onClick={() => f.path && fetchContextFile(f.path)}>\n                      {f.path || f.title || f.doc_id || f.type}\n                    </span>\n                    {f.tier && <span className=\"ml-1 text-gray-500\">[{f.tier}]</span>}\n                    {idx < m.files_used!.length - 1 ? \", \" : \"\"}\n                  </span>\n                ))}\n              </div>\n            )}\n\n            <div className=\"text-xs text-gray-600\">\n              {typeof m.context_length === \"number\" && <>Context Length: {m.context_length} chars<br /></>}\n              {typeof m.prompt_length === \"number\" && <>Prompt: {m.prompt_length}, Response: {m.response_length}</>}\n            </div>\n\n            {m.used_global_context && (\n              <span className=", "mimetype": "text/plain", "start_char_idx": 8729, "end_char_idx": 9653, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b829f14a-a8b4-4769-833f-828bd96d9dea": {"__data__": {"id_": "b829f14a-a8b4-4769-833f-828bd96d9dea", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "61845f9f33a14ba2701482c256340f037f83d35c56d9f748492e7bdaa2c8e598", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "49b66923-e458-439c-96c1-8fc7533d9e74", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "12bd752a4fb99c2fd014c8694b47e101c6d4740939a9f3cd3240c637d5b3f27d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d2848e65-0489-4d61-8431-c4d7210414a5", "node_type": "1", "metadata": {}, "hash": "d842c3088fea2e569314c7c8044e9099c7091d4f0e7d9319ab7b98ae88b63a5b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"inline-block px-2 py-1 text-xs bg-green-100 text-green-700 rounded\">Global context</span>\n            )}\n            {m.fallback && (\n              <span className=\"inline-block px-2 py-1 text-xs bg-orange-100 text-orange-700 rounded\">Fallback</span>\n            )}\n\n            {Array.isArray(m.tags) && m.tags.length > 0 && (\n              <div className=\"text-xs text-blue-600\">\n                <strong>Tags:</strong> {m.tags.join(\", \")}\n              </div>\n            )}\n\n            {/* Markdown/code for memory summary */}\n            {typeof m.summary === \"string\" && !!m.summary.trim() && (\n              <div className=\"bg-muted p-2 rounded text-xs whitespace-pre-wrap\">\n                <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n                  <SafeMarkdown>{m.summary}</SafeMarkdown>\n                </div>\n              </div>\n            )}\n\n            {/* Markdown/code for agent response */}\n            {typeof m.agent_response === \"string\" && !!m.agent_response.trim() && (", "mimetype": "text/plain", "start_char_idx": 9653, "end_char_idx": 10674, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d2848e65-0489-4d61-8431-c4d7210414a5": {"__data__": {"id_": "d2848e65-0489-4d61-8431-c4d7210414a5", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "61845f9f33a14ba2701482c256340f037f83d35c56d9f748492e7bdaa2c8e598", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b829f14a-a8b4-4769-833f-828bd96d9dea", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "a83a7427fd01a37b894dc469bbad0f9225e8c2b5a96334693a126645381a4163", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b3a68080-1b8c-42e8-bd47-47b168c5f052", "node_type": "1", "metadata": {}, "hash": "6f4002ce0e86e4f37063b1cc0b6bf69f04ea6daf06d88af86a2a089aef66e768", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<div className=\"bg-muted p-2 rounded text-xs whitespace-pre-wrap mt-2\">\n                <strong>Agent Response:</strong>\n                <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n                  <SafeMarkdown>{m.agent_response}</SafeMarkdown>\n                </div>\n              </div>\n            )}\n\n            <div className=\"flex gap-2 flex-wrap text-xs mt-2\">\n              {[\"important\", \"bug\", \"training\",", "mimetype": "text/plain", "start_char_idx": 10689, "end_char_idx": 11130, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b3a68080-1b8c-42e8-bd47-47b168c5f052": {"__data__": {"id_": "b3a68080-1b8c-42e8-bd47-47b168c5f052", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "61845f9f33a14ba2701482c256340f037f83d35c56d9f748492e7bdaa2c8e598", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d2848e65-0489-4d61-8431-c4d7210414a5", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "eae7e20b7336a042f8ecee68410dc39e80756e95a860c08400574fe815411248", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9dc60169-c222-4edb-8085-ec0c3e660523", "node_type": "1", "metadata": {}, "hash": "c3ed7d76d6f138c839789823ad6887cafd44b1d31ed38fb0fbb267ac08dcab18", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"review\"].map(tag => (\n                <Button\n                  key={tag}\n                  variant={m.tags?.includes(tag) ? \"default\" : \"outline\"}\n                  size=\"sm\"\n                  onClick={() => toggleTag(i, tag)}\n                >\n                  {tag}\n                </Button>\n              ))}\n              <Button\n                variant={m.saved ? \"default\" : \"outline\"}\n                size=\"sm\"\n                onClick={() => toggleSave(i)}\n              >\n                {m.saved ? \"\ud83d\udcbe Saved\" : \"Save\"}\n              </Button>\n              <Button size=\"sm\" variant=\"ghost\" onClick={() => replayQuery(m.query)}>\n                \ud83d\udd01 Replay\n              </Button>\n            </div>\n\n            <details className=\"mt-2\">\n              <summary className=", "mimetype": "text/plain", "start_char_idx": 11131, "end_char_idx": 11912, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9dc60169-c222-4edb-8085-ec0c3e660523": {"__data__": {"id_": "9dc60169-c222-4edb-8085-ec0c3e660523", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "61845f9f33a14ba2701482c256340f037f83d35c56d9f748492e7bdaa2c8e598", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b3a68080-1b8c-42e8-bd47-47b168c5f052", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "23bdf07e606b203806c74df73ad8fd9400ad087879edfd9e79fe0a0cbb58e866", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "31b446d5-2c42-4d54-b7bf-949d63ad43a9", "node_type": "1", "metadata": {}, "hash": "31599058e295e6186765c555d28f8d0a0343579a2e7134c468c86db92739c420", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"cursor-pointer text-xs text-blue-700\">Debug: Raw Entry</summary>\n              <pre className=\"bg-gray-100 p-2 rounded text-xs overflow-auto\">{JSON.stringify(m, null, 2)}</pre>\n            </details>\n          </CardContent>\n        </Card>\n      ))}\n\n      {/* Pagination controls */}\n      {filtered.length > pageSize && (\n        <div className=\"flex gap-2 justify-center mt-4\">\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            onClick={() => setCurrentPage(p => Math.max(1, p - 1))}\n            disabled={currentPage === 1}\n          >\n            \u2b05 Prev\n          </Button>\n          <span className=\"text-xs flex items-center\">Page {currentPage} / {Math.ceil(filtered.length / pageSize)}</span>\n          <Button\n            size=\"sm\"\n            variant=\"outline\"\n            onClick={() => setCurrentPage(p => p + 1)}\n            disabled=", "mimetype": "text/plain", "start_char_idx": 11912, "end_char_idx": 12793, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "31b446d5-2c42-4d54-b7bf-949d63ad43a9": {"__data__": {"id_": "31b446d5-2c42-4d54-b7bf-949d63ad43a9", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "61845f9f33a14ba2701482c256340f037f83d35c56d9f748492e7bdaa2c8e598", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9dc60169-c222-4edb-8085-ec0c3e660523", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MemoryPanel.tsx", "file_name": "MemoryPanel.tsx", "file_size": 13812, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "740a189e1894bef9d18822683605841a756023922580e7a86131f1fabae5e49c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{currentPage * pageSize >= filtered.length}\n          >\n            Next \u27a1\n          </Button>\n        </div>\n      )}\n\n      {/* Modal viewer for context file contents (markdown/code-friendly) */}\n      {modalContext && (\n        <div className=\"fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-40\">\n          <div className=\"bg-white rounded shadow-lg max-w-2xl w-full p-6 relative\">\n            <div className=\"text-sm mb-2 font-bold\">Context File: <code>{modalContext.path}</code></div>\n            <div className=\"bg-gray-100 p-4 rounded max-h-[400px] overflow-auto text-xs\">\n              <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n                <SafeMarkdown>{modalContext.content}</SafeMarkdown>\n              </div>\n            </div>\n            <Button variant=\"secondary\" onClick={() => setModalContext(null)} className=\"absolute top-2 right-2\">\n              Close\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}", "mimetype": "text/plain", "start_char_idx": 12793, "end_char_idx": 13799, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0c02d425-585b-4391-96fd-f6283a5e334b": {"__data__": {"id_": "0c02d425-585b-4391-96fd-f6283a5e334b", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MetricsCharts/MetricsCharts.tsx", "file_name": "MetricsCharts.tsx", "file_size": 902, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5b324823-b3c3-4b78-91fa-fae0a8764817", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/MetricsCharts/MetricsCharts.tsx", "file_name": "MetricsCharts.tsx", "file_size": 902, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "87cea4d105adff997627d671d678aa5bfe4d22523e9a0f8869c9ee0b5a61a7b9", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: src/components/MetricsChart.tsx\n\n'use client'\n\nimport { Card } from '../ui/card' \n\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts'\n\nconst sampleData = [\n  { name: 'Mon', value: 400 },\n  { name: 'Tue', value: 300 },\n  { name: 'Wed', value: 500 },\n  { name: 'Thu', value: 200 },\n  { name: 'Fri', value: 650 },\n]\n\nexport default function MetricsChart() {\n  return (\n    <Card className=\"p-6\">\n      <h3 className=\"font-semibold text-lg mb-2\">Metrics Over Time</h3>\n      <ResponsiveContainer width=\"100%\" height={200}>\n        <LineChart data={sampleData}>\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Line\n            type=\"monotone\"\n            dataKey=\"value\"\n            stroke=\"#4F46E5\"\n            strokeWidth={2}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </Card>\n  )\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 901, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f13331ca-ca94-419a-ae20-6a9cbc9b26dd": {"__data__": {"id_": "f13331ca-ca94-419a-ae20-6a9cbc9b26dd", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SafeMarkdown.tsx", "file_name": "SafeMarkdown.tsx", "file_size": 3365, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2bd9d066-ded0-4192-ade2-82961bbbe2d7", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SafeMarkdown.tsx", "file_name": "SafeMarkdown.tsx", "file_size": 3365, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8be8ae1073daec9580e2c9f6ed0d71a92d98b1c1831f402a9f6afd9e3ee6d5bc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9024aa76-5ae7-4b34-afcb-dd5fe0f9dfca", "node_type": "1", "metadata": {}, "hash": "95925652e0a3a28926032784d6736c97c74e3bb46b28f7dfcdbf45d9ff8c49e3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: src/components/SafeMarkdown.tsx\n// Purpose: Bulletproof, consistent, and safe Markdown rendering for all app content.\n//          Hardened against XSS, raw HTML, and rendering bugs. All code blocks are syntax-highlighted (Prism).\n//          This is the ONLY allowed way to render Markdown in the app.\n\nimport React from \"react\";\nimport ReactMarkdown, { Components } from \"react-markdown\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { vscDarkPlus } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\n// Props for the SafeMarkdown component\ntype SafeMarkdownProps = {\n  /** Markdown text to render (always a string) */\n  children: string;\n  /** Optional CSS className for wrapper */\n  className?: string;\n};\n\n// Custom Markdown renderer for code blocks (uses Prism for highlighting)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 830, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9024aa76-5ae7-4b34-afcb-dd5fe0f9dfca": {"__data__": {"id_": "9024aa76-5ae7-4b34-afcb-dd5fe0f9dfca", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SafeMarkdown.tsx", "file_name": "SafeMarkdown.tsx", "file_size": 3365, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2bd9d066-ded0-4192-ade2-82961bbbe2d7", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SafeMarkdown.tsx", "file_name": "SafeMarkdown.tsx", "file_size": 3365, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8be8ae1073daec9580e2c9f6ed0d71a92d98b1c1831f402a9f6afd9e3ee6d5bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f13331ca-ca94-419a-ae20-6a9cbc9b26dd", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SafeMarkdown.tsx", "file_name": "SafeMarkdown.tsx", "file_size": 3365, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "056a19636f5462cde8807067f8caece8b70d75ded56eb1033b0a56f54a6a4813", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "99f6326e-15ad-40cb-a03e-da44c27e4490", "node_type": "1", "metadata": {}, "hash": "d9520c19d14a2cec34084a37dba5e7a888c932c2d25d8b02746c5717f53f8b4f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const markdownComponents: Components = {\n  code(props) {\n    const { inline, className, children, ...rest } = props as {\n      inline?: boolean;\n      className?: string;\n      children: React.ReactNode;\n    };\n    const match = /language-(\\w+)/.exec(className || \"\");\n    const content = String(children).replace(/\\n$/, \"\");\n\n    if (!inline && match) {\n      return (\n        <SyntaxHighlighter\n          style={vscDarkPlus}\n          language={match[1]}\n          PreTag=\"div\"\n          {...rest}\n        >\n          {content}\n        </SyntaxHighlighter>\n      );\n    }\n\n    return (\n      <code {...(className ? { className } : {})} {...rest}>\n        {content}\n      </code>\n    );\n  },\n  // You can expand here for tables, images, links if needed\n};", "mimetype": "text/plain", "start_char_idx": 831, "end_char_idx": 1587, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "99f6326e-15ad-40cb-a03e-da44c27e4490": {"__data__": {"id_": "99f6326e-15ad-40cb-a03e-da44c27e4490", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SafeMarkdown.tsx", "file_name": "SafeMarkdown.tsx", "file_size": 3365, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2bd9d066-ded0-4192-ade2-82961bbbe2d7", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SafeMarkdown.tsx", "file_name": "SafeMarkdown.tsx", "file_size": 3365, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8be8ae1073daec9580e2c9f6ed0d71a92d98b1c1831f402a9f6afd9e3ee6d5bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9024aa76-5ae7-4b34-afcb-dd5fe0f9dfca", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SafeMarkdown.tsx", "file_name": "SafeMarkdown.tsx", "file_size": 3365, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "e1a9831b4d044ee982b4c7bd2d721067a3537f5d23b939d5a04f04d74ea47af3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6b3fc02f-ac08-454c-bde6-35e08db5848a", "node_type": "1", "metadata": {}, "hash": "e5e9d7f583ecb93825888aa48e98af550e530a7caf48e7115a5b8e7fe7476c1a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "export default", "mimetype": "text/plain", "start_char_idx": 1589, "end_char_idx": 1603, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6b3fc02f-ac08-454c-bde6-35e08db5848a": {"__data__": {"id_": "6b3fc02f-ac08-454c-bde6-35e08db5848a", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SafeMarkdown.tsx", "file_name": "SafeMarkdown.tsx", "file_size": 3365, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2bd9d066-ded0-4192-ade2-82961bbbe2d7", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SafeMarkdown.tsx", "file_name": "SafeMarkdown.tsx", "file_size": 3365, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8be8ae1073daec9580e2c9f6ed0d71a92d98b1c1831f402a9f6afd9e3ee6d5bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "99f6326e-15ad-40cb-a03e-da44c27e4490", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SafeMarkdown.tsx", "file_name": "SafeMarkdown.tsx", "file_size": 3365, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "d993e0a30afcd6965c2df563598eaca34a9bee6e567ec7eec997b0ccfcebc20a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "48a8489a-f5f1-4e70-a88f-2fde713dc413", "node_type": "1", "metadata": {}, "hash": "5898c5aa10e4ba51463845c510dfab40ff3cbf7545cfce26a56cec06aa838d95", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "function SafeMarkdown({ children, className }: SafeMarkdownProps)", "mimetype": "text/plain", "start_char_idx": 1604, "end_char_idx": 1669, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "48a8489a-f5f1-4e70-a88f-2fde713dc413": {"__data__": {"id_": "48a8489a-f5f1-4e70-a88f-2fde713dc413", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SafeMarkdown.tsx", "file_name": "SafeMarkdown.tsx", "file_size": 3365, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2bd9d066-ded0-4192-ade2-82961bbbe2d7", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SafeMarkdown.tsx", "file_name": "SafeMarkdown.tsx", "file_size": 3365, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8be8ae1073daec9580e2c9f6ed0d71a92d98b1c1831f402a9f6afd9e3ee6d5bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6b3fc02f-ac08-454c-bde6-35e08db5848a", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SafeMarkdown.tsx", "file_name": "SafeMarkdown.tsx", "file_size": 3365, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "05519ef6573b822b2c8c7e575587901f042d9fa0e345b493695745ca46353405", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b7da558b-4dc9-4a09-a9a5-ed5ddfb09a5a", "node_type": "1", "metadata": {}, "hash": "977db5346599f9cf8c03b95d519e5f045165956fd1310ef9559c7fb65ec88965", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n  // Dev-only: Warn if a non-string slips through (should never happen in production)\n  if (typeof children !== \"string\" && process.env.NODE_ENV !== \"production\") {\n    console.warn(\n      \"[SafeMarkdown] Expected children to be a string, got:\",\n      typeof children,\n      children\n    );\n  }\n\n  // Always coerce to string for React safety\n  const strChildren =\n    typeof children === \"string\" ? children : children ? String(children) : \"\";\n\n  // Debug: Log if somehow a non-string is still about to render (for final #418 hunting)\n  if (typeof strChildren !== \"string\") {\n    // eslint-disable-next-line no-console\n    console.error(\"SAFE-MARKDOWN-418-DEBUG\", typeof strChildren, strChildren);\n  }\n\n  // Ultra-safe: Escape anything that looks like raw HTML before markdown parsing\n  // (belt-and-suspenders, since skipHtml & disallowedElements are also set)\n  const likelyRawHtml = /<\\s*[a-zA-Z]+[^>]*>/.test(strChildren);", "mimetype": "text/plain", "start_char_idx": 1670, "end_char_idx": 2598, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b7da558b-4dc9-4a09-a9a5-ed5ddfb09a5a": {"__data__": {"id_": "b7da558b-4dc9-4a09-a9a5-ed5ddfb09a5a", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SafeMarkdown.tsx", "file_name": "SafeMarkdown.tsx", "file_size": 3365, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2bd9d066-ded0-4192-ade2-82961bbbe2d7", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SafeMarkdown.tsx", "file_name": "SafeMarkdown.tsx", "file_size": 3365, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8be8ae1073daec9580e2c9f6ed0d71a92d98b1c1831f402a9f6afd9e3ee6d5bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "48a8489a-f5f1-4e70-a88f-2fde713dc413", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SafeMarkdown.tsx", "file_name": "SafeMarkdown.tsx", "file_size": 3365, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "ae5ed21e6aa84cbc3085e7fa02c7eba37e5558186b2017b59b23249d0e205581", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "183f28f4-abdd-4e25-a9e7-11afa266c8d7", "node_type": "1", "metadata": {}, "hash": "e80b708e5db4546748eb7b09b6aa877ea0fd45e20de072184917519c9462fb69", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const safeChildren = likelyRawHtml\n    ? strChildren.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\")\n    : strChildren;\n\n  return (\n    <ReactMarkdown\n      components={markdownComponents}\n      // SECURITY: Never allow any HTML passthrough from markdown\n      skipHtml={true}\n      disallowedElements={[\"html\", \"head\", \"body\", \"style\", \"script\", \"iframe\"]}\n      {...(className ? { className } : {})}\n    >\n      {safeChildren}\n    </ReactMarkdown>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 2601, "end_char_idx": 3053, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "183f28f4-abdd-4e25-a9e7-11afa266c8d7": {"__data__": {"id_": "183f28f4-abdd-4e25-a9e7-11afa266c8d7", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SafeMarkdown.tsx", "file_name": "SafeMarkdown.tsx", "file_size": 3365, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2bd9d066-ded0-4192-ade2-82961bbbe2d7", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SafeMarkdown.tsx", "file_name": "SafeMarkdown.tsx", "file_size": 3365, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "8be8ae1073daec9580e2c9f6ed0d71a92d98b1c1831f402a9f6afd9e3ee6d5bc", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b7da558b-4dc9-4a09-a9a5-ed5ddfb09a5a", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SafeMarkdown.tsx", "file_name": "SafeMarkdown.tsx", "file_size": 3365, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "dbecb755108330053552c7d6f978b208727951acdbca918471dae7a1cc7e1fd5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "/**\n * Usage:\n * <SafeMarkdown>{markdownString}</SafeMarkdown>\n *\n * - NEVER use ReactMarkdown directly in any other file.\n * - All markdown content (LLM, docs, search, context, etc) MUST be rendered via SafeMarkdown.\n * - Always ensure children is a string (coerce using toMDString or similar as needed).\n */", "mimetype": "text/plain", "start_char_idx": 3055, "end_char_idx": 3364, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "722f3bbd-d64f-40f8-bd0f-4deb563ce8c5": {"__data__": {"id_": "722f3bbd-d64f-40f8-bd0f-4deb563ce8c5", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "04c861e3637b95eae6705cf281ddab2822a59066e1b57d62dff9c33e46c95fd0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e3d5c78d-e8c8-4b7e-aafe-225453991b29", "node_type": "1", "metadata": {}, "hash": "8d3cf212ba734a43d1c50e902363ae6ac6b9ca310115642b9aaef35d72fc2d70", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: frontend/src/components/SearchPanel.tsx\n// Purpose: Robust, debounced UI panel for semantic KB search (GET /kb/search).\n//          Now renders result snippets with SafeMarkdown for readable markdown/code.\n// Notes: 2025\u201107\u201101 \u2013 All features preserved; only result snippet rendering is upgraded.\n\n\"use client\";\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { API_ROOT, API_KEY } from \"@/lib/api\";\nimport SafeMarkdown from \"@/components/SafeMarkdown\";\nimport { toMDString } from \"@/lib/toMDString\";\n\nexport type KBResult = {\n  path: string;\n  title: string;\n  snippet: string;\n  updated: string;\n  similarity: number;\n};\n\nconst DEBOUNCE_MS = 400;\nconst TOP_K = 5;\n\nexport default function SearchPanel() {\n  const [query, setQuery] = useState<string>(\"\");\n  const [results, setResults] = useState<KBResult[]>([]);\n  const [loading, setLoading] = useState(false);", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 980, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e3d5c78d-e8c8-4b7e-aafe-225453991b29": {"__data__": {"id_": "e3d5c78d-e8c8-4b7e-aafe-225453991b29", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "04c861e3637b95eae6705cf281ddab2822a59066e1b57d62dff9c33e46c95fd0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "722f3bbd-d64f-40f8-bd0f-4deb563ce8c5", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "a856ea66100c2e1699f6126ababcaf548e67af070f7b82382280d4fe2316c9cc", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "827e849d-8bd2-47c9-8d99-caa5244d5e35", "node_type": "1", "metadata": {}, "hash": "ff3042cecd888b2825552582af4d793e925fb276362f04db1bc6e54c2a581ca5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const [error, setError] = useState<string | null>(null);\n\n  const controllerRef = useRef<AbortController | null>(null);\n  const debounceRef = useRef<ReturnType<typeof setTimeout> | null>(null);\n\n  const clearDebounce = () => {\n    if (debounceRef.current) {\n      clearTimeout(debounceRef.current);\n    }\n  };\n\n  // Core fetch logic", "mimetype": "text/plain", "start_char_idx": 983, "end_char_idx": 1315, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "827e849d-8bd2-47c9-8d99-caa5244d5e35": {"__data__": {"id_": "827e849d-8bd2-47c9-8d99-caa5244d5e35", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "04c861e3637b95eae6705cf281ddab2822a59066e1b57d62dff9c33e46c95fd0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e3d5c78d-e8c8-4b7e-aafe-225453991b29", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "44664a9692fbef6404501fb853adcc7b53885022a41a226788093a13ff17d26c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "aee3df4f-2ae5-4fe5-8604-bb3325037b5d", "node_type": "1", "metadata": {}, "hash": "795c8c7b4a432054ab8c955dad7c939c8bc7b989b115546a9f94e2634b37f82e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const", "mimetype": "text/plain", "start_char_idx": 741, "end_char_idx": 746, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "aee3df4f-2ae5-4fe5-8604-bb3325037b5d": {"__data__": {"id_": "aee3df4f-2ae5-4fe5-8604-bb3325037b5d", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "04c861e3637b95eae6705cf281ddab2822a59066e1b57d62dff9c33e46c95fd0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "827e849d-8bd2-47c9-8d99-caa5244d5e35", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "56db9cddfc23caf2cfe611a100c908b114ebace70dc8fdf6412ed8fb759fa26f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9cecc241-4dc4-4fc1-acfd-358b5e7ef496", "node_type": "1", "metadata": {}, "hash": "87066c8e8806ffa8ad776864dac770971c892efc6fb7d14d232dffbb208a8a1f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "fetchResults =", "mimetype": "text/plain", "start_char_idx": 1324, "end_char_idx": 1338, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9cecc241-4dc4-4fc1-acfd-358b5e7ef496": {"__data__": {"id_": "9cecc241-4dc4-4fc1-acfd-358b5e7ef496", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "04c861e3637b95eae6705cf281ddab2822a59066e1b57d62dff9c33e46c95fd0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "aee3df4f-2ae5-4fe5-8604-bb3325037b5d", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "d4e107d75978d5acc907e46ecc585a9f6b408040da2dc9597120462a45058e3c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "64e76e2a-2114-44d4-8921-8692e36daf94", "node_type": "1", "metadata": {}, "hash": "4d5d6044bba44a3e739686aa18d63d5331a92b94c8d4940970c037690a92f40f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "async (q: string) =>", "mimetype": "text/plain", "start_char_idx": 1339, "end_char_idx": 1359, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "64e76e2a-2114-44d4-8921-8692e36daf94": {"__data__": {"id_": "64e76e2a-2114-44d4-8921-8692e36daf94", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "04c861e3637b95eae6705cf281ddab2822a59066e1b57d62dff9c33e46c95fd0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9cecc241-4dc4-4fc1-acfd-358b5e7ef496", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "e9d153d07ea7e3ccab19de9515033f9d6387d80a8974e3f77d46cfd5dfe478f6", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3c32dcb1-fd27-4e78-bcbf-d93c81a2de96", "node_type": "1", "metadata": {}, "hash": "3cb33488aebaf055710a419dbf7daa13ebb518643fac70486de0c6162be255b4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n    if (!API_ROOT) {\n      setError(\"API URL not configured\");\n      return;\n    }\n    if (!API_KEY) {\n      setError(\"API key missing\");\n      return;\n    }\n\n    setError(null);\n    setLoading(true);\n\n    controllerRef.current?.abort();\n    const controller = new AbortController();\n    controllerRef.current = controller;", "mimetype": "text/plain", "start_char_idx": 1360, "end_char_idx": 1685, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3c32dcb1-fd27-4e78-bcbf-d93c81a2de96": {"__data__": {"id_": "3c32dcb1-fd27-4e78-bcbf-d93c81a2de96", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "04c861e3637b95eae6705cf281ddab2822a59066e1b57d62dff9c33e46c95fd0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "64e76e2a-2114-44d4-8921-8692e36daf94", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "58f8271cc334430020b4c5992de4abd3b58646d3c7a64d056977294dab748bb8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5c0f139-58b7-49eb-98f4-b48cbeb5626c", "node_type": "1", "metadata": {}, "hash": "c87e6a8ffddb665ed5fc046a50869693ed5b054aef1de2fe1c5b49c6e548b924", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "try {\n      const url = new URL(\"/kb/search\", API_ROOT);\n      url.searchParams.set(\"query\", q);\n      url.searchParams.set(\"k\", String(TOP_K));\n\n      const res = await fetch(url.toString(), {\n        method: \"GET\",\n        headers: {\n          \"x-api-key\": API_KEY,\n          Accept: \"application/json\",\n        },\n        signal: controller.signal,\n      });\n\n      if (res.status === 401 || res.status === 403) {\n        throw new Error(\"Unauthorized \u2013 check API key / login\");\n      }\n      if (!res.ok) {\n        throw new Error(`HTTP ${res.status}`);\n      }\n\n      const data: KBResult[] = await res.json();\n      const mapped = data.map((r) => ({\n        ...r,\n        snippet: toMDString(r.snippet),\n      }));\n      setResults(mapped);\n    } catch (err) {\n      if (err instanceof DOMException && err.name === \"AbortError\") {\n        return; // request was cancelled\n      }\n      console.error(\"KB search error\", err);\n      setError((err as Error).message ?? \"Search failed\");\n    }", "mimetype": "text/plain", "start_char_idx": 1691, "end_char_idx": 2686, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e5c0f139-58b7-49eb-98f4-b48cbeb5626c": {"__data__": {"id_": "e5c0f139-58b7-49eb-98f4-b48cbeb5626c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "04c861e3637b95eae6705cf281ddab2822a59066e1b57d62dff9c33e46c95fd0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3c32dcb1-fd27-4e78-bcbf-d93c81a2de96", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "ebc11ba168cab1a827498e43107cfcfa33ecb4d9e2b9cc260a74460f54214983", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c03ee43a-ed1c-4310-be80-9971408909fd", "node_type": "1", "metadata": {}, "hash": "ffe8598133515839511bd3c79d5020e7833a42da810b6be161a09c49dc2a0cd7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "finally {\n      setLoading(false);\n    }", "mimetype": "text/plain", "start_char_idx": 2687, "end_char_idx": 2727, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c03ee43a-ed1c-4310-be80-9971408909fd": {"__data__": {"id_": "c03ee43a-ed1c-4310-be80-9971408909fd", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "04c861e3637b95eae6705cf281ddab2822a59066e1b57d62dff9c33e46c95fd0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e5c0f139-58b7-49eb-98f4-b48cbeb5626c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "f6f82ebd26c0dfc609fc27b7a8b77671485510a53a1056a1bf50d46ae406ea1e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "095ec695-443d-435e-ba39-3b04a452f1c5", "node_type": "1", "metadata": {}, "hash": "8a4d276f0273b229fe098e9063c83e7765f4ee71b7feb6e94f8cf68de6c1966f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "}", "mimetype": "text/plain", "start_char_idx": 358, "end_char_idx": 359, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "095ec695-443d-435e-ba39-3b04a452f1c5": {"__data__": {"id_": "095ec695-443d-435e-ba39-3b04a452f1c5", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "04c861e3637b95eae6705cf281ddab2822a59066e1b57d62dff9c33e46c95fd0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c03ee43a-ed1c-4310-be80-9971408909fd", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "2e1b0ec0620bbbe19562d51918a77f963c145214f8e2b54c25b40745655ce4d8", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "619acef1-d2c4-4104-943c-2d3545ec6a2d", "node_type": "1", "metadata": {}, "hash": "730b899743bdbfed973820f6f13cbb5b19feacd4d7375320374468e8073c7622", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ";", "mimetype": "text/plain", "start_char_idx": 260, "end_char_idx": 261, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "619acef1-d2c4-4104-943c-2d3545ec6a2d": {"__data__": {"id_": "619acef1-d2c4-4104-943c-2d3545ec6a2d", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "04c861e3637b95eae6705cf281ddab2822a59066e1b57d62dff9c33e46c95fd0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "095ec695-443d-435e-ba39-3b04a452f1c5", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "6ed7f9758af93bae6753ce2c868a5336342649b2b4593273e0443ae0c11bac9e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e0c2153e-a6dc-4a66-9e5f-5dd8ca7abc8d", "node_type": "1", "metadata": {}, "hash": "df16cbd6e1a022fff46817245bfbfa63f6d279c11e27e10a169ed2a493b7ad86", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// Debounce typing\n  useEffect(() => {\n    if (!query.trim()) {\n      setResults([]);\n      setError(null);\n      return;\n    }\n\n    clearDebounce();\n    debounceRef.current = setTimeout(() => fetchResults(query.trim()), DEBOUNCE_MS);\n\n    return () => {\n      clearDebounce();\n    };\n  }, [query]);\n\n  const onSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    clearDebounce();\n    fetchResults(query.trim());\n  };\n\n  for (const r of results) {\n    if (typeof r.snippet !== \"string\") {\n      console.log(\"DEBUG 418:\", typeof r.snippet, r.snippet);\n    }\n  }\n\n  return (\n    <div className=\"space-y-4\" aria-busy={loading}>\n      <form onSubmit={onSubmit} className=\"flex gap-2\">\n        <label htmlFor=\"kb-query\" className=\"sr-only\">\n          Search knowledge base\n        </label>\n        <Input\n          id=\"kb-query\"\n          placeholder=\"Ask a question\u2026\"\n          value={query}\n          onChange={(e) =>", "mimetype": "text/plain", "start_char_idx": 2736, "end_char_idx": 3660, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e0c2153e-a6dc-4a66-9e5f-5dd8ca7abc8d": {"__data__": {"id_": "e0c2153e-a6dc-4a66-9e5f-5dd8ca7abc8d", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "04c861e3637b95eae6705cf281ddab2822a59066e1b57d62dff9c33e46c95fd0", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "619acef1-d2c4-4104-943c-2d3545ec6a2d", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/SearchPanel.tsx", "file_name": "SearchPanel.tsx", "file_size": 4672, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "05283775b4ae4b8195ad81673c95326221a9864fa2a4961eadc38887ca24e451", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "setQuery(e.target.value)}\n        />\n        <Button type=\"submit\" disabled={loading}>\n          {loading ? \"\u23f3\" : \"Search\"}\n        </Button>\n      </form>\n\n      {error ? <p className=\"text-sm text-red-500\">{error}</p> : null}\n\n      {results.length > 0 && (\n        <div className=\"space-y-2\">\n          {results.map((r, i) => (\n            <article key={i} className=\"border rounded p-4 text-sm space-y-1\">\n              <header className=\"text-muted-foreground\">\n                <strong>{r.title}</strong> ({r.similarity.toFixed(2)})\n              </header>\n              <div className=\"mb-1\">\n                <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n                  <SafeMarkdown>{r.snippet}</SafeMarkdown>\n                </div>\n              </div>\n              <footer className=\"text-xs text-muted-foreground\">\n                Updated: {r.updated || \"\u2014\"}\n              </footer>\n            </article>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 3661, "end_char_idx": 4657, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f484cc59-0461-4485-81bd-b5c50b972a27": {"__data__": {"id_": "f484cc59-0461-4485-81bd-b5c50b972a27", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Sidebar/Sidebar.tsx", "file_name": "Sidebar.tsx", "file_size": 1570, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a4b71e2f-e809-403a-9f50-cf61d5943de1", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Sidebar/Sidebar.tsx", "file_name": "Sidebar.tsx", "file_size": 1570, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "25a866919303f63b276b7ac2ca0fa937e8939548f7d1626e45cee91e3b438b18", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a6275afa-d11f-4fae-9e86-2754215979bb", "node_type": "1", "metadata": {}, "hash": "2beee1d502879a1d2ad79a9f79bbfd7b146aa5505b54d387c003d20a558e3797", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: src/components/Sidebar/Sidebar.tsx\n\"use client\";\n\nconsole.log(\"Sidebar mounted\");\n\nimport Image from \"next/image\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\n\nconst links = [\n  { href: \"/ask\", label: \"Ask Echo\", icon: \"/Hoody.png\" },\n  { href: \"/codex\", label: \"Codex\", icon: \"/PlannerCop.png\" },\n  { href: \"/docs\", label: \"Docs\", icon: \"/PigTails.png\" },\n  { href: \"/control\", label: \"Control\", icon: \"/Echo.png\" },\n  { href: \"/planner\", label: \"Planner\", icon: \"/ballcap beard.png\" },\n  { href: \"/email\", label: \"Email\", icon: \"/blackbeard earing.png\" },\n  { href: \"/critic\", label: \"Critic\", icon: \"/beanie and smoke.png\" },\n  { href: \"/janitor\", label: \"Janitor\", icon: \"/sunglass shadow.png\" },\n];", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 745, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a6275afa-d11f-4fae-9e86-2754215979bb": {"__data__": {"id_": "a6275afa-d11f-4fae-9e86-2754215979bb", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Sidebar/Sidebar.tsx", "file_name": "Sidebar.tsx", "file_size": 1570, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a4b71e2f-e809-403a-9f50-cf61d5943de1", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Sidebar/Sidebar.tsx", "file_name": "Sidebar.tsx", "file_size": 1570, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "25a866919303f63b276b7ac2ca0fa937e8939548f7d1626e45cee91e3b438b18", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f484cc59-0461-4485-81bd-b5c50b972a27", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/Sidebar/Sidebar.tsx", "file_name": "Sidebar.tsx", "file_size": 1570, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "128224c3983bdd99958b345c1e3a3203adb1710c150b7650155b0457bffcf727", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "export default function Sidebar() {\n  const pathname = usePathname();\n\n  return (\n    <aside className=\"w-48 bg-white border-r p-3 space-y-2\">\n      <h2 className=\"text-lg font-bold flex items-center gap-2\">\n        <Image src=\"/WildfireMang.png\" alt=\"logo\" width={24} height={24} />\n        Wildfire Ranch\n      </h2>\n      <nav className=\"mt-4 space-y-2 text-sm\">\n        {links.map(({ href, label, icon }) => (\n          <Link\n            key={href}\n            href={href}\n            className={`flex items-center gap-2 px-2 py-1 rounded hover:bg-gray-100 ${\n              pathname === href ? \"bg-blue-100 font-semibold\" : \"\"\n            }`}\n          >\n            <Image src={icon} alt={label} width={24} height={24} />\n            <span>{label}</span>\n          </Link>\n        ))}\n      </nav>\n    </aside>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 747, "end_char_idx": 1569, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e00f2927-a5e5-4eeb-8566-03a9050b87b7": {"__data__": {"id_": "e00f2927-a5e5-4eeb-8566-03a9050b87b7", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2edfdd61-050f-416a-bf10-e47dd41ac061", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "28e2fbd96f1a8af930120ce91e2d27aa3b0e08ed19b449fd6b9cc7d4dd6f1142", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fee65fdf-192b-42ad-af9a-749f74b16591", "node_type": "1", "metadata": {}, "hash": "d9520c19d14a2cec34084a37dba5e7a888c932c2d25d8b02746c5717f53f8b4f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: components/StatusPanel.tsx\n// Directory: frontend/src/components\n// Purpose: Display Relay service status and embed a UI panel for Google Docs sync and KB/context awareness\n\n\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport DocsSyncPanel from \"@/components/DocsSyncPanel\";\nimport { API_ROOT } from \"@/lib/api\";\n\ninterface StatusSummary {\n  version?: { git_commit?: string };\n  paths?: {\n    base_path?: string;\n    resolved_paths?: Record<string, boolean>;\n  };\n}\n\ninterface ContextFile {\n  path: string;\n  size_bytes: number;\n  last_modified: string;\n}\n\ninterface ContextStatus {\n  context_files: ContextFile[];\n  global_context_used: string;\n  global_context_manual_last_updated: string;\n  global_context_auto_last_updated: string;\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 819, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fee65fdf-192b-42ad-af9a-749f74b16591": {"__data__": {"id_": "fee65fdf-192b-42ad-af9a-749f74b16591", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2edfdd61-050f-416a-bf10-e47dd41ac061", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "28e2fbd96f1a8af930120ce91e2d27aa3b0e08ed19b449fd6b9cc7d4dd6f1142", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e00f2927-a5e5-4eeb-8566-03a9050b87b7", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "fb703acbaddcd7af4e8b84055d487691bf72928a62093654c160bb21d9f91dff", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e421a7ed-7631-4270-b20f-b7965f6bd581", "node_type": "1", "metadata": {}, "hash": "3980caa61256b4dd1d7177c275aa1848e108259330485b08200a01d9d295008e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "export default", "mimetype": "text/plain", "start_char_idx": 821, "end_char_idx": 835, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e421a7ed-7631-4270-b20f-b7965f6bd581": {"__data__": {"id_": "e421a7ed-7631-4270-b20f-b7965f6bd581", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2edfdd61-050f-416a-bf10-e47dd41ac061", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "28e2fbd96f1a8af930120ce91e2d27aa3b0e08ed19b449fd6b9cc7d4dd6f1142", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fee65fdf-192b-42ad-af9a-749f74b16591", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "2af1498fac9522c451e20421ec133bda08c1c8726f6f5cd11471fa5392cc78a4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9d9e4f2c-9c81-47c4-949c-805c72211892", "node_type": "1", "metadata": {}, "hash": "120b925b9a62d46fbdd084e8c7f7949c32c22a51426559a4ac9bc975003c2d7a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "function StatusPanel()", "mimetype": "text/plain", "start_char_idx": 836, "end_char_idx": 858, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9d9e4f2c-9c81-47c4-949c-805c72211892": {"__data__": {"id_": "9d9e4f2c-9c81-47c4-949c-805c72211892", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2edfdd61-050f-416a-bf10-e47dd41ac061", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "28e2fbd96f1a8af930120ce91e2d27aa3b0e08ed19b449fd6b9cc7d4dd6f1142", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e421a7ed-7631-4270-b20f-b7965f6bd581", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "7dcc78fe370125a39f448cbc742e05d7e8f236701043cb1e7917546268799186", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "ad0c9e91-8446-4ba2-aa55-1c5629157e23", "node_type": "1", "metadata": {}, "hash": "4e2a6ebe1b6f4e326926c5281806ae53fe4edb455d3bf4ba204e69199f09a69d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n  const [status, setStatus] = useState<StatusSummary | null>(null);\n  const [context, setContext] = useState<ContextStatus | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);", "mimetype": "text/plain", "start_char_idx": 859, "end_char_idx": 1114, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "ad0c9e91-8446-4ba2-aa55-1c5629157e23": {"__data__": {"id_": "ad0c9e91-8446-4ba2-aa55-1c5629157e23", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2edfdd61-050f-416a-bf10-e47dd41ac061", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "28e2fbd96f1a8af930120ce91e2d27aa3b0e08ed19b449fd6b9cc7d4dd6f1142", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9d9e4f2c-9c81-47c4-949c-805c72211892", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "4b5d6031e636654d0395772bc544f9797a44303da22309d50c13ed202800fec3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "d8a0d61c-1c3d-4e98-af99-faf25d0046af", "node_type": "1", "metadata": {}, "hash": "1eee65f859c75b5acd5d4b40140ce21e68420bc94b74ae4bfd76f4284dea0ac5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "useEffect(() => {\n    async function fetchStatus() {\n      if (!API_ROOT) {\n        setError(\"API URL not configured.\");\n        setLoading(false);\n        return;\n      }\n      try {\n        const [statusRes, contextRes] = await Promise.all([\n          fetch(`${API_ROOT}/status/summary`),\n          fetch(`${API_ROOT}/status/context`),\n        ]);\n        if (!statusRes.ok || !contextRes.ok)\n          throw new Error(\"Failed to fetch one or more endpoints\");\n        const statusData: StatusSummary = await statusRes.json();\n        const contextData: ContextStatus = await contextRes.json();\n        setStatus(statusData);\n        setContext(contextData);\n      } catch (err) {\n        console.error(\"Status fetch error:\", err);\n        setError(\"Failed to load status.\");\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchStatus();\n  }, []);", "mimetype": "text/plain", "start_char_idx": 1118, "end_char_idx": 1983, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d8a0d61c-1c3d-4e98-af99-faf25d0046af": {"__data__": {"id_": "d8a0d61c-1c3d-4e98-af99-faf25d0046af", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2edfdd61-050f-416a-bf10-e47dd41ac061", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "28e2fbd96f1a8af930120ce91e2d27aa3b0e08ed19b449fd6b9cc7d4dd6f1142", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "ad0c9e91-8446-4ba2-aa55-1c5629157e23", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "39f3088cab3e555eeb02284b84bdd63b500f43487c160632fb31f37aff420355", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6bae6f79-ff0a-4b41-814c-0f2e89dfa621", "node_type": "1", "metadata": {}, "hash": "50e18e0bf373a981d5bae1d39b8410243c7b8cc4fcab04a066be21e0eda31e6b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if (loading) return <p className=\"text-sm text-muted-foreground\">Loading service status\u2026</p>;\n  if (error) return <p className=\"text-sm text-red-500\">{error}", "mimetype": "text/plain", "start_char_idx": 1987, "end_char_idx": 2144, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6bae6f79-ff0a-4b41-814c-0f2e89dfa621": {"__data__": {"id_": "6bae6f79-ff0a-4b41-814c-0f2e89dfa621", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2edfdd61-050f-416a-bf10-e47dd41ac061", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "28e2fbd96f1a8af930120ce91e2d27aa3b0e08ed19b449fd6b9cc7d4dd6f1142", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d8a0d61c-1c3d-4e98-af99-faf25d0046af", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "c64e9871460467038de6c253de08806c678d45a4391016f2ae1ea3f844e0983b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "40e2a733-6303-432e-aa68-70822c0d56a5", "node_type": "1", "metadata": {}, "hash": "cb39d9c7ef001ce8d5caf7296cb8f8bd3eac4f935014fdc3d94d269f9fcc01d6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "</p>;\n  if (!status) return <p className=\"text-sm\">No status data available.</p>;\n\n  return (\n    <>\n      <Card className=\"mt-6\">\n        <CardContent className=\"p-4 space-y-3\">\n          <h2 className=\"text-xl font-bold\">\ud83d\udcca Relay Service Status</h2>\n          <div><strong>Version:</strong> {status.version?.git_commit || \"unknown\"}</div>\n          <div><strong>Base Path:</strong> {status.paths?.base_path || \"\u2014\"}</div>\n          <div>\n            <strong>Docs Folder Health:</strong>\n            <ul className=\"list-disc ml-6\">\n              {Object.entries(status.paths?.resolved_paths || {}).map(\n                ([pathKey, ok]) => (\n                  <li key={pathKey} className=\"text-sm\">\n                    {pathKey}: {ok ? \"\u2705 OK\" : \"\u274c Missing\"}\n                  </li>\n                )\n              )", "mimetype": "text/plain", "start_char_idx": 2144, "end_char_idx": 2956, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "40e2a733-6303-432e-aa68-70822c0d56a5": {"__data__": {"id_": "40e2a733-6303-432e-aa68-70822c0d56a5", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2edfdd61-050f-416a-bf10-e47dd41ac061", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "28e2fbd96f1a8af930120ce91e2d27aa3b0e08ed19b449fd6b9cc7d4dd6f1142", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6bae6f79-ff0a-4b41-814c-0f2e89dfa621", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "1f02782804dfc5beb0480a384138c4d216c0df4d3c48e1fbb79053bfef137abe", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "bc2f4bfe-9d4e-401f-9067-869b3f24815b", "node_type": "1", "metadata": {}, "hash": "2e0f3612bed0e60f88f115b76af251da6145fa90a6bce753efb689f2606f2e89", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "}\n            </ul>\n          </div>\n        </CardContent>\n      </Card>\n\n      {context && (", "mimetype": "text/plain", "start_char_idx": 2956, "end_char_idx": 3050, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "bc2f4bfe-9d4e-401f-9067-869b3f24815b": {"__data__": {"id_": "bc2f4bfe-9d4e-401f-9067-869b3f24815b", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2edfdd61-050f-416a-bf10-e47dd41ac061", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "28e2fbd96f1a8af930120ce91e2d27aa3b0e08ed19b449fd6b9cc7d4dd6f1142", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "40e2a733-6303-432e-aa68-70822c0d56a5", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "e6bf7e934c3da95f3e1a2a23eb05e6e3b27207a707b40a5c8c488ac08ca20226", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a403ca78-062e-4885-a1ad-6bd3215c970c", "node_type": "1", "metadata": {}, "hash": "68ac879f56e49e79c20c7f3b908c8f68eb38534a689daa7f41a2f0f04045f51a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<Card className=\"mt-6\">\n          <CardContent className=\"p-4 space-y-3\">\n            <h2 className=\"text-xl font-bold\">\ud83e\udde0 Context Awareness</h2>\n            <div><strong>Context Strategy:</strong> {context.global_context_used === \"manual\" ? \"\ud83d\udcdd Manual\" : context.global_context_used === \"auto\" ? \"\ud83e\udd16 Auto-generated\" : \"None\"}</div>\n            <div><strong>Last Manual Update:</strong> {context.global_context_manual_last_updated}</div>\n            <div><strong>Last Auto Update:</strong> {context.global_context_auto_last_updated}</div>\n            <div>\n              <strong>Active Context Files:</strong>", "mimetype": "text/plain", "start_char_idx": 3059, "end_char_idx": 3665, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a403ca78-062e-4885-a1ad-6bd3215c970c": {"__data__": {"id_": "a403ca78-062e-4885-a1ad-6bd3215c970c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2edfdd61-050f-416a-bf10-e47dd41ac061", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "28e2fbd96f1a8af930120ce91e2d27aa3b0e08ed19b449fd6b9cc7d4dd6f1142", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "bc2f4bfe-9d4e-401f-9067-869b3f24815b", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "cada1fbc9c81d7bfbaea48b30db78a8729be86492246fba7c59d84012a4b259a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f156e9a4-5c3d-4cb4-b354-24ff1ab3866c", "node_type": "1", "metadata": {}, "hash": "9263536d1fddc636838c1be37772f0ce3c1f58be1c137fe1a4498be03be8d642", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<ul className=\"list-disc ml-6\">\n                {context.context_files.map((file) => (\n                  <li key={file.path} className=\"text-sm\">\n                    {file.path}{\" \"}\n                    <span className=\"text-xs text-gray-500\">\n                      ({Math.round(file.size_bytes / 1024)} KB,\n                      {\" \"}\n                      {new Date(file.last_modified).toLocaleString()})\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            </div", "mimetype": "text/plain", "start_char_idx": 3680, "end_char_idx": 4196, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f156e9a4-5c3d-4cb4-b354-24ff1ab3866c": {"__data__": {"id_": "f156e9a4-5c3d-4cb4-b354-24ff1ab3866c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2edfdd61-050f-416a-bf10-e47dd41ac061", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "28e2fbd96f1a8af930120ce91e2d27aa3b0e08ed19b449fd6b9cc7d4dd6f1142", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a403ca78-062e-4885-a1ad-6bd3215c970c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/StatusPanel.tsx", "file_name": "StatusPanel.tsx", "file_size": 4399, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3fe71d9c18208d4f0816b4a610bfc5fb44cbfebf1e762e4d470c5a921f0d5dda", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ">\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Embed DocsSyncPanel below status */}\n      <div className=\"mt-6\">\n        <DocsSyncPanel />\n      </div>\n    </>\n  );\n}", "mimetype": "text/plain", "start_char_idx": 4196, "end_char_idx": 4378, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f7c71597-15b0-41e0-bc3d-18d088f9e541": {"__data__": {"id_": "f7c71597-15b0-41e0-bc3d-18d088f9e541", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.stories.tsx", "file_name": "Dashboard.stories.tsx", "file_size": 152, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "d327fcf8-5435-4a3e-a4a2-6ef6dcb6118f", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.stories.tsx", "file_name": "Dashboard.stories.tsx", "file_size": 152, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "d0c34ce6bd12b6924eada8600f5c8ff9c5c40d89d138d34514a2a6160635a544", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import Dashboard from \"./Dashboard\";\nexport default {\n  title: \"Dashboard/Main\",\n  component: Dashboard,\n};\nexport const Default = () => <Dashboard />;", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 151, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a11e0066-3d0f-422f-a64d-ffc3a3cdb7dc": {"__data__": {"id_": "a11e0066-3d0f-422f-a64d-ffc3a3cdb7dc", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c0a1310d5483d7809a093bb545456daaef5e8357c64ebe648b3e48de9e4c490", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b95fb25a-2aae-45f1-95cd-16b2a68b4ed9", "node_type": "1", "metadata": {}, "hash": "87b3bd9fbece70c379fcfa6f69d3a573e200bf0831c3d9aa60ce1725e0778b6c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: DashboardWizard.tsx\n// Directory: frontend/src/components/dashboard\n// Purpose: Multi-step, animated setup wizard for Command Center dashboard onboarding.\n//   - Built with shadcn/ui components for consistent styling\n//   - Uses Framer Motion for smooth step transitions\n//   - Easy to customize steps/fields for your infra/ops flows\n\n\"use client\";\nimport { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { AnimatePresence, motion } from \"framer-motion\";\n\n// ---- Wizard step definitions ----\n// Each step defines a title and content (could use form logic, API calls, etc)", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 796, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b95fb25a-2aae-45f1-95cd-16b2a68b4ed9": {"__data__": {"id_": "b95fb25a-2aae-45f1-95cd-16b2a68b4ed9", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c0a1310d5483d7809a093bb545456daaef5e8357c64ebe648b3e48de9e4c490", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a11e0066-3d0f-422f-a64d-ffc3a3cdb7dc", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "84b081abf3bc11692ce4de8dca07c11f21986a4636dac32111833884c6df3efa", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0feaba67-a349-4508-878e-cf2b14914aad", "node_type": "1", "metadata": {}, "hash": "d9520c19d14a2cec34084a37dba5e7a888c932c2d25d8b02746c5717f53f8b4f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const steps = [\n  {\n    title: \"Connect Infrastructure\",\n    content: (\n      <>\n        <p className=\"mb-4 text-sm text-muted-foreground\">\n          Connect your infrastructure to begin tracking data.\n        </p>\n        <Input placeholder=\"Enter node endpoint or IP\" />\n      </>\n    ),\n  },\n  {\n    title: \"Add Notification Channel\",\n    content: (\n      <>\n        <p className=\"mb-4 text-sm text-muted-foreground\">\n          Add email or webhook to get alerts on events.\n        </p>\n        <Input placeholder=\"Email or webhook URL\" />\n      </>\n    ),\n  },\n  {\n    title: \"Finish Setup\",\n    content: (\n      <>\n        <p className=\"mb-4 text-sm text-muted-foreground\">\n          You\u2019re ready! Start using the Command Center.\n        </p>\n        <ul className=\"list-disc text-xs pl-5 text-muted-foreground\">\n          <li>Monitor live data</li>\n          <li>Configure automations</li>\n          <li>Access analytics & reports</li>\n        </ul>\n      </>\n    ),\n  },\n];", "mimetype": "text/plain", "start_char_idx": 797, "end_char_idx": 1777, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0feaba67-a349-4508-878e-cf2b14914aad": {"__data__": {"id_": "0feaba67-a349-4508-878e-cf2b14914aad", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c0a1310d5483d7809a093bb545456daaef5e8357c64ebe648b3e48de9e4c490", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b95fb25a-2aae-45f1-95cd-16b2a68b4ed9", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "d1c3aa0faa57ce42699d770e1b43ceecb54700605a1373348ed9731b678d6aa3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16a91c21-338b-4953-bdad-3c781692bf55", "node_type": "1", "metadata": {}, "hash": "3c2feefa66ff7a290d79676d43e206ef4bb41863b02e05785db71b5c04021613", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "export default", "mimetype": "text/plain", "start_char_idx": 1779, "end_char_idx": 1793, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "16a91c21-338b-4953-bdad-3c781692bf55": {"__data__": {"id_": "16a91c21-338b-4953-bdad-3c781692bf55", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c0a1310d5483d7809a093bb545456daaef5e8357c64ebe648b3e48de9e4c490", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0feaba67-a349-4508-878e-cf2b14914aad", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "a8e66dbb24612b913dab51df4da2d4062725234cbf25452d7d04c3085c4b737e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0d677361-7907-4cf1-babf-49060e598988", "node_type": "1", "metadata": {}, "hash": "6ddd1d9c79d5041f919625f3b28bb49d0923bbfa778c12250906b9ca63174069", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "function DashboardWizard()", "mimetype": "text/plain", "start_char_idx": 1794, "end_char_idx": 1820, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0d677361-7907-4cf1-babf-49060e598988": {"__data__": {"id_": "0d677361-7907-4cf1-babf-49060e598988", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c0a1310d5483d7809a093bb545456daaef5e8357c64ebe648b3e48de9e4c490", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "16a91c21-338b-4953-bdad-3c781692bf55", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "0ef4eb66bfe29746ff670a6c66ed5bfde5bf16ee815f357d4258486685e83986", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9946ae2d-ca1e-4100-a222-7c469589601b", "node_type": "1", "metadata": {}, "hash": "cd9873448821684d53c2e93285c66e252cb361453d0aa4e3e749306ac01a8445", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n  // ---- State: Current wizard step ----\n  const [step, setStep] = useState(0);\n\n  // ---- Step navigation handlers ----\n  const next = () => setStep((s) => Math.min(s + 1, steps.length - 1));\n  const prev = () => setStep((s) => Math.max(s - 1, 0));", "mimetype": "text/plain", "start_char_idx": 1821, "end_char_idx": 2073, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9946ae2d-ca1e-4100-a222-7c469589601b": {"__data__": {"id_": "9946ae2d-ca1e-4100-a222-7c469589601b", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c0a1310d5483d7809a093bb545456daaef5e8357c64ebe648b3e48de9e4c490", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0d677361-7907-4cf1-babf-49060e598988", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "b2629f8f4eff7eab6d1d15d14ec8e5a7d7db5b9e7c46aab6cce6ad045e01e25e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b602fb52-f879-4965-9cca-3bd425c4b434", "node_type": "1", "metadata": {}, "hash": "436a9b2e7c2aeaccc4bcb04d2c9c033a67cfcf5a8f3d0a0ab54d8b264e69b0b7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "return", "mimetype": "text/plain", "start_char_idx": 2077, "end_char_idx": 2083, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b602fb52-f879-4965-9cca-3bd425c4b434": {"__data__": {"id_": "b602fb52-f879-4965-9cca-3bd425c4b434", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c0a1310d5483d7809a093bb545456daaef5e8357c64ebe648b3e48de9e4c490", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9946ae2d-ca1e-4100-a222-7c469589601b", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "16987207ad2e3780a35d337539de700f4eb7d6b4b56aedc3a8847919dda9ff31", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "690eb51c-e255-4795-8f76-93462726ce73", "node_type": "1", "metadata": {}, "hash": "4995294994129b76c74c873f58a008fe66c9f085c23d9ec58565770ebb21dd54", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "(", "mimetype": "text/plain", "start_char_idx": 758, "end_char_idx": 759, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "690eb51c-e255-4795-8f76-93462726ce73": {"__data__": {"id_": "690eb51c-e255-4795-8f76-93462726ce73", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c0a1310d5483d7809a093bb545456daaef5e8357c64ebe648b3e48de9e4c490", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "b602fb52-f879-4965-9cca-3bd425c4b434", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "a1a41efccbada081c9fbb0e0b1452b402b70cdbf37e948af57630bc09fda5abb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0be08f95-6279-45e5-93b7-b07f2d8af16a", "node_type": "1", "metadata": {}, "hash": "eb5336a10c82a0d9497646f69a21a23b745cd91a4d197baced54e00905b9eecd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<Card", "mimetype": "text/plain", "start_char_idx": 2090, "end_char_idx": 2095, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0be08f95-6279-45e5-93b7-b07f2d8af16a": {"__data__": {"id_": "0be08f95-6279-45e5-93b7-b07f2d8af16a", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c0a1310d5483d7809a093bb545456daaef5e8357c64ebe648b3e48de9e4c490", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "690eb51c-e255-4795-8f76-93462726ce73", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "f47ecb3ba660f7c69281d5b7cf28cb279b552fefbcfa94fb93ca0d5b8a2d9e38", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "744094f9-62f9-4a69-9ac8-345aa016f948", "node_type": "1", "metadata": {}, "hash": "741b162082cac10d8bf251b2964f1d84526fac00d3035b2999ea3daf5a49ec00", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "className=", "mimetype": "text/plain", "start_char_idx": 889, "end_char_idx": 899, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "744094f9-62f9-4a69-9ac8-345aa016f948": {"__data__": {"id_": "744094f9-62f9-4a69-9ac8-345aa016f948", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c0a1310d5483d7809a093bb545456daaef5e8357c64ebe648b3e48de9e4c490", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0be08f95-6279-45e5-93b7-b07f2d8af16a", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "afcc23a3691812ff4f93cfcc9aadf37fea9c1ce9062590526b4e45e838c772f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5c0aa4b0-3ff3-4030-9859-6d05fe304a45", "node_type": "1", "metadata": {}, "hash": "9e895cd6e45800dd271a481840c3e40a65fac7a016e63836a8b2c0b54dee2e09", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"max-w-md mx-auto shadow-2xl\">", "mimetype": "text/plain", "start_char_idx": 2106, "end_char_idx": 2136, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5c0aa4b0-3ff3-4030-9859-6d05fe304a45": {"__data__": {"id_": "5c0aa4b0-3ff3-4030-9859-6d05fe304a45", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c0a1310d5483d7809a093bb545456daaef5e8357c64ebe648b3e48de9e4c490", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "744094f9-62f9-4a69-9ac8-345aa016f948", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "e2e749992a765e72b4e0f29e524d06c15f3f7fc340f73a51a656d34eca85ae89", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "9abe5a86-6024-44de-8522-89b04ea32266", "node_type": "1", "metadata": {}, "hash": "1649c05efdc1edfaf362c8643f4634f453e7d430b630a998e913d5f44061dc65", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<CardHeader>", "mimetype": "text/plain", "start_char_idx": 2143, "end_char_idx": 2155, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9abe5a86-6024-44de-8522-89b04ea32266": {"__data__": {"id_": "9abe5a86-6024-44de-8522-89b04ea32266", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c0a1310d5483d7809a093bb545456daaef5e8357c64ebe648b3e48de9e4c490", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5c0aa4b0-3ff3-4030-9859-6d05fe304a45", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "e873130896dbc0104206d0ffb7aa0fb92f9345c4767824d3a2abcf1b50aa304c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "eda23e01-bc38-4492-905c-b6f3f006a1bd", "node_type": "1", "metadata": {}, "hash": "28d2bbe8714f98615b9e9fc109e94c5e89fc81827c0494f910063be1a104634b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "<CardTitle>\n          Setup", "mimetype": "text/plain", "start_char_idx": 2164, "end_char_idx": 2191, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eda23e01-bc38-4492-905c-b6f3f006a1bd": {"__data__": {"id_": "eda23e01-bc38-4492-905c-b6f3f006a1bd", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c0a1310d5483d7809a093bb545456daaef5e8357c64ebe648b3e48de9e4c490", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "9abe5a86-6024-44de-8522-89b04ea32266", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "8191b993f7d5f5056a50bde9793db2ce6a0b6d2f9f6b199e036c320066fdf9e3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "efa51467-af25-4140-90db-8db3e00a689b", "node_type": "1", "metadata": {}, "hash": "eb5336a10c82a0d9497646f69a21a23b745cd91a4d197baced54e00905b9eecd", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Wizard\n          <span", "mimetype": "text/plain", "start_char_idx": 2192, "end_char_idx": 2214, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "efa51467-af25-4140-90db-8db3e00a689b": {"__data__": {"id_": "efa51467-af25-4140-90db-8db3e00a689b", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c0a1310d5483d7809a093bb545456daaef5e8357c64ebe648b3e48de9e4c490", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "eda23e01-bc38-4492-905c-b6f3f006a1bd", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "e70c7ab95cbaa7cafc73cedbb44fcdd22be4d85c8db809992817b10379acd78a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a3030715-6fd5-4cf8-8f46-01f44aa7311e", "node_type": "1", "metadata": {}, "hash": "6d0585b3aef667fde47bb30fa1ef0f8e02b24ec83bc0dde96a9dc7479daa8f5e", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "className=", "mimetype": "text/plain", "start_char_idx": 889, "end_char_idx": 899, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a3030715-6fd5-4cf8-8f46-01f44aa7311e": {"__data__": {"id_": "a3030715-6fd5-4cf8-8f46-01f44aa7311e", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c0a1310d5483d7809a093bb545456daaef5e8357c64ebe648b3e48de9e4c490", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "efa51467-af25-4140-90db-8db3e00a689b", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "afcc23a3691812ff4f93cfcc9aadf37fea9c1ce9062590526b4e45e838c772f7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3869d149-6285-49d6-90f1-7cf1d0f8cf7b", "node_type": "1", "metadata": {}, "hash": "843c78c828ce05fb47b4d764d54085c18e0994746c7e325ebbcf8e1e3d81da5d", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"ml-2 text-xs font-normal text-muted-foreground\">\n            Step {", "mimetype": "text/plain", "start_char_idx": 2225, "end_char_idx": 2293, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "3869d149-6285-49d6-90f1-7cf1d0f8cf7b": {"__data__": {"id_": "3869d149-6285-49d6-90f1-7cf1d0f8cf7b", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c0a1310d5483d7809a093bb545456daaef5e8357c64ebe648b3e48de9e4c490", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a3030715-6fd5-4cf8-8f46-01f44aa7311e", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "b00dd680075cf5336b15c66f7e8500003715d18b1130f7d0163645c87524373b", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "1f8a6f30-5c7e-4a5c-bf21-eadce0ccddb3", "node_type": "1", "metadata": {}, "hash": "1c561bc4364b6edadd22491771bdedd3cf2bbdf1dd57a7be802f53640115069b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "step + 1} of {steps.length}\n          <", "mimetype": "text/plain", "start_char_idx": 2293, "end_char_idx": 2332, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1f8a6f30-5c7e-4a5c-bf21-eadce0ccddb3": {"__data__": {"id_": "1f8a6f30-5c7e-4a5c-bf21-eadce0ccddb3", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c0a1310d5483d7809a093bb545456daaef5e8357c64ebe648b3e48de9e4c490", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3869d149-6285-49d6-90f1-7cf1d0f8cf7b", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "a015b9e954abc1330dd4ab76a614f0dd4a48134746e103fea21e3d9f76bdada2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7d405262-aa46-4b47-a599-5aac5e40590c", "node_type": "1", "metadata": {}, "hash": "1115f3f4e30523deab04e6956089ea8f639a4191d434c61e653d616e6d2d0e72", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "/span>\n        </CardTitle>\n        {/* Progress bar shows % complete */}\n        <Progress", "mimetype": "text/plain", "start_char_idx": 2332, "end_char_idx": 2423, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7d405262-aa46-4b47-a599-5aac5e40590c": {"__data__": {"id_": "7d405262-aa46-4b47-a599-5aac5e40590c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c0a1310d5483d7809a093bb545456daaef5e8357c64ebe648b3e48de9e4c490", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "1f8a6f30-5c7e-4a5c-bf21-eadce0ccddb3", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "739034c990113a21bd6d83dbb9fbae8cf3b9064e0ab889fc2a3dd29d3de469e5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "c8b58d83-cb3d-4ff6-b2ee-d6153ea05bef", "node_type": "1", "metadata": {}, "hash": "a070fd429af9eb38a900ff868f03b33fefa89c38a0a061bd6a52447689fe3c8a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "value={((step + 1) / steps.length) * 100} className=\"h-2 mt-4\" />\n      </CardHeader>\n      <CardContent>\n        {/* Animated transition between steps */}\n        <AnimatePresence mode=\"wait\">\n          <motion.div\n            key={step}\n            initial={{ opacity: 0, x: 24 }}\n            animate={{ opacity: 1, x: 0 }}\n            exit={{ opacity: 0, x: -24 }}\n            transition={{ duration: 0.25 }}\n            className=\"min-h-[110px]\"\n          >\n            <h3 className=\"font-semibold mb-2\">{steps[step].title}</h3>\n            {steps[step].content}\n          </motion.div>\n        </AnimatePresence>\n        {/* Navigation buttons */}\n        <div className=\"flex justify-between mt-6\">\n          <Button variant=\"secondary\" onClick={prev} disabled={step === 0}>\n            Back\n          </Button>\n          <Button onClick={next} disabled={step === steps.length - 1}>\n            {step === steps.length - 1 ? \"Done\" : \"Next\"}\n          </Button", "mimetype": "text/plain", "start_char_idx": 2424, "end_char_idx": 3390, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "c8b58d83-cb3d-4ff6-b2ee-d6153ea05bef": {"__data__": {"id_": "c8b58d83-cb3d-4ff6-b2ee-d6153ea05bef", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c0a1310d5483d7809a093bb545456daaef5e8357c64ebe648b3e48de9e4c490", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7d405262-aa46-4b47-a599-5aac5e40590c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "12c6f7770d0edf90a5df76ce3c64ddc64a0448c5aae48af948ee89c003314deb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a5920d2b-85f5-4f73-8b20-cfb5e7c3fa7b", "node_type": "1", "metadata": {}, "hash": "8a4d276f0273b229fe098e9063c83e7765f4ee71b7feb6e94f8cf68de6c1966f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ">\n        </div>\n      </CardContent>\n    </Card>\n  )", "mimetype": "text/plain", "start_char_idx": 3390, "end_char_idx": 3443, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a5920d2b-85f5-4f73-8b20-cfb5e7c3fa7b": {"__data__": {"id_": "a5920d2b-85f5-4f73-8b20-cfb5e7c3fa7b", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c0a1310d5483d7809a093bb545456daaef5e8357c64ebe648b3e48de9e4c490", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "c8b58d83-cb3d-4ff6-b2ee-d6153ea05bef", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "f0007197f69846e12e80b2f8c1650eb408992d3b7254b907916b4baed6947bd4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6535763e-01ff-4b47-bce3-f9588a5d85e5", "node_type": "1", "metadata": {}, "hash": "ffe8598133515839511bd3c79d5020e7833a42da810b6be161a09c49dc2a0cd7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ";", "mimetype": "text/plain", "start_char_idx": 356, "end_char_idx": 357, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6535763e-01ff-4b47-bce3-f9588a5d85e5": {"__data__": {"id_": "6535763e-01ff-4b47-bce3-f9588a5d85e5", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c0a1310d5483d7809a093bb545456daaef5e8357c64ebe648b3e48de9e4c490", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a5920d2b-85f5-4f73-8b20-cfb5e7c3fa7b", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/dashboard/Dashboard.tsx", "file_name": "Dashboard.tsx", "file_size": 3449, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "197d8bdaa03b0a59ac945d26d6440250aa8016620efa7419a3d64ce593b08565", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "}", "mimetype": "text/plain", "start_char_idx": 376, "end_char_idx": 377, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7092dba3-b2e6-41a7-8594-6026ff235180": {"__data__": {"id_": "7092dba3-b2e6-41a7-8594-6026ff235180", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/index.ts", "file_name": "index.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 717, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "30705105-01ce-40cd-987d-970fa0b3ede6", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/index.ts", "file_name": "index.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 717, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "04b753a786b439ed670e69b5ad958df92c2cefd1c3df14bc2485f1420df86720", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: src/components/index.ts\n\nexport { default as AskEcho } from \"./AskAgent/ChatWindow\";\nexport { default as ActionQueuePanel } from \"./ActionQueue/ActionQueuePanel\";\nexport { default as AuditPanel } from \"./AuditPanel/AuditPanel\";\nexport { default as DocsViewer } from \"./DocsViewer/DocsViewer\";\nexport { default as DocsSyncPanel } from \"./DocsSyncPanel\";\nexport { default as GmailOpsPanel } from \"./GmailOps/GmailOpsPanel\";\nexport { default as LogsPanel } from \"./LogsPanel/LogsPanel\";\nexport { default as MemoryPanel } from \"./MemoryPanel\";\nexport { default as SearchPanel } from \"./SearchPanel\";\nexport { default as StatusPanel } from \"./StatusPanel\";\nexport { default as Sidebar } from \"./Sidebar/Sidebar\";", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 716, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f9f99961-eaee-47ae-a2a3-d796f8f6e843": {"__data__": {"id_": "f9f99961-eaee-47ae-a2a3-d796f8f6e843", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/AskAgent/AskAgent.tsx", "file_name": "AskAgent.tsx", "file_size": 1644, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2d56e80e-5c23-4063-ba80-8597db2f436a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/AskAgent/AskAgent.tsx", "file_name": "AskAgent.tsx", "file_size": 1644, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "173a0c63d03b05e61179f0793eb5664dcc3cedfd60c3c96ccac3b7c530aa3bed", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "247b6bba-20a1-4c41-b229-4be94c43de9b", "node_type": "1", "metadata": {}, "hash": "134319cc974aafefa81c8e5af61d6bf5b83dab694532bbf0f7c09dccd769edbc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: src/components/ui/AskAgent/AskAgent.tsx\n\n\"use client\"\n\nimport { useState } from \"react\"\nimport { Textarea } from \"@/components/ui/textarea\"\nimport { Button } from \"@/components/ui/button\"\nimport SafeMarkdown from \"@/components/SafeMarkdown\"\n\nexport default function AskAgent() {\n  const [query, setQuery] = useState(\"\")\n  const [response, setResponse] = useState<string | null>(null)\n  const [loading, setLoading] = useState(false)\n\n  async function sendQuery() {\n    if (!query) return\n    setLoading(true)\n    setResponse(null)\n\n    const res = await fetch(\"https://relay.wildfireranch.us/ask?q=\" + encodeURIComponent(query), {\n      headers: {\n        \"X-API-Key\": process.env.NEXT_PUBLIC_API_KEY || \"\"\n      }\n    })\n\n    const data = await res.json()\n    setResponse(\n      data.answer ||\n      data.function_call?.arguments ||\n      \"No answer.\"\n    )\n    setLoading(false)\n  }\n\n  if (response && typeof response !== \"string\") {\n    console.log(\"DEBUG 418:\", typeof response, response)\n  }\n\n  return (\n    <div", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1025, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "247b6bba-20a1-4c41-b229-4be94c43de9b": {"__data__": {"id_": "247b6bba-20a1-4c41-b229-4be94c43de9b", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/AskAgent/AskAgent.tsx", "file_name": "AskAgent.tsx", "file_size": 1644, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2d56e80e-5c23-4063-ba80-8597db2f436a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/AskAgent/AskAgent.tsx", "file_name": "AskAgent.tsx", "file_size": 1644, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "173a0c63d03b05e61179f0793eb5664dcc3cedfd60c3c96ccac3b7c530aa3bed", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f9f99961-eaee-47ae-a2a3-d796f8f6e843", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/AskAgent/AskAgent.tsx", "file_name": "AskAgent.tsx", "file_size": 1644, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "6cbf85a366c72c3b3f79c122386d8b9f1037bc28091a5d190ef2f29fdd9f6a71", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "className=\"max-w-xl space-y-4\">\n      <Textarea\n        placeholder=\"Ask Echo something...\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        disabled={loading}\n      />\n      <Button onClick={sendQuery} disabled={loading || !query}>\n        {loading ? \"Thinking...\" : \"Ask Echo\"}\n      </Button>\n      {response && (\n        <div className=\"bg-muted p-4 rounded text-sm whitespace-pre-wrap border\">\n          <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n            <SafeMarkdown>{response}</SafeMarkdown>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}", "mimetype": "text/plain", "start_char_idx": 1026, "end_char_idx": 1643, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "01eb26ff-c5e1-486c-9d1c-4b3428b0822b": {"__data__": {"id_": "01eb26ff-c5e1-486c-9d1c-4b3428b0822b", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/badge.tsx", "file_name": "badge.tsx", "file_size": 882, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "243426df-c4af-4c38-8374-1629e06d9890", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/badge.tsx", "file_name": "badge.tsx", "file_size": 882, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "b361cc7f1ca765c0883964421fa3e7f1d500bf32e01080d077483bfdb030a1b7", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: components/ui/badge.tsx\n// Simple, styleable Badge component for statuses/labels\n\nimport React from \"react\";\nimport clsx from \"clsx\";\n\ntype BadgeVariant = \"default\" | \"success\" | \"destructive\" | \"secondary\";\n\nconst variantStyles: Record<BadgeVariant, string> = {\n  default: \"bg-gray-200 text-gray-700\",\n  success: \"bg-green-100 text-green-800 border border-green-300\",\n  destructive: \"bg-red-100 text-red-800 border border-red-300\",\n  secondary: \"bg-blue-100 text-blue-800 border border-blue-300\",\n};\n\nexport const Badge: React.FC<{\n  children: React.ReactNode;\n  variant?: BadgeVariant;\n  className?: string;\n}> = ({ children, variant = \"default\", className = \"\" }) => (\n  <span\n    className={clsx(\n      \"inline-block rounded px-2 py-0.5 text-xs font-semibold\",\n      variantStyles[variant],\n      className\n    )}\n  >\n    {children}\n  </span>\n);\n\nexport default Badge;", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 881, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "d9df63df-68db-42a8-90de-2a98454e08a8": {"__data__": {"id_": "d9df63df-68db-42a8-90de-2a98454e08a8", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "47aa071b-13e9-44a1-b80d-57e280c71062", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "c27cbebc07ef011ef761183298ca802035257fbb0353a041977275da037dbb72", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "e5306021-c60d-47e5-9ff9-129ddc848451", "node_type": "1", "metadata": {}, "hash": "ff3042cecd888b2825552582af4d793e925fb276362f04db1bc6e54c2a581ca5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 174, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e5306021-c60d-47e5-9ff9-129ddc848451": {"__data__": {"id_": "e5306021-c60d-47e5-9ff9-129ddc848451", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "47aa071b-13e9-44a1-b80d-57e280c71062", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "c27cbebc07ef011ef761183298ca802035257fbb0353a041977275da037dbb72", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "d9df63df-68db-42a8-90de-2a98454e08a8", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "4e6ea392fb78037c8dd8b8fe5042b1a9d5faf15aab3ebf3cf26e933d32917db5", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "414e3e46-a8ff-49f5-b678-2e0c716eaa93", "node_type": "1", "metadata": {}, "hash": "65db82b4fd37f95013740f2e9538d85f1bcd53759e6ab0c84c2055b8fb79e1c5", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "const", "mimetype": "text/plain", "start_char_idx": 176, "end_char_idx": 181, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "414e3e46-a8ff-49f5-b678-2e0c716eaa93": {"__data__": {"id_": "414e3e46-a8ff-49f5-b678-2e0c716eaa93", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "47aa071b-13e9-44a1-b80d-57e280c71062", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "c27cbebc07ef011ef761183298ca802035257fbb0353a041977275da037dbb72", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "e5306021-c60d-47e5-9ff9-129ddc848451", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "794b341e1d0a354d581c152afcf7ad3b2a41f28c187f37f195224c64ff54842c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5dd41eaa-dfa1-41bd-b84c-3cf390583453", "node_type": "1", "metadata": {}, "hash": "9ac005901dfde8b2dd406f8cf40433173ca6fad0a0212dfb0001bc7519fe8248", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "buttonVariants =", "mimetype": "text/plain", "start_char_idx": 182, "end_char_idx": 198, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5dd41eaa-dfa1-41bd-b84c-3cf390583453": {"__data__": {"id_": "5dd41eaa-dfa1-41bd-b84c-3cf390583453", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "47aa071b-13e9-44a1-b80d-57e280c71062", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "c27cbebc07ef011ef761183298ca802035257fbb0353a041977275da037dbb72", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "414e3e46-a8ff-49f5-b678-2e0c716eaa93", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "1aa45ae4f565f2e63ba922558cbbfc95cbbd43e0c5843001a2f727590bb3d8c7", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "77aa77f9-c794-498f-9781-5db71a545c8f", "node_type": "1", "metadata": {}, "hash": "7c441e4a294d136e64cee9d7098a95216c0ee6a6fe6008b6aa49a643ce392f7b", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "cva", "mimetype": "text/plain", "start_char_idx": 84, "end_char_idx": 87, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "77aa77f9-c794-498f-9781-5db71a545c8f": {"__data__": {"id_": "77aa77f9-c794-498f-9781-5db71a545c8f", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "47aa071b-13e9-44a1-b80d-57e280c71062", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "c27cbebc07ef011ef761183298ca802035257fbb0353a041977275da037dbb72", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5dd41eaa-dfa1-41bd-b84c-3cf390583453", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3c57be392cc4045b9f1f82f19888040387016fe8d8ded434c914491d9f6e904d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "5bcf605f-c34f-4740-ac92-063f993c0b03", "node_type": "1", "metadata": {}, "hash": "4e439912f40e344bf40706c4bec4db29582fb9798335bb55e40ad3095240eaca", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",", "mimetype": "text/plain", "start_char_idx": 202, "end_char_idx": 652, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5bcf605f-c34f-4740-ac92-063f993c0b03": {"__data__": {"id_": "5bcf605f-c34f-4740-ac92-063f993c0b03", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "47aa071b-13e9-44a1-b80d-57e280c71062", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "c27cbebc07ef011ef761183298ca802035257fbb0353a041977275da037dbb72", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "77aa77f9-c794-498f-9781-5db71a545c8f", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "f6e7a690d429be22bada16526263e1322ec719581925fce0e09fc1023f205e35", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0fb7a673-8171-4f07-89eb-bc68b340fabf", "node_type": "1", "metadata": {}, "hash": "5744652f6555d9f74da2ed2b8e384be21263c9a8c164a4df1882689418b92bc6", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },", "mimetype": "text/plain", "start_char_idx": 655, "end_char_idx": 1629, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0fb7a673-8171-4f07-89eb-bc68b340fabf": {"__data__": {"id_": "0fb7a673-8171-4f07-89eb-bc68b340fabf", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "47aa071b-13e9-44a1-b80d-57e280c71062", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "c27cbebc07ef011ef761183298ca802035257fbb0353a041977275da037dbb72", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5bcf605f-c34f-4740-ac92-063f993c0b03", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "bfb524438806865883abb2493eefbe2148cc4f849ab0a2b7ef3ccdbe24704802", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "a6e3f306-7bad-40a7-aa3b-cb9b1faf91aa", "node_type": "1", "metadata": {}, "hash": "7a37041832b89262ddfb4eee33448834486dd54bb2798c791dac4221efd2c27f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }", "mimetype": "text/plain", "start_char_idx": 1634, "end_char_idx": 1712, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "a6e3f306-7bad-40a7-aa3b-cb9b1faf91aa": {"__data__": {"id_": "a6e3f306-7bad-40a7-aa3b-cb9b1faf91aa", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "47aa071b-13e9-44a1-b80d-57e280c71062", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "c27cbebc07ef011ef761183298ca802035257fbb0353a041977275da037dbb72", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0fb7a673-8171-4f07-89eb-bc68b340fabf", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "87296e92d7a0c1018a02f524d20984bca8d3707da7360537b101978a3e0e4514", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4d7e8366-ce94-4d3c-b18d-fcf02a03a9e3", "node_type": "1", "metadata": {}, "hash": "187cac78ede280b0cd6037d9f305791260cebfc50c157d68ee451f735c7fb34f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": ")", "mimetype": "text/plain", "start_char_idx": 421, "end_char_idx": 422, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4d7e8366-ce94-4d3c-b18d-fcf02a03a9e3": {"__data__": {"id_": "4d7e8366-ce94-4d3c-b18d-fcf02a03a9e3", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "47aa071b-13e9-44a1-b80d-57e280c71062", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "c27cbebc07ef011ef761183298ca802035257fbb0353a041977275da037dbb72", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "a6e3f306-7bad-40a7-aa3b-cb9b1faf91aa", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/button.tsx", "file_name": "button.tsx", "file_size": 2123, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "63642dcde02f4111edeeaf8d67b2ffa85afff3f55e31a166a2cd6f7a6ee3915c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "function Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }", "mimetype": "text/plain", "start_char_idx": 1716, "end_char_idx": 2122, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "5da9c9dc-28d0-4816-86bb-5ded81ee5fdf": {"__data__": {"id_": "5da9c9dc-28d0-4816-86bb-5ded81ee5fdf", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/card.tsx", "file_name": "card.tsx", "file_size": 1989, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8f9afacb-3cc7-4f6b-8c58-a6824273674d", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/card.tsx", "file_name": "card.tsx", "file_size": 1989, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "fe3a5809aadadd6f3ff040c12538572113a019867e79387612197f9412edd737", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b062bbee-053c-4429-b9db-7a277ebd3c11", "node_type": "1", "metadata": {}, "hash": "0eec948dd22f230c7242ce8fbdabafbe422869032a5c4f5754aa93e8f72f8ced", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1019, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b062bbee-053c-4429-b9db-7a277ebd3c11": {"__data__": {"id_": "b062bbee-053c-4429-b9db-7a277ebd3c11", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/card.tsx", "file_name": "card.tsx", "file_size": 1989, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8f9afacb-3cc7-4f6b-8c58-a6824273674d", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/card.tsx", "file_name": "card.tsx", "file_size": 1989, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "fe3a5809aadadd6f3ff040c12538572113a019867e79387612197f9412edd737", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "5da9c9dc-28d0-4816-86bb-5ded81ee5fdf", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/card.tsx", "file_name": "card.tsx", "file_size": 1989, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "bfd68a09e59a720b36e9966dd8a14ea81c4956237c47083d73d2b963f9d0cd32", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}", "mimetype": "text/plain", "start_char_idx": 1022, "end_char_idx": 1988, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1f9e8817-e0f9-4838-8e16-9dde7c0028f2": {"__data__": {"id_": "1f9e8817-e0f9-4838-8e16-9dde7c0028f2", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/input.tsx", "file_name": "input.tsx", "file_size": 967, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "aac4a791-311d-43e2-9d00-984946071c2e", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/input.tsx", "file_name": "input.tsx", "file_size": 967, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "998a94ec406d21b636ee42eb4892cac154b6ff7b9271e967cca009e78e9e81a3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 966, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "fdb845cd-086b-4812-8ec5-db193f89bdb7": {"__data__": {"id_": "fdb845cd-086b-4812-8ec5-db193f89bdb7", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/label.tsx", "file_name": "label.tsx", "file_size": 611, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "91bd6068-5859-4973-866f-714db98dd9fd", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/label.tsx", "file_name": "label.tsx", "file_size": 611, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "9b94af7d190a19beecc72d884de25aea35cc6aa2d129907345dcb4a992b796b1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 610, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "67ff85ed-a1ab-4b7a-8174-46e680ae439d": {"__data__": {"id_": "67ff85ed-a1ab-4b7a-8174-46e680ae439d", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/progress.tsx", "file_name": "progress.tsx", "file_size": 698, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a08ddad1-e22c-48e2-b6a7-6d83a7d3e355", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/progress.tsx", "file_name": "progress.tsx", "file_size": 698, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3cd35e86945db4d00fdf9b2cac45cefa1c86fad3fe4b2a35758181e118dfba14", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: progress.tsx\n// Directory: frontend/components/ui\n// Purpose: shadcn/ui Progress bar component\n\n\"use client\";\n\nimport * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\nconst Progress = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & { value?: number }\n>(({ className, value, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"relative h-2 w-full overflow-hidden rounded-full bg-secondary\", className)}\n    {...props}\n  >\n    <div\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value ?? 0)}%)` }}\n    />\n  </div>\n));\nProgress.displayName = \"Progress\";\n\nexport { Progress };", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 697, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4c276ac8-ddb9-4343-9e28-f4a626b2d48a": {"__data__": {"id_": "4c276ac8-ddb9-4343-9e28-f4a626b2d48a", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/textarea.tsx", "file_name": "textarea.tsx", "file_size": 759, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "9b19b8e5-3896-45a9-8764-667ae671db29", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/components/ui/textarea.tsx", "file_name": "textarea.tsx", "file_size": 759, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "5845914da471837d8f1f44768522ed90d193d7e56666e9bdd2f8499b0a963be8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 758, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "45088aaf-6d1c-43ad-a305-2da137c8f00c": {"__data__": {"id_": "45088aaf-6d1c-43ad-a305-2da137c8f00c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/lib/api.ts", "file_name": "api.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 278, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "3d53fdc1-a697-48b8-b914-c219442bfd6a", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/lib/api.ts", "file_name": "api.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 278, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "2359e4565b77eb61c465365d3709da333e56b7a20ce245a3484350bf1d93ee42", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: lib/api.ts\n// Directory: frontend/src/lib\n// Purpose: Single source of truth for backend API config\n\nexport const API_ROOT =\n  process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8080\";\n\nexport const API_KEY =\n  process.env.NEXT_PUBLIC_API_KEY ?? \"\";  // \u2190 new line", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 275, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0e3ad323-81f8-498b-ace8-f258f8284b20": {"__data__": {"id_": "0e3ad323-81f8-498b-ace8-f258f8284b20", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/lib/toMDString.ts", "file_name": "toMDString.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 422, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "853057e8-5db7-4b68-a9e3-23db96e04fa7", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/lib/toMDString.ts", "file_name": "toMDString.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 422, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "999c1a6d5984ac8a168397cc76b7343bd38b8c3e355df0616fb3ecf4d1453cae", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "export function toMDString(val: unknown): string {\n  if (val == null) return \"\";\n  if (typeof val === \"string\") return val;\n  if (Array.isArray(val)) {\n    return val.map((v) => toMDString(v)).join(\"\\n\\n\");\n  }\n  if (typeof val === \"object\") {\n    try {\n      return \"```json\\n\" + JSON.stringify(val, null, 2) + \"\\n```\";\n    } catch {\n      return String(val);\n    }\n  }\n  return String(val);\n}\nexport default toMDString;", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 421, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6d211b89-f5f8-43c9-9ab2-6a33a22522c4": {"__data__": {"id_": "6d211b89-f5f8-43c9-9ab2-6a33a22522c4", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/lib/utils.ts", "file_name": "utils.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 196, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "2659e62d-e312-44a3-9475-9607d39b39f8", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/lib/utils.ts", "file_name": "utils.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 196, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "01e7525b92a9ef905030cc8aae21d66af59925758a7512994672f2547e8dc780", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// File: src/lib/utils.ts\n\nimport { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 195, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e8cfdefb-c9ba-420b-992c-fb3a7d08055a": {"__data__": {"id_": "e8cfdefb-c9ba-420b-992c-fb3a7d08055a", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/src/types/react-syntax-highlighter.d.ts", "file_name": "react-syntax-highlighter.d.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 173, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e74bda56-de14-4def-adad-037541643aca", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/src/types/react-syntax-highlighter.d.ts", "file_name": "react-syntax-highlighter.d.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 173, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "2be7d773927284e58aa1239b18cc0fd088415f136fceffcd661d61340249d989", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "declare module \"react-syntax-highlighter\";\ndeclare module \"react-syntax-highlighter/dist/esm/styles/prism\";\ndeclare module \"react-syntax-highlighter/dist/cjs/styles/prism\";", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 172, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "20743f4a-4e0f-49b2-8020-b3595698a40b": {"__data__": {"id_": "20743f4a-4e0f-49b2-8020-b3595698a40b", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b983982e-08b5-4a91-ad37-9d6a497824fe", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "6526d4332c5e54cbe5d7a91b1552aadda9feea9e5dc342d47fedf3f3a5b427e2", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "dae8f776-da0c-4843-94a5-0bc9953d5c13", "node_type": "1", "metadata": {}, "hash": "e612329bef9b353197b793913ac2bfba61b5004e94e4a83b08ed9b03e222de01", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# File: services/google_docs_sync.py\n# Purpose: Google Docs sync for COMMAND_CENTER folder \u2192 local /docs/imported\n# Directory Structure:\n# - GOOGLE_CREDS_JSON is decoded at runtime into /tmp/credentials.json\n# - GOOGLE_TOKEN_JSON is decoded (if present) into frontend/sync/token.json\n# - Synced .md files are saved into docs/imported/\n# - OAuth flow is launched only if token is missing or invalid\n\nimport os\nimport json\nimport base64\nfrom pathlib import Path\nfrom google.oauth2.credentials import Credentials\nfrom google_auth_oauthlib.flow import InstalledAppFlow\nfrom googleapiclient.discovery import build\nfrom googleapiclient.errors import HttpError\nfrom markdownify import markdownify as md\nfrom google.auth.transport.requests import Request\n\n# === Config ===\nSCOPES = [\n    \"https://www.googleapis.com/auth/drive.readonly\",\n    \"https://www.googleapis.com/auth/documents.readonly\"\n]\nCREDENTIALS_PATH = Path(\"/tmp/credentials.json\")\nTOKEN_PATH = Path(\"frontend/sync/token.json\")\nIMPORT_PATH = Path(\"docs/imported\")", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1019, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "dae8f776-da0c-4843-94a5-0bc9953d5c13": {"__data__": {"id_": "dae8f776-da0c-4843-94a5-0bc9953d5c13", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b983982e-08b5-4a91-ad37-9d6a497824fe", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "6526d4332c5e54cbe5d7a91b1552aadda9feea9e5dc342d47fedf3f3a5b427e2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "20743f4a-4e0f-49b2-8020-b3595698a40b", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "8e2689fddb4ac445bfece6fc7f9aa7cd2973d0a51d99e84eec20a187754c6f3e", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "7df41a4e-2d86-40c5-ac83-0df4e2437e66", "node_type": "1", "metadata": {}, "hash": "a8a96bfaec679ddc4c27582bb128dfe70c45ff679a3864dc67412b4595a230d4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "COMMAND_CENTER_FOLDER_NAME = \"COMMAND_CENTER\"\nIMPORT_PATH.mkdir(parents=True, exist_ok=True)\n\n# === Auth ===", "mimetype": "text/plain", "start_char_idx": 1020, "end_char_idx": 1128, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "7df41a4e-2d86-40c5-ac83-0df4e2437e66": {"__data__": {"id_": "7df41a4e-2d86-40c5-ac83-0df4e2437e66", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b983982e-08b5-4a91-ad37-9d6a497824fe", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "6526d4332c5e54cbe5d7a91b1552aadda9feea9e5dc342d47fedf3f3a5b427e2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "dae8f776-da0c-4843-94a5-0bc9953d5c13", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "ba116d7a69fca7cd7fcda4decc99ce64c5df2d21a55458f3ea6b899ad4f353eb", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "081b7d9f-51ec-4e3e-a3f1-b47b660139c7", "node_type": "1", "metadata": {}, "hash": "8b5bfaf8343703f37134bf4200aba435abb7e18df68a15512e074781d804a4f2", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def get_google_service():", "mimetype": "text/plain", "start_char_idx": 1129, "end_char_idx": 1154, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "081b7d9f-51ec-4e3e-a3f1-b47b660139c7": {"__data__": {"id_": "081b7d9f-51ec-4e3e-a3f1-b47b660139c7", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b983982e-08b5-4a91-ad37-9d6a497824fe", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "6526d4332c5e54cbe5d7a91b1552aadda9feea9e5dc342d47fedf3f3a5b427e2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "7df41a4e-2d86-40c5-ac83-0df4e2437e66", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3fc95780416029fc966f65140481cf6806a910528d2f214d1856f8f178934450", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "0de5d36c-ae96-4d82-a734-874325006af8", "node_type": "1", "metadata": {}, "hash": "a1c92b44a9c3543470f7b1aa68cb6749c1819849346e0c72723d311f8f25c1ad", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "creds = None\n\n    # Decode credentials from env at runtime only\n    if not CREDENTIALS_PATH.exists():\n        if os.getenv(\"ENV\") == \"local\":\n            local_path = Path(\"frontend/sync/credentials.json\")\n            print(\"\ud83d\udd27 Using local credentials.json from frontend/sync/\")\n            if not local_path.exists():\n                raise FileNotFoundError(\"\u274c Local credentials.json not found at frontend/sync/\")\n            CREDENTIALS_PATH.write_text(local_path.read_text())\n        else:\n            raw = os.getenv(\"GOOGLE_CREDS_JSON\")\n            print(\"\ud83e\uddea Length of GOOGLE_CREDS_JSON:\", len(raw) if raw else \"Not Found\")\n            if not raw:\n                raise FileNotFoundError(\"\u274c Missing GOOGLE_CREDS_JSON in environment variables\")\n            decoded = base64.b64decode(raw.encode()).decode()\n            CREDENTIALS_PATH.write_text(decoded)\n            print(f\"\u2705 credentials.json written to: {CREDENTIALS_PATH}\")\n\n    # Decode token from env at runtime only (optional bootstrap)", "mimetype": "text/plain", "start_char_idx": 1159, "end_char_idx": 2154, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "0de5d36c-ae96-4d82-a734-874325006af8": {"__data__": {"id_": "0de5d36c-ae96-4d82-a734-874325006af8", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b983982e-08b5-4a91-ad37-9d6a497824fe", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "6526d4332c5e54cbe5d7a91b1552aadda9feea9e5dc342d47fedf3f3a5b427e2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "081b7d9f-51ec-4e3e-a3f1-b47b660139c7", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "a6f7a2b4ebf9ddcae31a58eba0a72db40647a3a14991d51e8785386e1eb8f5d1", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "8f411bd5-64f5-4075-85a1-5436c3852e1f", "node_type": "1", "metadata": {}, "hash": "98ac030b2b56903b37be42a86352d8826a045bb7cbe0e43b54f54fe7c80f96bc", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "if not TOKEN_PATH.exists():\n        token_raw = os.getenv(\"GOOGLE_TOKEN_JSON\")\n        print(\"\ud83e\uddea GOOGLE_TOKEN_JSON found:\", bool(token_raw))\n        if token_raw:\n            TOKEN_PATH.write_text(base64.b64decode(token_raw).decode())\n            print(f\"\u2705 token.json written to: {TOKEN_PATH}\")\n\n    # Load token if available\n    if TOKEN_PATH.exists():\n        creds = Credentials.from_authorized_user_file(TOKEN_PATH, SCOPES)\n\n    # If token missing or expired, launch interactive auth flow\n    if not creds or not creds.valid:\n        if creds and creds.expired and creds.refresh_token:\n            creds.refresh(Request())\n        else:\n            flow = InstalledAppFlow.from_client_secrets_file(str(CREDENTIALS_PATH), SCOPES)\n            print(\"\ud83c\udf10 Launching OAuth flow on dynamic localhost port...\")\n            creds = flow.run_local_server(port=0)\n        # Save new token\n        with open(TOKEN_PATH, 'w') as token:\n            token.write(creds.to_json())\n\n    # Build API clients", "mimetype": "text/plain", "start_char_idx": 2159, "end_char_idx": 3149, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8f411bd5-64f5-4075-85a1-5436c3852e1f": {"__data__": {"id_": "8f411bd5-64f5-4075-85a1-5436c3852e1f", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b983982e-08b5-4a91-ad37-9d6a497824fe", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "6526d4332c5e54cbe5d7a91b1552aadda9feea9e5dc342d47fedf3f3a5b427e2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "0de5d36c-ae96-4d82-a734-874325006af8", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "3461525a786f675ab8ba9edcca7ff2ac7f4531246aa410887e0e99f952b97694", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "6f82e457-2818-4e55-a65d-5ae993e02f9c", "node_type": "1", "metadata": {}, "hash": "c26dbcf3d7b1f9529d2498328008e80ad9167d3d7de98cae7ce46771ace0b1d3", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "drive_service = build('drive', 'v3', credentials=creds)\n    docs_service = build('docs', 'v1', credentials=creds)\n    return drive_service, docs_service", "mimetype": "text/plain", "start_char_idx": 3154, "end_char_idx": 3306, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "6f82e457-2818-4e55-a65d-5ae993e02f9c": {"__data__": {"id_": "6f82e457-2818-4e55-a65d-5ae993e02f9c", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b983982e-08b5-4a91-ad37-9d6a497824fe", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "6526d4332c5e54cbe5d7a91b1552aadda9feea9e5dc342d47fedf3f3a5b427e2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8f411bd5-64f5-4075-85a1-5436c3852e1f", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "0ad6b673abbffd03fde7d5100ceba7aaa6dd1dfae0b04b807fa576444fb32d51", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b5943380-26b2-4996-ad09-e0adf7219d43", "node_type": "1", "metadata": {}, "hash": "abe239a3b750a476fe76dcd9c1c9ed3620b44dae954cae87486af07be3b0670a", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "# === Google Docs Operations ===\ndef find_folder_id(drive_service, folder_name):\n    results = drive_service.files().list(\n        q=f\"mimeType='application/vnd.google-apps.folder' and name='{folder_name}'\",\n        spaces='drive',\n        fields=\"files(id, name)\",\n    ).execute()\n    folders = results.get('files', [])\n    return folders[0]['id'] if folders else None\n\ndef get_docs_in_folder(drive_service, folder_id):\n    query = f\"'{folder_id}' in parents and mimeType='application/vnd.google-apps.document'\"\n    results = drive_service.files().list(q=query, fields=\"files(id, name)\").execute()\n    return results.get('files', [])", "mimetype": "text/plain", "start_char_idx": 3308, "end_char_idx": 3942, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "b5943380-26b2-4996-ad09-e0adf7219d43": {"__data__": {"id_": "b5943380-26b2-4996-ad09-e0adf7219d43", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b983982e-08b5-4a91-ad37-9d6a497824fe", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "6526d4332c5e54cbe5d7a91b1552aadda9feea9e5dc342d47fedf3f3a5b427e2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "6f82e457-2818-4e55-a65d-5ae993e02f9c", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/sync/sync_google_docs.py", "file_name": "sync_google_docs.py", "file_type": "text/x-python", "file_size": 4982, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "44b63bae6a6e3c596561490d768a1c077ec729d325dab02f68f67d87426befab", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "def fetch_and_save_doc(docs_service, file):\n    doc = docs_service.documents().get(documentId=file['id']).execute()\n    title = file['name'].replace(\" \", \"_\").lower()\n    content = doc.get(\"body\", {}).get(\"content\", [])\n    html = \"\"\n    for element in content:\n        if 'paragraph' in element:\n            for el in element['paragraph'].get('elements', []):\n                html += el.get('textRun', {}).get('content', '')\n            html += \"\\n\"\n    markdown = md(html)\n    out_path = IMPORT_PATH / f\"{title}.md\"\n    out_path.write_text(markdown, encoding='utf-8')\n    return out_path.name\n\n# === Main Sync Function ===\ndef sync_google_docs():\n    drive_service, docs_service = get_google_service()\n    folder_id = find_folder_id(drive_service, COMMAND_CENTER_FOLDER_NAME)\n    if not folder_id:\n        raise RuntimeError(f\"Folder '{COMMAND_CENTER_FOLDER_NAME}' not found in Google Drive\")\n    files = get_docs_in_folder(drive_service, folder_id)\n    return [fetch_and_save_doc(docs_service, f) for f in files]", "mimetype": "text/plain", "start_char_idx": 3944, "end_char_idx": 4959, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "eb4796b3-7d38-47b1-a417-6e0cf87358af": {"__data__": {"id_": "eb4796b3-7d38-47b1-a417-6e0cf87358af", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/tailwind.config.js", "file_name": "tailwind.config.js", "file_type": "text/javascript", "file_size": 907, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cb890357-8aae-4527-8cc2-a0b01f20cf58", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/tailwind.config.js", "file_name": "tailwind.config.js", "file_type": "text/javascript", "file_size": 907, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "a2e3da4a46a06595720c962edc80cb97bd46cd638844568ddfecd5d28be627a4", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    './app/**/*.{js,ts,jsx,tsx,mdx}',\n    './components/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/app/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/components/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/layouts/**/*.{js,ts,jsx,tsx,mdx}',\n    './src/**/*.mdx'\n  ],\n  theme: {\n    extend: {\n      fontFamily: {\n        sans: ['var(--font-geist-sans)', 'ui-sans-serif', 'system-ui'],\n        mono: ['var(--font-geist-mono)', 'ui-monospace', 'SFMono-Regular']\n      },\n      borderRadius: {\n        sm: 'calc(var(--radius) - 4px)',\n        md: 'calc(var(--radius) - 2px)',\n        lg: 'var(--radius)',\n        xl: 'calc(var(--radius) + 4px)'\n      },\n      colors: {\n        border: 'var(--border)'\n        // You can add more: e.g., background, foreground, etc.\n      }\n    }\n  },\n  darkMode: 'class',\n  plugins: [require('@tailwindcss/typography')]\n};", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 907, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "9c33dedc-c9bf-4caf-888e-c80591d20624": {"__data__": {"id_": "9c33dedc-c9bf-4caf-888e-c80591d20624", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/tests/SafeMarkdown.test.tsx", "file_name": "SafeMarkdown.test.tsx", "file_size": 898, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a6171234-0192-4619-b987-c10e1b7d7c84", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/tests/SafeMarkdown.test.tsx", "file_name": "SafeMarkdown.test.tsx", "file_size": 898, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "84ed9037fc44c00d8c6a773f5f926a318abefcdb1df60b9c35bce066bf7aaf64", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import { describe, it, expect, vi } from 'vitest';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport SafeMarkdown from '../src/components/SafeMarkdown';\n\ndescribe('SafeMarkdown', () => {\n  it('renders markdown strings without warning', () => {\n    const warn = vi.spyOn(console, 'warn').mockImplementation(() => {});\n    const html = renderToStaticMarkup(<SafeMarkdown>**bold**</SafeMarkdown>);\n    expect(html).toContain('<strong>bold</strong>');\n    expect(warn).not.toHaveBeenCalled();\n    warn.mockRestore();\n  });\n\n  it('warns when non-string is provided', () => {\n    const warn = vi.spyOn(console, 'warn').mockImplementation(() => {});\n    const html = renderToStaticMarkup(\n      <SafeMarkdown>{123 as unknown as string}</SafeMarkdown>\n    );\n    expect(html).toContain('123');\n    expect(warn).toHaveBeenCalled();\n    warn.mockRestore();\n  });\n});", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 897, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "1ca6bdaf-df8c-43a2-b72b-f7e8e01ca773": {"__data__": {"id_": "1ca6bdaf-df8c-43a2-b72b-f7e8e01ca773", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/tests/toMDString.test.ts", "file_name": "toMDString.test.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 723, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "0b26ca94-4a0a-4d63-8979-f8c3d7cc9c71", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/tests/toMDString.test.ts", "file_name": "toMDString.test.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 723, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "d4b66046b92fb75fb06d5fed72c9e402253e318f8a81ba4655ec0e6b3f362a0f", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import { describe, it, expect } from 'vitest';\nimport toMDString from '../src/lib/toMDString';\n\ndescribe('toMDString', () => {\n  it('converts primitives to strings', () => {\n    expect(toMDString('hello')).toBe('hello');\n    expect(toMDString(42)).toBe('42');\n    expect(toMDString(true)).toBe('true');\n    expect(toMDString(null)).toBe('');\n    expect(toMDString(undefined)).toBe('');\n  });\n\n  it('joins arrays with blank lines', () => {\n    expect(toMDString(['a', 1, false])).toBe('a\\n\\n1\\n\\nfalse');\n  });\n\n  it('formats objects as fenced JSON', () => {\n    const obj = { a: 1, b: 'two' };\n    const expected = '```json\\n' + JSON.stringify(obj, null, 2) + '\\n```';\n    expect(toMDString(obj)).toBe(expected);\n  });\n});", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 722, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "156a6b7b-6b6f-470c-801f-f63e0e371339": {"__data__": {"id_": "156a6b7b-6b6f-470c-801f-f63e0e371339", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/tsconfig.json", "file_name": "tsconfig.json", "file_type": "application/json", "file_size": 2163, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "392cc47c-5b61-484c-aa52-5915cb96d59e", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/tsconfig.json", "file_name": "tsconfig.json", "file_type": "application/json", "file_size": 2163, "creation_date": "2025-07-02", "last_modified_date": "2025-07-02", "tier": "code"}, "hash": "464c85fd3d12942772b1ccf071c459bf592a1fac8fcb645f68d6314512334358", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "{\n  \"compilerOptions\": {\n    // ========= ECMAScript Target & Modules =========\n    \"target\": \"esnext\",                      // Use the latest JS features\n    \"module\": \"esnext\",                      // Modern ES modules\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],// Browser + latest ES features\n\n    // ========= TypeScript Core Behavior =========\n    \"strict\": true,                          // All strict type-checking options\n    \"forceConsistentCasingInFileNames\": true,// Catch case issues on import\n    \"noEmit\": true,                          // Don't output .js files\n    \"incremental\": true,                     // Speed up repeated builds\n    \"skipLibCheck\": true,                    // Faster builds, disables type-checking node_modules\n\n    // ========= Module Resolution & Interop =========\n    \"esModuleInterop\": true,                  // Allow default imports from CJS modules\n    \"moduleResolution\": \"bundler\",            // (Next.js 13+ best practice)\n    \"resolveJsonModule\": true,                // Allows importing JSON files\n    \"isolatedModules\": true,                  // Required by Next.js\n\n    // ========= JS/TS Interop =========\n    \"allowJs\": true,                          // Allow JavaScript files\n\n    // ========= JSX Behavior =========\n    \"jsx\": \"preserve\",                        // JSX remains for Next.js to handle\n\n    // ========= Path Aliases =========\n    \"baseUrl\": \".\",                           // Root for path mappings\n    \"paths\": {\n      \"@/*\": [\"src/*\"],                       // \u2705 @/lib/api \u2192 src/lib/api\n      \"@components/*\": [\"src/components/*\"],  // Optional: import from @components/...\n    },\n\n    // ========= Next.js Plugins =========\n    \"plugins\": [\n      { \"name\": \"next\" }\n    ]\n  },\n  \"include\": [\n    \"next-env.d.ts\",         // Next.js auto-generated types\n    \"**/*.ts\",               // All TypeScript files\n    \"**/*.tsx\",              // All TSX (React) files\n    \".next/types/**/*.ts\",   // Next.js build artifacts (for type safety)\n    \"types/**/*.d.ts\"        // Any global/custom type definitions\n  ],\n  \"exclude\": [\n    \"node_modules\"           // Never include node_modules\n  ]\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 2158, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "4fb6e88d-0f74-4836-b13c-d070b106daa2": {"__data__": {"id_": "4fb6e88d-0f74-4836-b13c-d070b106daa2", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/types/next-auth.d.ts", "file_name": "next-auth.d.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 655, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "7594adde-4e76-4ebd-a92d-bf264e1d4821", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/types/next-auth.d.ts", "file_name": "next-auth.d.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 655, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "dd9a1721404f599226785a0dac73937d02bd5150aaa5770bd7961821b2d91340", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "// /types/next-auth.d.ts\nimport NextAuth, { DefaultSession, DefaultUser, Profile as DefaultProfile } from \"next-auth\";\n\ndeclare module \"next-auth\" {\n  interface Profile extends DefaultProfile {\n    hd?: string; // Add hosted domain for Google SSO\n    picture?: string; // Add picture if you want it\n  }\n  interface Session {\n    user?: {\n      name?: string | null;\n      email?: string | null;\n      image?: string | null;\n      hd?: string | null;     // Add this line\n      picture?: string | null; // If you want it\n    };\n    accessToken?: string;\n  }\n  interface User extends DefaultUser {\n    hd?: string | null;\n    picture?: string | null;\n  }\n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 654, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "46812e78-79e3-44d4-afe3-4e2480b04fe0": {"__data__": {"id_": "46812e78-79e3-44d4-afe3-4e2480b04fe0", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/vitest.config.ts", "file_name": "vitest.config.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 1230, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5cba9c90-a222-4754-aafc-b4d9c1e4e222", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/vitest.config.ts", "file_name": "vitest.config.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 1230, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "22ecbedfaa0cdcc8089e94153ba4d3017c072460143aa1fc84d7eec39a8957b3", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "13a5f842-b0f6-406e-80a9-d22152367a9e", "node_type": "1", "metadata": {}, "hash": "99811c6dfddfa00d039465857eccd2c9989816863844a54805b02b849d58e9c1", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "import path from 'node:path';\nimport { fileURLToPath } from 'node:url';\n\nimport { defineConfig } from 'vitest/config';\n\nimport { storybookTest } from '@storybook/addon-vitest/vitest-plugin';\n\nconst dirname =\n  typeof __dirname !== 'undefined' ? __dirname : path.dirname(fileURLToPath(import.meta.url));\n\n// More info at: https://storybook.js.org/docs/next/writing-tests/integrations/vitest-addon", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 395, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "13a5f842-b0f6-406e-80a9-d22152367a9e": {"__data__": {"id_": "13a5f842-b0f6-406e-80a9-d22152367a9e", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/vitest.config.ts", "file_name": "vitest.config.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 1230, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5cba9c90-a222-4754-aafc-b4d9c1e4e222", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/vitest.config.ts", "file_name": "vitest.config.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 1230, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "22ecbedfaa0cdcc8089e94153ba4d3017c072460143aa1fc84d7eec39a8957b3", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "46812e78-79e3-44d4-afe3-4e2480b04fe0", "node_type": "1", "metadata": {"file_path": "/workspaces/Relay/frontend/vitest.config.ts", "file_name": "vitest.config.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 1230, "creation_date": "2025-07-01", "last_modified_date": "2025-07-01", "tier": "code"}, "hash": "de3e7de67e4f95e585496aabf7fc20b23fd4cdc205ea07fb91e6a65a109422ff", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "export default defineConfig({\n  test: {\n    workspace: [\n      {\n        extends: true,\n        plugins: [\n          // The plugin will run tests for the stories defined in your Storybook config\n          // See options at: https://storybook.js.org/docs/next/writing-tests/integrations/vitest-addon#storybooktest\n          storybookTest({ configDir: path.join(dirname, '.storybook') }),\n        ],\n        test: {\n          name: 'storybook',\n          browser: {\n        enabled: true,\n        headless: true,\n        provider: 'playwright',\n        instances: [{ browser: 'chromium' }]\n      },\n          setupFiles: ['.storybook/vitest.setup.ts'],\n        },\n      },\n      {\n        extends: true,\n        test: {\n          name: 'unit',\n          include: ['tests/**/*.{test,spec}.{ts,tsx}'],\n        },\n      },\n    ],\n  },\n});", "mimetype": "text/plain", "start_char_idx": 396, "end_char_idx": 1229, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "f4346692-9ee2-4b94-9a0e-285498218fe1": {"__data__": {"id_": "f4346692-9ee2-4b94-9a0e-285498218fe1", "embedding": null, "metadata": {"file_path": "/workspaces/Relay/frontend/vitest.shims.d.ts", "file_name": "vitest.shims.d.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 62, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "386e33d6-fed9-4f00-ab9f-efb79ae91901", "node_type": "4", "metadata": {"file_path": "/workspaces/Relay/frontend/vitest.shims.d.ts", "file_name": "vitest.shims.d.ts", "file_type": "text/vnd.trolltech.linguist", "file_size": 62, "creation_date": "2025-06-27", "last_modified_date": "2025-06-27", "tier": "code"}, "hash": "94a1676488f464e59048d8730282282165e87ef20a7b91660436c0edfb185814", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "/// <reference types=\"@vitest/browser/providers/playwright\" />", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 62, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"27e69706-33fd-45b3-a795-6ebf3def3b79": {"doc_hash": "b3ae7e467942b026c1aa41dabdc8dfb9c00d260f59a753f1db319e8c62617c05", "ref_doc_id": "797aba13-2e11-4cf4-960d-0db391fd0a49"}, "23b63679-6896-4cbf-b232-58b707c82279": {"doc_hash": "0277c8385d7a5381e59fbae49cc37dcbc8871b82ca6486dd915a04ff23aee966", "ref_doc_id": "ea30b3c5-2f89-430a-b9bf-0fea0549f09c"}, "ea63b984-7e07-46c6-9486-273ca9ac02f2": {"doc_hash": "ff23c0d12010f57e319e56db796f252cf71a5cdba5ccc5e1e60a74628e01e349", "ref_doc_id": "f61fe174-8f3c-4004-ad1b-fd9aa755a3c5"}, "30e788b1-3c31-4164-9d31-7906d7eb725d": {"doc_hash": "ff7822848b5b43c02681b15290a90111e050c02816f8b919e0248c32b6079228", "ref_doc_id": "d3bd1837-0208-40e5-aef6-7bcbda8709e3"}, "d26dc042-f346-4cc9-a1af-a83293d49354": {"doc_hash": "06da32eb5dc24d6fa2f45a487eb800364146cc262b9c6206b79b5a65411702c0", "ref_doc_id": "39801f15-a124-4277-b181-306126e68bc6"}, "ac1b0710-abe9-47f0-98bb-1c2c23769113": {"doc_hash": "2b9bdda1ec340456329f065d776c1a94e3edcf2ba3e8fd161ee90b742fa6a93e", "ref_doc_id": "39801f15-a124-4277-b181-306126e68bc6"}, "ec4ad0d8-a8b5-4c8f-b4c4-f3e4568c1d9c": {"doc_hash": "8fe193a4d437f0801f730363dc520574110f82377b820b4b99f065ac4921b20c", "ref_doc_id": "87f72c01-b0b4-434f-8f06-8e716260f95d"}, "1814edb3-2d74-4861-b00c-45372ad3ce5b": {"doc_hash": "20d13fa992f3048940516417926f446859e713a304de58b3cf8fee3009edacf9", "ref_doc_id": "d3f6f51a-1c2d-4c7a-876e-c5c366357144"}, "d0f907f7-732e-4a5d-aa89-146d6ec496cf": {"doc_hash": "32fbbdfe07b875f27ba3f6697a9378a3c0d24460c465405b31e5965042163678", "ref_doc_id": "d3f6f51a-1c2d-4c7a-876e-c5c366357144"}, "754f7be5-8ac2-49ab-a1d6-3b4b9f1b47d0": {"doc_hash": "6292ac39d8b5f950fdabbe10ab314ef96856c8b4491cdd7f7c8011da7b6a853f", "ref_doc_id": "d3f6f51a-1c2d-4c7a-876e-c5c366357144"}, "7d6a9e9b-eee4-40aa-b112-a9e147476bf0": {"doc_hash": "e639ae9caeff321f27612074df964b679522236ca3ddaa81a21baed0d314f530", "ref_doc_id": "6acab033-7a1e-4eac-ba7e-c73f12632c5f"}, "5da10481-f69f-40a7-b68a-658e2d020bd1": {"doc_hash": "0e46959023bebe26603a4cc0b64b5b8e3c01017a5ad2ece4661cfc6a982a7822", "ref_doc_id": "57b8f181-f93f-44f9-b0df-1bd2d7788afb"}, "0c597628-72ed-4e1c-94b6-671d769aba73": {"doc_hash": "e0dc9671ea9080ca210723c8e7d1a84654be99d789df7b70f3218682c51181bb", "ref_doc_id": "ac82c713-3dd8-4802-924d-15bfcb71c470"}, "40ce5bd2-34b6-4d86-9408-1d7c9206cb2d": {"doc_hash": "5cb4219d72ed23379d1a7684244f0d550f44b44397fb26990880892249b3d0e4", "ref_doc_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2"}, "c4f6b8ed-3fa8-455f-b120-687e579c659c": {"doc_hash": "f33bd0c6b3ea7c0419f49231df69472372caaf190c9579a908f5c03eb1d91329", "ref_doc_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2"}, "2cd8367f-7113-49a2-bb19-82d878011b50": {"doc_hash": "ea2661796005307c40c7f6179ee0226496f5e68ef74e742845c5936d1fe61f80", "ref_doc_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2"}, "c4b60711-b84d-491e-9895-f80443389aad": {"doc_hash": "acc760b7c24be7618678734cd400a78839a993599256b6d534a80be0f2f636c0", "ref_doc_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2"}, "8f1edbd7-009e-455c-a292-ae8eafc1358a": {"doc_hash": "0ba3689c01e94856b86e37a569bae3aa8c4e2b9dddff31ae784df41b142ba40b", "ref_doc_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2"}, "9cb09e0f-b234-4fe1-b497-cc756cf2d1c2": {"doc_hash": "78efd9c40a638bab9ab7869217fdc752dac938a8c88be20fda85dbc716e89196", "ref_doc_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2"}, "6fc3aca4-ce21-4a53-bcfc-03fb3b118543": {"doc_hash": "152b56812b9a0e1572e2ce2281c37a31a76d7d7456089628ec960c42a56b96bb", "ref_doc_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2"}, "114db0cf-3701-47cd-abce-2ae7e4da58dd": {"doc_hash": "6fbf5d564a74013dad46fc1ee497a1ca592e22ddb93715c1051088fece5a16e8", "ref_doc_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2"}, "13219f08-7012-4292-94e4-520bed5de3ad": {"doc_hash": "76aa80fa9e535c6260b3fc9b230130e3fd36a9bd8c89e99673ffdd764053b431", "ref_doc_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2"}, "2ebea36a-b12b-41b6-b050-8490c0f74edc": {"doc_hash": "da030bb8d37c05980acf4a9a8293249938d503217e4823bbeb24b702835f9ea8", "ref_doc_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2"}, "6d424d43-5f0a-46b7-82ea-076a1aeb9dc0": {"doc_hash": "f1b8a0c70da8b797da1d40755b00297f3290b725db384e89b2572311c5c9f726", "ref_doc_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2"}, "419f300b-3a50-4f55-9161-1880a0b0a7fd": {"doc_hash": "62fe8f0b0e65723ff14bed025e0823d91b54de38aa40505536fbfb2dd68da6f2", "ref_doc_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2"}, "d5f1f8c9-2667-49ba-a0da-964a02416fe2": {"doc_hash": "02354442ecf0c1c9daf17f7f9d27fbd9df05c23251f5298a414cceb2160a150a", "ref_doc_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2"}, "2b9f826b-400f-4ebe-9e90-97684736fc51": {"doc_hash": "0a1d8bc454067458e3e91f07d37b4469b18776f14f32def1b4cc58e7713ed4b3", "ref_doc_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2"}, "be79bb02-46c2-4363-8093-3a7685cbb293": {"doc_hash": "0065fdb380be206c937887215fed033e6e69772698ae66d98a3e81a2a2be75c8", "ref_doc_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2"}, "3b3795e1-9d3f-49ea-a702-64f0e117ab23": {"doc_hash": "168aebb4a87764ee830793cd6162e61e4d9911dfb010ac291be57dd2bf055b3a", "ref_doc_id": "056a328c-054a-4fbd-b747-e80a6b1bcce2"}, "c2ed2874-083e-4fa3-963e-f940dbd81839": {"doc_hash": "c993374ed1413d859dd5627b915fc0219180d2e7be383977e567ccf7bcfa5bc7", "ref_doc_id": "ed1858db-97a3-4ac2-92a9-f2fd3ea22f79"}, "6df38524-cf9f-45c4-8a89-1760007bdbfe": {"doc_hash": "7148d08113913d1ffe4484ddf92fc59e6c144b1bd514066d473489bdad5dcc78", "ref_doc_id": "ae0b5d05-bcc4-4393-af58-3af2cf5bfc0a"}, "147c2998-1fd5-41cb-adbf-cfcd5eb64337": {"doc_hash": "8b482d1ff813a4fb0693d0502701b6598ac28af514f2a6eca2b7a03191816754", "ref_doc_id": "6fe458c5-7aad-411d-9466-39aafb0d4bb5"}, "aef21626-8a1f-4f03-86f8-e61a6ae1edb4": {"doc_hash": "0bd489c7b7192ba755751aa2b63051c619adb2f9b2c34b7a30b387105dee7f4c", "ref_doc_id": "6fe458c5-7aad-411d-9466-39aafb0d4bb5"}, "5ac3d53d-f1f7-4a17-a4df-3e8f8cc66326": {"doc_hash": "6b2a913394ce0cd08e3deb2c5fa0c6bf06d70615eb450ed4eded8ca073dc53be", "ref_doc_id": "6fe458c5-7aad-411d-9466-39aafb0d4bb5"}, "e5d9ac41-81c1-4afe-aa0c-aca6ebd73943": {"doc_hash": "7333729953da8db25af1edf7b7e33c24e12c4b3d2ff2a062cff57905ef2f8575", "ref_doc_id": "6fe458c5-7aad-411d-9466-39aafb0d4bb5"}, "4f378656-99c3-4e3c-b1aa-d810d261764a": {"doc_hash": "8b09eb151e8998845307231f30950a585791246cd4aa65659d946bb585df678e", "ref_doc_id": "6fe458c5-7aad-411d-9466-39aafb0d4bb5"}, "7e117f99-829d-4515-9302-c7e0d93544c7": {"doc_hash": "8ade057c9663573a5e3b9350dc9447e234cfab44d036bf5ca473d24af82e5a9c", "ref_doc_id": "6fe458c5-7aad-411d-9466-39aafb0d4bb5"}, "956e0b3e-41bc-4446-b458-60157250eda2": {"doc_hash": "c24cd3fbcfecb484ab44c85e89e4bc35c1f8027686faa8bf566cbd56586d5949", "ref_doc_id": "6fe458c5-7aad-411d-9466-39aafb0d4bb5"}, "8557e129-d78c-40b2-9085-685b7bba6f36": {"doc_hash": "157a4ad7fb95c13ba876655da17d0253e2614ea69dde4e2a92ff69fe64d63819", "ref_doc_id": "6fe458c5-7aad-411d-9466-39aafb0d4bb5"}, "ba26ae73-3fef-4874-a708-8043e6d42b97": {"doc_hash": "4da7bf6a7e93dda96083300b8d5277625b4702adb0d926d66575444affcd3a8c", "ref_doc_id": "6fe458c5-7aad-411d-9466-39aafb0d4bb5"}, "cfbfb3ac-109c-4cd6-824b-f5ff36ad8d9f": {"doc_hash": "291168d54c55e064596f67945918f534e55a30b858925832fe519c06d0d98ce0", "ref_doc_id": "3788a83f-8d6b-4231-ab7d-e18b12747e7e"}, "c2995ace-d1d8-48ea-adb5-4eb3b660b4b4": {"doc_hash": "21fe7adaed0b0974641d17bc0adf9c4f7eae3c753332d1891c33737efb88d047", "ref_doc_id": "3788a83f-8d6b-4231-ab7d-e18b12747e7e"}, "d05dc8e2-8bc9-4211-b6f1-ed35f470b613": {"doc_hash": "b8902a53a2843ff952c6b5e9d9816a56946c38b0e17a8726fdf1590742baa4ca", "ref_doc_id": "3788a83f-8d6b-4231-ab7d-e18b12747e7e"}, "6f52782e-68ae-48b9-848e-bdb1199136a5": {"doc_hash": "e6cc10ffa1d7840f293fff358e54a44269d959ca3ffc4edcd90f9ed0878599e3", "ref_doc_id": "b12a0c1d-1251-4686-8db4-b544b86ebaec"}, "25081a75-f83f-4503-853a-b1e53422fbe8": {"doc_hash": "e6e69a112a09c4afa93be000d9e7ff50a8bd9f0d8b04d8a664767511d5203b23", "ref_doc_id": "b12a0c1d-1251-4686-8db4-b544b86ebaec"}, "1cc4d3f5-552a-4479-81da-1c58b3829c44": {"doc_hash": "15937bc2b6a4188f3b1d38e52c98f0de1f0ccbee3c15afc7f6209f87a8545825", "ref_doc_id": "b12a0c1d-1251-4686-8db4-b544b86ebaec"}, "dedb5320-1a68-41d3-9265-9a63dd46a81f": {"doc_hash": "5e20c01cc200b08e4e95df31b949458a3f7f1f1dda623e36be3a35d0acbf0ae1", "ref_doc_id": "b12a0c1d-1251-4686-8db4-b544b86ebaec"}, "3792444c-c224-4373-86f7-e2a9b996ed6c": {"doc_hash": "242d84ae9ebb532fb2eced19b5049b016bf2e6cbe5d6dcbaaacf3ac8bcb61336", "ref_doc_id": "b12a0c1d-1251-4686-8db4-b544b86ebaec"}, "53506a4f-b094-458b-a79f-d88711047b1f": {"doc_hash": "87d0de24088abc6568cabfd60ce759cb04fe66d8195efe41fcd6d61b131fcd05", "ref_doc_id": "b12a0c1d-1251-4686-8db4-b544b86ebaec"}, "9f942eeb-f102-48b5-83da-26421385b4dc": {"doc_hash": "44b64592a9223600c0f6db0f351a791453d97f0ad0307094232d5489a22cb149", "ref_doc_id": "4af69885-5b52-45f5-ba22-ba944a4acbc1"}, "cd64f3a7-767d-4c46-8280-7b0d42ce72d0": {"doc_hash": "21e7176b08ba8e3ccac4e27db5f9d4abd6e703740f390f6ac1257343707f0d22", "ref_doc_id": "4af69885-5b52-45f5-ba22-ba944a4acbc1"}, "939ecfc0-1f7e-4547-b0a2-ed3bb8c9a581": {"doc_hash": "308171d605b14f839929f91b1d68bf7d9a5c1450b644682bbe24bcd99ca61744", "ref_doc_id": "2707e462-9c9a-4f24-b5d4-671d469282e2"}, "58406ed8-6d23-4632-ada7-5de2858f137d": {"doc_hash": "45cd94b7f1b0cb7e00481ca5618d90b2cf27390e2509c69e039a8f35a91a20d0", "ref_doc_id": "2707e462-9c9a-4f24-b5d4-671d469282e2"}, "5d82d2c7-2952-4cc4-b587-9e53ca9100cb": {"doc_hash": "5024e4a2964199c5bb308e9c25839da831036ba68bbb608e8c000786689a82a0", "ref_doc_id": "2707e462-9c9a-4f24-b5d4-671d469282e2"}, "721e1c33-d865-4b67-9b1a-74dcc7b00aac": {"doc_hash": "c981715c5f5c31158d8d537894b01cb7860e1ef231ba3ef7606280d6e8982dd6", "ref_doc_id": "2707e462-9c9a-4f24-b5d4-671d469282e2"}, "1c292396-7429-4561-b3b4-dfb1e30f82dd": {"doc_hash": "9817feb116d64324f0be3dbc9dfb7a85e5e633722d68b3bf837f3cd6a008c6a4", "ref_doc_id": "fa8923d1-1b06-4cc6-903b-99fcdf67ff7f"}, "9654c838-586b-4d17-9258-b5af6bfccfcd": {"doc_hash": "3a335f99783263b448106864a7f500cffc633cc0fb29bc96cc899d77c3a45136", "ref_doc_id": "fa8923d1-1b06-4cc6-903b-99fcdf67ff7f"}, "8af9d9ad-2861-40f1-9b5d-741847d1fe88": {"doc_hash": "34e5d431939f8bd6877d9c1515a5640d897cf7fa1398e7eedd9edb05df5c6839", "ref_doc_id": "cb2eef9a-1534-4265-8ebd-78a05713ec1f"}, "e8243208-03f2-4447-acb8-c8e8b61d0703": {"doc_hash": "c8e063b0be0985757fc93ed11c570d67d9be4dfe5d4d686e7986dc103a8f1c0e", "ref_doc_id": "cb2eef9a-1534-4265-8ebd-78a05713ec1f"}, "887f37c5-2278-4a5e-ad07-7b765bfbf176": {"doc_hash": "695afe4fa0aabf13bf1136b54e0004920de9898d9535ffaa581ef15ae1496899", "ref_doc_id": "cb2eef9a-1534-4265-8ebd-78a05713ec1f"}, "5a3e4c9c-0a5e-431f-ba2d-61593395da37": {"doc_hash": "3ca1587695e9e48203bbcdbcd6dc2d9b40818a96643f098a415ab82865fbc422", "ref_doc_id": "cb2eef9a-1534-4265-8ebd-78a05713ec1f"}, "8b35180d-c81a-4762-8e7a-f8c758246070": {"doc_hash": "edce8e41d6a86f415f042de6eb2274f3a3d4c9f8776f6db7a5739412ba0597aa", "ref_doc_id": "cb2eef9a-1534-4265-8ebd-78a05713ec1f"}, "102fa38a-5ad9-4d44-96af-35595b12b576": {"doc_hash": "e918b16bc3d950e3a7538d3c070765a99e46a5cb7e37aa6978d36f2c6a89977f", "ref_doc_id": "cb2eef9a-1534-4265-8ebd-78a05713ec1f"}, "d038650c-7307-4812-92f8-596047000bd9": {"doc_hash": "599df50fdb3a612d5e6c2d0a729e744214fc2e548375ca461ef79086d14b5795", "ref_doc_id": "cb2eef9a-1534-4265-8ebd-78a05713ec1f"}, "b40ce4a0-6129-48cc-a5ee-4e9557e4cf7c": {"doc_hash": "da1483a445a6cb9ab61f3c1c2e680190d20a152b2e02591fca8a2f059b11bf33", "ref_doc_id": "cb2eef9a-1534-4265-8ebd-78a05713ec1f"}, "14dfb7e8-5f2e-46c9-ba8c-e032cbcfcda3": {"doc_hash": "f7df0ddedf1c103509e6b5daa02cc808606c9ebf449ac612883e7710ac433464", "ref_doc_id": "cb2eef9a-1534-4265-8ebd-78a05713ec1f"}, "303f164d-fd4e-4912-b405-1a5d2495e0a9": {"doc_hash": "cd1d2f601e136da2a0cd79dc29eb8cbc209f4d94334df8b741741cfa62acca04", "ref_doc_id": "2b1436a0-8117-433a-89ab-01ac92bfa271"}, "ed222757-026e-4a8d-8a95-1b39a63512a3": {"doc_hash": "9d12edc3ba057ea482220a989a67db9803843973e9aaa015e1a6722570309634", "ref_doc_id": "2b1436a0-8117-433a-89ab-01ac92bfa271"}, "2b1c1eb4-5a53-4ec4-9a87-a04682baff9b": {"doc_hash": "5b43ffd59e249ed9f5a64b7fe7935e22f749f8983e94572d04af4a9016f23a69", "ref_doc_id": "2b1436a0-8117-433a-89ab-01ac92bfa271"}, "8b9a0fed-97f7-46e3-b138-51c859d09d4c": {"doc_hash": "0d8b273ad2f1379b0aa43c1dbe4fd9db0feb482b41974e908f76b382e52775bd", "ref_doc_id": "2b1436a0-8117-433a-89ab-01ac92bfa271"}, "6b2e0036-b56e-4b6d-b319-dd01d42ab9c7": {"doc_hash": "fb027060d399b6c068b43947e439fd47bb728ea327a7f98334e497af63abb046", "ref_doc_id": "2b1436a0-8117-433a-89ab-01ac92bfa271"}, "4cc47649-9b37-4ab3-9477-30bb9ce42dba": {"doc_hash": "6d5d979d31cd26099f17d2555ca80571513e3f76243a3b335449b781444af12f", "ref_doc_id": "2b1436a0-8117-433a-89ab-01ac92bfa271"}, "be4b3bd9-8c14-4676-a622-0dd28b578b0c": {"doc_hash": "638eadf52c2ad4b44ebd60768ef439c24da45732f3d3faba81962f3fd6ada0b3", "ref_doc_id": "2b1436a0-8117-433a-89ab-01ac92bfa271"}, "e795706d-3b62-415a-9a5d-6a10ebeaf983": {"doc_hash": "eea5f877ee8f62fb21e4e36d95cab7d312595488adb3691b1f34164e80c53df1", "ref_doc_id": "2b1436a0-8117-433a-89ab-01ac92bfa271"}, "f9491840-f0e7-4f37-a374-516f9c7657f1": {"doc_hash": "ae6342cae8e4f8ed17e034ea5fd3d7300bf11c56a509dbf5f3372e2e0d1af521", "ref_doc_id": "2b1436a0-8117-433a-89ab-01ac92bfa271"}, "05bc815b-f798-4363-ba7d-a0040ea64f72": {"doc_hash": "b2be58ca3ba0cb4d5c9dedc42bfc2015720981fa4733e8a9f038461176a3226a", "ref_doc_id": "2b1436a0-8117-433a-89ab-01ac92bfa271"}, "0f2af6b1-711c-4f38-bee6-1f6fcc4fa583": {"doc_hash": "3030749870890d62198768c2a961adea1d642314ee4ddddd7c2d78857528b5f2", "ref_doc_id": "2b1436a0-8117-433a-89ab-01ac92bfa271"}, "755799a0-a80d-48ed-b961-103bbed23481": {"doc_hash": "500372f79b2d55fd85a8bbdf98214c3ca3e84a4364bc2bd81880d92ff85a71f0", "ref_doc_id": "2b1436a0-8117-433a-89ab-01ac92bfa271"}, "59a6496b-fb3d-4918-95e6-d573b974705f": {"doc_hash": "15395a1b882615d7c56a79095fa582a197edcaaa46e99d5e3a34dba05e6d2caf", "ref_doc_id": "a666f235-dca5-434f-a0ed-5218b0fba946"}, "f8a7c431-5fe3-4137-9389-0485bba938f8": {"doc_hash": "ce55b1bfba7c3932db9eb407e8754e59cb50a56d104a2a936b6695becf8dbde5", "ref_doc_id": "a666f235-dca5-434f-a0ed-5218b0fba946"}, "414d859e-6a52-4ca2-a1e7-d49cb3e8aa32": {"doc_hash": "ae615d7d3b725393c2301304ce38559539fad95672305a80d7d50af64657b580", "ref_doc_id": "a666f235-dca5-434f-a0ed-5218b0fba946"}, "5f50ea3d-df11-4435-afb4-234847694bfc": {"doc_hash": "1105a50825a5fa8da38e28f2f2a32e8519ad0fca7ac01bfa0c188fe8cb7dc23a", "ref_doc_id": "a666f235-dca5-434f-a0ed-5218b0fba946"}, "4a7ae048-efac-4bb6-bc87-4cc87bf50646": {"doc_hash": "6c64d6addee23d51f2978ad2d1c481f2094d62bcd0ca4f8ed93c786db9b45a57", "ref_doc_id": "a666f235-dca5-434f-a0ed-5218b0fba946"}, "fce6bef7-f0bb-4c2c-a2ec-1275586627d8": {"doc_hash": "eaef2d017ad4446a8cfa70132ad6bd440be7ea6d961cb12b1e252449e242c9ea", "ref_doc_id": "a666f235-dca5-434f-a0ed-5218b0fba946"}, "24695976-1410-4da9-af3d-397fda177292": {"doc_hash": "292377c972fe7d0eb5edccf46746fa4c5067d10ff863b23f72816d30b32e435a", "ref_doc_id": "a666f235-dca5-434f-a0ed-5218b0fba946"}, "baecafb1-fe67-41f6-b290-1bb0c365f392": {"doc_hash": "6f5429784629819f45362f064b5c4eda994e5cf1dfe8252f74490a3d9dbe6e6f", "ref_doc_id": "a666f235-dca5-434f-a0ed-5218b0fba946"}, "f5e43563-2ce7-4c46-a0d1-e3fea5d3dc2c": {"doc_hash": "c7e3d121a46312354c1f4d14e847f4859777b658b66fef4c5984562a54f0f990", "ref_doc_id": "a666f235-dca5-434f-a0ed-5218b0fba946"}, "33795aa5-5498-4d61-a914-4a5a4a924717": {"doc_hash": "0de9ca2f242db8b6a482d6dfe64151925fb197ca14cc5ad3b536a34b2570722e", "ref_doc_id": "a666f235-dca5-434f-a0ed-5218b0fba946"}, "5736b3fa-57ae-4e17-978a-bcb3508a5ddf": {"doc_hash": "a8a09759d49b6581b1f4e6d3e4af9eef5862f6a7632d53a585a566e9e4860b8d", "ref_doc_id": "a666f235-dca5-434f-a0ed-5218b0fba946"}, "05ec0a68-e250-412e-9d55-48ea1ee42099": {"doc_hash": "af9f5dd6356a53250ad3c2b9e67ed03e9c9b223072a76a1eb5706e0d4761d181", "ref_doc_id": "a666f235-dca5-434f-a0ed-5218b0fba946"}, "c95604aa-e6f4-4f00-96e7-24427132c373": {"doc_hash": "44b718e25da38c122eaf49ae97d89fd67adfc592a7eaf815bdbaa637b5abaf45", "ref_doc_id": "a666f235-dca5-434f-a0ed-5218b0fba946"}, "53799397-28be-4604-946d-f7ab9729b1f9": {"doc_hash": "1666ebc365124f8a2b6eeb4a7407647808775a5f1a08cca72662a6eba714b2df", "ref_doc_id": "a666f235-dca5-434f-a0ed-5218b0fba946"}, "77ca0d4f-906d-4ebd-b1b8-7635a226b11e": {"doc_hash": "5c1da420569315dcc4b6394b7f41c977e5abbebf122272e3fa0d5c717db11211", "ref_doc_id": "a666f235-dca5-434f-a0ed-5218b0fba946"}, "a2b3fc7f-c005-4983-9725-3659d0ee54d9": {"doc_hash": "f21dc692d6034649215f45dd1a10160057e36decc477aed9a615ab81571c98fd", "ref_doc_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85"}, "47bcaa45-7db8-49fd-a06e-e6f0b24a7bb4": {"doc_hash": "9e0aa57ea15e60fafd948fd8086438ea900c10280e920d9420e76eece2cca490", "ref_doc_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85"}, "2e7b5211-7bec-4bbd-ba1e-81a3368db65a": {"doc_hash": "475dfca64984546a3984bc1c308d60c30d64462372f6af3f33925c8626e34dcb", "ref_doc_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85"}, "10e3babd-88b3-4681-bccc-d5567a2e4bdc": {"doc_hash": "d2a44ef529619a29ce749546c6e083858badf5e71c22b9b5fbb08114f9fcf912", "ref_doc_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85"}, "a8c515ff-a960-4f63-b961-2160be16ccc1": {"doc_hash": "1e78eac6cfd83c4d5a4c3deaf6fc61838117ac9f457a30f478cfb5123d2b3227", "ref_doc_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85"}, "36bb4775-952c-4d74-9207-3aa34e10b781": {"doc_hash": "d2974e4046d41fc61430d4e052bee08c75ecb8073669ecb3207faec6e1dce560", "ref_doc_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85"}, "d5631e2e-1118-45d3-a779-24c85fe903e5": {"doc_hash": "ad69406aec14dafdaf3880e63c38658837729296f6c17fdb8d5be054f5053492", "ref_doc_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85"}, "ec1923c2-df1b-4855-8a0a-f336ab815318": {"doc_hash": "88f4c773a9bb1341fc4fb56c4db0edade2862cb6c861bf1dc31925b16a8ebc1b", "ref_doc_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85"}, "d751cccc-ecb3-449a-9688-83bd9bf60b2a": {"doc_hash": "844c4ba6559190f2fd056b8de2b4c2a33bbaeef8c2c6f6d589176721186d0295", "ref_doc_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85"}, "28d4aa8a-fc3c-4256-8001-ebf3989a8a4e": {"doc_hash": "5e6b01df74c9c973329bfd12b2dd3c5b3e2b145a32661e7a1cbc2960b3133efc", "ref_doc_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85"}, "152d65b6-df48-4693-bfef-f2d3545879db": {"doc_hash": "112f6956f1515916e2f3907ca3b6c0efea001de258deb2ce2bfd88aab656dc5d", "ref_doc_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85"}, "052aab5a-bd42-400e-b9be-418cc0917e28": {"doc_hash": "87ccaa700742d471c1c2d22573d741ba7fb1c91e1acb53e021d7bb28ff263bc0", "ref_doc_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85"}, "8cee292e-0f75-47a9-924f-c6dc64853467": {"doc_hash": "7e13039084a2000fd0c060516274452a38b74eba087a65f089c53621c7a8486c", "ref_doc_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85"}, "24f995f0-78c7-4641-a0b1-24207b3660f2": {"doc_hash": "d5319133acb8730b729224cedd32d7fcad9771ba6903e58810e3f334436ed8f6", "ref_doc_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85"}, "963ddaeb-e1ad-4637-96ef-56c1ca3d1497": {"doc_hash": "0c2e1a55a3c839978e8f15c30c59357c8b937d316534336869cf74064f276dc0", "ref_doc_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85"}, "90403812-44e0-46d9-be67-38a6e2714b1f": {"doc_hash": "02dd4a918c314bf5390463f50dc0ab7c7b3fdc7906af0d3335cde1296dadc8b0", "ref_doc_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85"}, "09f3da52-f881-4e3e-a0fc-534480631ac5": {"doc_hash": "b5af8b815c28a1aadb854f35e83950247572553d038169cbc89f01e75aab7fec", "ref_doc_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85"}, "3b684c45-950a-4ef6-b4b9-05ded2e0432d": {"doc_hash": "3b57b46fe94f76f85ffe60fa540c841df344359a79ff2255119f1d2146f4ef67", "ref_doc_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85"}, "d5b075f2-38d7-4371-91a1-86a0e111c9ba": {"doc_hash": "4abd6dd7019220fcef8ca94d720e304681bb4266250a45db91fc6a39caa1da88", "ref_doc_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85"}, "3d7b14fb-d5a8-4b14-a90a-931425ad6ca9": {"doc_hash": "2eb5e5e8af63e251b6aa1e080859cf53b3e57641a087f123f4def8860a9f2287", "ref_doc_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85"}, "9a952462-c0a7-471f-b4e8-45085548232a": {"doc_hash": "102f8d6e14eaeb10b803c0a494776d17b2ae4b3adee2b4db51edcc6fcb506c17", "ref_doc_id": "0e4b6eda-fdb0-4144-9805-0563704f1c85"}, "331a17c2-a6b2-49d8-80c2-8f51e16f9c92": {"doc_hash": "ea4db7d6e29e0c3c852a900797667e464ff9399a9bfcfa91109485cf56e42ae9", "ref_doc_id": "2dfefa9c-8e8c-4d89-b6ff-dd9955e1ee8d"}, "82a46837-f211-4bfe-92aa-f52312498e69": {"doc_hash": "14b083600e2ab9f0390d0e6122a9075c64a3dc2906c4b18d7a74c4f089167d63", "ref_doc_id": "8c2c9253-c07d-427b-9983-26b4a3030368"}, "4fb3ba42-e65a-4f7c-ad44-ad83a91a38b2": {"doc_hash": "3f0b03c72032ea0c498576a7c6a838c9aceeafc739d0f24fb06267655442f5d6", "ref_doc_id": "8c2c9253-c07d-427b-9983-26b4a3030368"}, "648811a8-041e-43ee-b48c-9301c8ef2f04": {"doc_hash": "fe1428a9760452045675897bd67b5e58dd3c70bd092270417e5e7435ffd4c65b", "ref_doc_id": "f19298e0-cb64-4144-b892-97baef329270"}, "0e1cad43-0877-4350-af91-884ca804e464": {"doc_hash": "13fdd9bf16731bf2943503004d9a6732f16c3eb8d99dd901dadec9fa4b09e792", "ref_doc_id": "f19298e0-cb64-4144-b892-97baef329270"}, "94ec48ac-05b4-45c0-9e55-87460566c0fb": {"doc_hash": "6a13da31dfbac974cab7473f7b0345337eb9e6aca91406937970b1c29ae2c073", "ref_doc_id": "f19298e0-cb64-4144-b892-97baef329270"}, "09daccee-d5ce-4182-9dba-80bf9662ec44": {"doc_hash": "3f5e734924ff0cb82a4e942a047ba4fbd196c649c967b0f5418a8417c43a1453", "ref_doc_id": "f19298e0-cb64-4144-b892-97baef329270"}, "aae7f7a5-7ae2-4322-93be-a63a45dec789": {"doc_hash": "9f3c485e11b284ed32c04eb8337b1e12c6119215eccb9417d060f0ed237f2661", "ref_doc_id": "b99d6780-a966-4eb3-82cc-3691ae426d40"}, "7b6382c5-fd13-44f1-af73-44f9527be802": {"doc_hash": "5dfe3ce3803c01a1a847cc9ddd61446d9d4eebba1f052c2089dcf3937490a7dd", "ref_doc_id": "b99d6780-a966-4eb3-82cc-3691ae426d40"}, "b30e64c2-5d91-456b-bbfa-5059ea2ed52c": {"doc_hash": "1811e48b8ff9ef07964f2a147df53ccfe2294c72991f86a4a037bdce934df771", "ref_doc_id": "50a61fc3-83da-48cf-88b3-1e30e50b746d"}, "ef12f215-d52f-42d2-93ba-dc56daa27c14": {"doc_hash": "4ef1a7ea3460edb4beee9093981ef28e9330e1da243d772dd73a0f9a98c16652", "ref_doc_id": "50a61fc3-83da-48cf-88b3-1e30e50b746d"}, "44974340-92b3-491b-9f56-79a23446ae46": {"doc_hash": "2f804b8830580ac66272827514ff76c1ef046e265b9b4c588a5ebd4ca5470450", "ref_doc_id": "e13f0743-9cfb-42c0-9429-1a519170ce74"}, "788d2af7-204b-4fb8-a8f8-039f45505ae8": {"doc_hash": "9366a489d07af2f83dc24b6052f13421a74749f718cd9d4bb1996ce69545a612", "ref_doc_id": "0a3f757a-5777-435a-9679-efa508838307"}, "943698fa-4800-405b-8170-1831cdeb1233": {"doc_hash": "b8cfb097721494d6db89badfd37fe8e746b6f9c81c919022359cb063d3dfa0a2", "ref_doc_id": "9a99fe2e-b31b-4f80-ad0a-180833445860"}, "93559f09-3224-4b54-9504-6e8d306af895": {"doc_hash": "5eaed9b9fda99ce0950a359168d7facc7c67003ca4f3fde516e995043714fb6b", "ref_doc_id": "9a99fe2e-b31b-4f80-ad0a-180833445860"}, "dbfa6ffe-7212-4ee3-a5b8-d2b48d6d16c5": {"doc_hash": "205923e11f5dcc468435c5a7f714890cd801173549a7302eafc4528d3ab338e4", "ref_doc_id": "9a99fe2e-b31b-4f80-ad0a-180833445860"}, "431d30db-002b-4394-88b1-cf410011505b": {"doc_hash": "95db75a8ee4a7e1f65d5d3834b0d9a7914296eb4263a70c06125de6964e04aaa", "ref_doc_id": "9a99fe2e-b31b-4f80-ad0a-180833445860"}, "27fc97af-4c63-4143-ace6-911a6f649d23": {"doc_hash": "6178ca3ad9f0d96b8e85c83ca72c33777cc31d8a2e6ae89364f354a5ae80b19c", "ref_doc_id": "9a99fe2e-b31b-4f80-ad0a-180833445860"}, "0f47a0f3-68f1-47fc-a7d2-76d750021701": {"doc_hash": "ac5acf819ed667ca3b0c3db110cf6a85298924752e8b5899472fced647a2e60c", "ref_doc_id": "9a99fe2e-b31b-4f80-ad0a-180833445860"}, "1af34c33-8618-4b0b-8049-00997c691f6b": {"doc_hash": "a49583bd1b6ff5c86e80d2830cd2e1d03882a73dab23e0f8edb08a38825cffb5", "ref_doc_id": "9a99fe2e-b31b-4f80-ad0a-180833445860"}, "91eda1cb-d727-4d4c-8759-8f8ad06505ab": {"doc_hash": "db90abe0c7aec496533f8774ba18897c24384bba784d5e86f11a2595a3118c88", "ref_doc_id": "9a99fe2e-b31b-4f80-ad0a-180833445860"}, "404b23a9-e57e-4e33-8f92-c981a2a6a4f9": {"doc_hash": "3129d8d9c1154a3c5ccd87b9b50380dbd1688f15afe2806f6a242c980e2f266c", "ref_doc_id": "9a99fe2e-b31b-4f80-ad0a-180833445860"}, "9c33cb34-2ff0-44a9-8f57-f719d0d55a43": {"doc_hash": "b8bbcd9d6646ff7b976940fc03185df3f32300bdd16441b833ebf0ddfb6a743c", "ref_doc_id": "9a99fe2e-b31b-4f80-ad0a-180833445860"}, "c3671e3d-bb85-42cb-a65b-7614ffcf8906": {"doc_hash": "5effd8ed5ace6c90a1c02eb09ac3a9e921b2ad4a2923473f4f539b1b63ad63d3", "ref_doc_id": "9a99fe2e-b31b-4f80-ad0a-180833445860"}, "59d2122f-0f3d-4679-a97b-efd264c3ce34": {"doc_hash": "70a2f2082b1688308d3acac8d3900c84c9ae2a80d515d018a5a5be7e7991e264", "ref_doc_id": "9a99fe2e-b31b-4f80-ad0a-180833445860"}, "29b9983c-fa10-495f-bc61-2a1e23dee3dd": {"doc_hash": "250baaea666a814a88bcbdf886d6454a86b94297144db7e2fa83136198d262e6", "ref_doc_id": "fdc31de9-3775-425f-8a1c-b838441b618d"}, "0b164f75-378e-4cc4-ba21-a04a6c00713d": {"doc_hash": "3d8f5b27fc6db13f0ffd8def299bd6af0dbe9e6183c22d73ab4702ed23a2b49a", "ref_doc_id": "6486cb74-8eea-4dba-888f-af0997f24350"}, "8c960dbe-5e22-455a-b794-84d32445e384": {"doc_hash": "1419db0d153fc3f7b99bf9adafa6c54d424b717a6aef09b287938289d02f80bc", "ref_doc_id": "6486cb74-8eea-4dba-888f-af0997f24350"}, "49f55fe0-1e4e-45e0-a756-19430092472e": {"doc_hash": "5be8a92b3afa85562cb9bfb707492f72bc0429fb260e0ac8b184b095367d361b", "ref_doc_id": "6486cb74-8eea-4dba-888f-af0997f24350"}, "312ed36f-41fb-40ba-a335-575cbe206050": {"doc_hash": "daa7ca22d56d235006beb7b467006e4e425dcc0f753d9a545a817213934ecc61", "ref_doc_id": "6486cb74-8eea-4dba-888f-af0997f24350"}, "9fb0a50b-1ba7-44b8-8f04-f0822780fdcf": {"doc_hash": "c42336954cdbed8866cef812b63395154d3991b49bb2a454ca0c7de7c3c3dda5", "ref_doc_id": "6486cb74-8eea-4dba-888f-af0997f24350"}, "e5712f37-48d2-42db-ab55-1dc01a0568f0": {"doc_hash": "823dfe603de8739a5c7e73942cc1b11f6a961b0f5a069eb714384e60a9f63cbf", "ref_doc_id": "6486cb74-8eea-4dba-888f-af0997f24350"}, "bf1c8883-ddb4-4df6-92fa-604ebfd829ce": {"doc_hash": "9b64fdc04bd17ebb1335dba4e629ef72178343faf6d986872000902e028411b9", "ref_doc_id": "6486cb74-8eea-4dba-888f-af0997f24350"}, "bda67473-6eb5-46d4-9ab4-f2d5e371921d": {"doc_hash": "6c7fecebbc8b939a5227dfd19dc9fd67c8ac3f58938407d42d92d8baefdc1559", "ref_doc_id": "6486cb74-8eea-4dba-888f-af0997f24350"}, "c014f770-7c48-4fb7-9bd6-0723019a69ba": {"doc_hash": "74b38235d8335b81c46a5eea67e4cf7cc08240b5a0d4b8d391013f85ea36e1ad", "ref_doc_id": "6486cb74-8eea-4dba-888f-af0997f24350"}, "6ea9b21a-39fe-4987-8281-54607abf06c9": {"doc_hash": "d37b40d2c652cb65b858479f812c3a9a8f07ebf2d27655d2cf3956b487ae2018", "ref_doc_id": "6486cb74-8eea-4dba-888f-af0997f24350"}, "f8f78446-108e-45ae-a3ce-ee0d39410096": {"doc_hash": "6f7421b5dc778d5bdd092eb875eb6307420ae397c9acafcab26b34fba4e3dc69", "ref_doc_id": "6486cb74-8eea-4dba-888f-af0997f24350"}, "0443b3cd-e516-4295-a0bc-854770e5500b": {"doc_hash": "90f82a939b429a1887a5227d9cead61a08bdf2294d87fd4246725b0168334b1d", "ref_doc_id": "6486cb74-8eea-4dba-888f-af0997f24350"}, "4de6b473-a7fa-4cec-adaf-32c6d1f7f990": {"doc_hash": "421d15ca4aa2aa09c321f375bde3db3ef3cb0f9446bcb1be1d10b8c41f626fff", "ref_doc_id": "6486cb74-8eea-4dba-888f-af0997f24350"}, "c9778068-23d8-4fc9-8ad3-2a258e790d4e": {"doc_hash": "c22ea12637ea237e982be6b0211fa883eb6a633df84af0803596bcd21f4bac3f", "ref_doc_id": "6486cb74-8eea-4dba-888f-af0997f24350"}, "d0b2d80b-7e9a-46eb-8af8-e645ae60f07f": {"doc_hash": "f2c4e433d70e0be012bfc7f9c7b36c4c77a2e0003e249184b31d712896d728e4", "ref_doc_id": "6486cb74-8eea-4dba-888f-af0997f24350"}, "091ea73f-0266-451a-8d51-9276b3c95975": {"doc_hash": "7b03cc6c3f8c2a173beeb64ed337bae52642fe44c738557950e513650c0ecac7", "ref_doc_id": "6486cb74-8eea-4dba-888f-af0997f24350"}, "97abf292-5cae-46c5-8dc8-dfa6f63c7192": {"doc_hash": "7c141cf5e05a8d63bdbe51380ef05b663c350387c01489eab090098fe4491c5d", "ref_doc_id": "6486cb74-8eea-4dba-888f-af0997f24350"}, "6ad1fd2f-2938-4cb9-93bb-f1f5393c2e6e": {"doc_hash": "ce4201c36125d8e042155a329bedb5d709613c37ea02cc953f92198b29b890df", "ref_doc_id": "2feb28ac-baa4-422f-b55d-584b618a4518"}, "f6592ca7-734c-4e06-8cd5-da32fce6b12c": {"doc_hash": "ad3d278220e9ecced78a72d7104ff632193954f0c4d5af05d6a41f8392d8cf2c", "ref_doc_id": "2feb28ac-baa4-422f-b55d-584b618a4518"}, "c1d5f863-ef22-45f6-a85a-732aa302f36d": {"doc_hash": "de12bec774ea0341fa3e18307362363beb017ac93b56f86c30ad22179319c44c", "ref_doc_id": "2feb28ac-baa4-422f-b55d-584b618a4518"}, "3b7a7b32-a375-4644-b176-03910ccd64ce": {"doc_hash": "a98a6f8361d2efc8cfde3ad899ba5aa06d8a7ea00b9990aa8f3dcfc50afdce92", "ref_doc_id": "2feb28ac-baa4-422f-b55d-584b618a4518"}, "e368d551-37fa-4d82-969f-a945da783fee": {"doc_hash": "f814d9f1775c3b5f1ffda25f383903dc5e2814364ae2173f9bf03110ee52da2d", "ref_doc_id": "2feb28ac-baa4-422f-b55d-584b618a4518"}, "a2585195-8503-4b5b-9926-09c76139f88e": {"doc_hash": "caf0d35aacdfac38ff56a6960401237d404f5bb6f4f19943cc79f9d7895aa032", "ref_doc_id": "2feb28ac-baa4-422f-b55d-584b618a4518"}, "d7b57a38-6d55-4e5a-897b-f39097264644": {"doc_hash": "9e463f96253be8ce41f4e11fad9ff732d5dc92d1a71dffdc25cb37a3b21f0eba", "ref_doc_id": "0a4c43d1-4d9a-43ad-badd-40bb975ff269"}, "5a3440ed-48e3-4e2f-b6f2-ddff01b00469": {"doc_hash": "16f1f9021c48366a1839c42071a08daa809553017623df32b98f167f581f52d2", "ref_doc_id": "0a4c43d1-4d9a-43ad-badd-40bb975ff269"}, "09eeec65-c607-4251-8ac9-4ba8a47c7a6a": {"doc_hash": "8417f9a70709246e6c0fe838dd9ed9d8fd164ea777fa8f0b817dad5244c7ea32", "ref_doc_id": "0a4c43d1-4d9a-43ad-badd-40bb975ff269"}, "76a60c16-69f2-4f25-9f82-bc451a4d423e": {"doc_hash": "a1a915848c178a2fbe91cc96566be4e65ae7fb5f35460b9b6d047872311131bb", "ref_doc_id": "0a4c43d1-4d9a-43ad-badd-40bb975ff269"}, "4de69029-cf63-41c8-a073-687e5ecff4cc": {"doc_hash": "8be593afe14f5fcdf2d11c24f1004355d123f385c1e3dd7254c4b6a4faf27c3f", "ref_doc_id": "0a4c43d1-4d9a-43ad-badd-40bb975ff269"}, "0091979e-2322-4aa7-a3f6-26c158fe3607": {"doc_hash": "27c28634f29ec3e80312da7b0c9a7a12d1f599b6bf5bd775b6665aaebffeed88", "ref_doc_id": "0a4c43d1-4d9a-43ad-badd-40bb975ff269"}, "3e0ac4b1-26c3-410f-8f16-76cb7d6b02f2": {"doc_hash": "f73a027ea8a560d137c44fa237987aba8e4035f3ac56b69ef6c25bd32b10dcd0", "ref_doc_id": "ed5a2863-7494-4d49-9434-d573338a9855"}, "cbdd13ff-b60a-4cd7-b2ac-9c7971bbb747": {"doc_hash": "51c6b347e987fbf0ae9356cc5987b2bcf1f7974c1e3c36ee77b03192ba26cf47", "ref_doc_id": "ed5a2863-7494-4d49-9434-d573338a9855"}, "66ee905d-41f9-4102-876b-908554745acb": {"doc_hash": "b8ee84452b98ded205243387292d1deebdb77c7d8dc6cf79545ef2cb984bc8ae", "ref_doc_id": "ed5a2863-7494-4d49-9434-d573338a9855"}, "ca638bac-102b-489c-8809-f8b670dd2a3b": {"doc_hash": "3ca4446612096cc91fa94dfcd6943f6760e3629c4d728f3e945bb6687889963a", "ref_doc_id": "ed5a2863-7494-4d49-9434-d573338a9855"}, "45bb37b6-dcc7-4cd7-b6fd-5b5dffc56242": {"doc_hash": "2fe0aec18c28ce0c063abb3eb3240cb2f0f6f17cd9810836d1ed3c9d56203b9b", "ref_doc_id": "ed5a2863-7494-4d49-9434-d573338a9855"}, "2c656bbf-45c2-483c-a7a4-1fc20015789c": {"doc_hash": "c56a6054306133ca94047b0e4f8f609613c8f99c3b5d185d98fab5d749341f66", "ref_doc_id": "ed5a2863-7494-4d49-9434-d573338a9855"}, "29168a1d-7dd6-4222-83d1-c4047db1f1ab": {"doc_hash": "6fd8c666a80490f27eaa2e7de5fbcf7eb9dbbc030ce392595e115dce3e560254", "ref_doc_id": "ed5a2863-7494-4d49-9434-d573338a9855"}, "f623af46-563d-4bc6-95ab-28c72df348c1": {"doc_hash": "4e6f1123ff514db56449378a7f123521a9a7864833a2103f5e2669ed1bb58b54", "ref_doc_id": "ed5a2863-7494-4d49-9434-d573338a9855"}, "a130c050-a383-452d-b128-340abb1e54ea": {"doc_hash": "fac3dec1fce17118ce7250d501ce3cc423dd827ec9da445679225135907c40b7", "ref_doc_id": "ed5a2863-7494-4d49-9434-d573338a9855"}, "9cef7f9a-ddb8-4ae2-b9fe-e1bd827444f4": {"doc_hash": "ba43b3ac90e40f72057076e4e6da92f64a5e68b4054f11fec70d3b94bd85282d", "ref_doc_id": "ed5a2863-7494-4d49-9434-d573338a9855"}, "7d6f580e-6f1b-4685-b6e6-c3300a877af8": {"doc_hash": "56c8aecaeb900a8aaa7c745b4608e65a41abff8e8e6b679aaf235182bda26715", "ref_doc_id": "ed5a2863-7494-4d49-9434-d573338a9855"}, "6efe1fc5-cc86-4b7c-bd01-010c96946c69": {"doc_hash": "cf9f43d507fd34108f6dd5f94872223a8e8d831276a39520ba72b1b31a98269b", "ref_doc_id": "ed5a2863-7494-4d49-9434-d573338a9855"}, "36b24d64-af4f-46ff-9846-4764ac90b417": {"doc_hash": "6d6d647e9dbaf1e26008a23d5b3fc76e358397308b26ab2000937d52e79cca1d", "ref_doc_id": "31602a85-f549-47b2-bf88-7568d9a05046"}, "f384bc8a-5e04-4a3b-b244-0ce60e96d9ad": {"doc_hash": "62d8a788418e9d8febf9c3cda4c6b267aa3a5e22ef87e64c3641ff64f970ff61", "ref_doc_id": "8f6cc702-fe64-4297-bfd0-82363af6cf39"}, "0e93c49a-8ab9-484b-bd48-2d5a64719263": {"doc_hash": "2810cf08c51243a9711868e91f638b7314bebd8e0cb17440ef82b501f05f15a2", "ref_doc_id": "8f6cc702-fe64-4297-bfd0-82363af6cf39"}, "7e8f1f38-8192-4f9e-bb63-d93b40485def": {"doc_hash": "e1e3badf580964c55744baa53cfcb5a1566999e3d78280b949c92b18adc539d4", "ref_doc_id": "8f6cc702-fe64-4297-bfd0-82363af6cf39"}, "193cd6d6-53cf-4133-b15c-607faa498d0f": {"doc_hash": "fbe2c527118fddbbcce8a99c26249b8fe3ad2dc700213f72c04e2d72eaaf6168", "ref_doc_id": "8f6cc702-fe64-4297-bfd0-82363af6cf39"}, "71c65ac7-5386-4cb0-bfba-db12fb88ce27": {"doc_hash": "d7c4d78c5adcbdf4f73bd7ad7bc4896a97e8cf25b83033df256f16c0c7a05183", "ref_doc_id": "8f6cc702-fe64-4297-bfd0-82363af6cf39"}, "c7428435-1803-4132-9dca-4d6581fd535a": {"doc_hash": "4b3e2ff0c0c278e98130271798515030c83fe1a9031f2a64d49f0759b100fcd7", "ref_doc_id": "8f6cc702-fe64-4297-bfd0-82363af6cf39"}, "c307de92-2ff6-4be8-8e6b-d246916614a6": {"doc_hash": "c80b8a38954f3932225b4114a4d57c8668e37f6c9661937dd19bcff5c8500e90", "ref_doc_id": "8f6cc702-fe64-4297-bfd0-82363af6cf39"}, "e02aecf4-33ef-4256-8417-e43d9adbb4e1": {"doc_hash": "9a56ca9f1d028c4b82a790ca4a889d2abd35537dafaa4416c3534eea094547c9", "ref_doc_id": "8f6cc702-fe64-4297-bfd0-82363af6cf39"}, "de2dd2e4-0cb6-41ee-b401-901057d072bd": {"doc_hash": "ec054fce1284ce30cb9b967a7e93652bfb7d764f69ead0df68f3b8c0613d5005", "ref_doc_id": "38538099-cd23-461a-91d8-118e2933e517"}, "a824378b-3d72-4607-8aae-e5d7fe0310a9": {"doc_hash": "b1193f6da70047e02e9f8a3a7d5849c69f1714a0aa641f3d078bee16ce9b0fa3", "ref_doc_id": "38538099-cd23-461a-91d8-118e2933e517"}, "7e706a26-cdae-4f9c-aee8-90ba09773e1e": {"doc_hash": "ddeea8fddcbc2f71288b56f575005590e6158acc68fc92f0ab33238112bb1b0b", "ref_doc_id": "38538099-cd23-461a-91d8-118e2933e517"}, "499e90f9-6914-4364-a86c-32d1d25bf2d5": {"doc_hash": "604f7035791f7e979248e4e8089775fefa11da21550079792bc8ad40fb8b5b17", "ref_doc_id": "2e32764c-0abd-4fd3-9a67-d8023031943f"}, "b0c07379-5363-4154-9efa-75b1399e4946": {"doc_hash": "eaf233c2e7b9532cb748cccbfe05eca49138b72f807a5709e7ed8ec77dbe2f67", "ref_doc_id": "2e32764c-0abd-4fd3-9a67-d8023031943f"}, "6adc2039-d1db-48fc-b893-241c33cf0918": {"doc_hash": "10dd246b82b813a2869712ff46923c4ad8fd420b4ac0b1ba21238c39ea365346", "ref_doc_id": "a40701d7-8355-4eda-a362-74956040cac5"}, "2fa2ffdd-4497-4087-b08f-337b9de2c138": {"doc_hash": "81d2506a704e84add9e4b857d6735258cd570d62c2ab4138803e3e407d8b7b2d", "ref_doc_id": "a40701d7-8355-4eda-a362-74956040cac5"}, "9d1cda19-c42d-4e31-855b-17512f697595": {"doc_hash": "8a9c4812670bd4150ae6fd0e5df6203c5a8ad758afd479c8e03c1a393e29f02f", "ref_doc_id": "a40701d7-8355-4eda-a362-74956040cac5"}, "9b48c9a1-66c8-4c28-9b8d-c62e58841f80": {"doc_hash": "0a97f84b0b6e7450511189eb234c9dd9f12c4005cf299b0ac8a9f2e56a7b4e4c", "ref_doc_id": "a40701d7-8355-4eda-a362-74956040cac5"}, "840417f7-552d-4aa7-a006-d3a757bcde21": {"doc_hash": "446132bb8c9a4e8cf307eef8f7e5a4a658bf1c052d1e3ea8a2505d5d8457fb64", "ref_doc_id": "7008791d-2bff-4136-a0d9-651ac6a9d691"}, "ae9385e1-99db-4e9e-a4cf-3c3a6a19fd89": {"doc_hash": "4bfdbbdea33c18f95cd726cd29fa7164810295920403474eafdb67a077a3a791", "ref_doc_id": "0183c143-2e6c-44a9-a818-c6cbfbaa3025"}, "d751e7d9-6bc7-4f2c-91bd-c8f4b1433aab": {"doc_hash": "11a96d7673b13499fe533143e3ab9db7d951ddb47ae3c18113c26ba1b299f34a", "ref_doc_id": "0183c143-2e6c-44a9-a818-c6cbfbaa3025"}, "e8d76c2c-d93f-4047-82f2-f6e16b44160c": {"doc_hash": "cb4d874c8adbc97d13f81d2f07ab37bfed9f6d1b6274c0d645bbb7dce90adcfb", "ref_doc_id": "0183c143-2e6c-44a9-a818-c6cbfbaa3025"}, "2d79c4b4-51a6-4658-9192-4d1b6b8dfef4": {"doc_hash": "608954d58c281cc1022982ceb408953acd59384d6faa2d102f9eddc70b0083e3", "ref_doc_id": "0183c143-2e6c-44a9-a818-c6cbfbaa3025"}, "f5230dab-d73b-4a9a-ad97-4a0db9107843": {"doc_hash": "e9fec66358bf466bf8270b2866174b8467a50f2151fc6c8206d8f9554d1806d2", "ref_doc_id": "0183c143-2e6c-44a9-a818-c6cbfbaa3025"}, "68d8d831-6681-4280-89c5-3af34874c104": {"doc_hash": "d3543c81139208363f9cab2bffcb1e3e8ed3d470cf7bad0d62df48c3bd5535bb", "ref_doc_id": "0473e7e7-8950-40a9-8df1-929378b79229"}, "386c6965-275a-4807-98c2-30874b653d50": {"doc_hash": "46c6a3ecb8c46da53692bd9a0df9ebc3671b1aa785bf392f0ddb0c93b3d41e5b", "ref_doc_id": "0473e7e7-8950-40a9-8df1-929378b79229"}, "ad6d4622-b419-4550-acfd-770bf63f1ea7": {"doc_hash": "4a2408f0cce11c75f06dc6c36b0cfa34b7a4d79f2d463271e7064a5114d7bd90", "ref_doc_id": "0473e7e7-8950-40a9-8df1-929378b79229"}, "c0ef2b16-8c2e-4105-b5fc-26a211d7fa95": {"doc_hash": "6a237e85f4dcb0bbf31fcebf1597a7d64d031be9979c94cc626be2d84ff0d980", "ref_doc_id": "0473e7e7-8950-40a9-8df1-929378b79229"}, "86f985be-2e71-4553-90f0-b7f3e8999942": {"doc_hash": "ec5bbd73984655f6114edbaee4f7e683b6eaf13a946f79c4d191994086e0bab2", "ref_doc_id": "0473e7e7-8950-40a9-8df1-929378b79229"}, "3c61a857-41ae-4f53-9793-df5521f0692c": {"doc_hash": "6bcecbacd1272263219f1d522a873cb4d5f0ac6772983026172c6b91d3b910c9", "ref_doc_id": "0473e7e7-8950-40a9-8df1-929378b79229"}, "41636d82-cb27-417b-9a0d-c7431fe7fc6d": {"doc_hash": "27c478313c2c7a5d5fe383fce53ed28e0060b6424d3fcf5023e721f0d705592e", "ref_doc_id": "0473e7e7-8950-40a9-8df1-929378b79229"}, "20d11dc5-4448-493d-9d34-b780f84f5e5f": {"doc_hash": "ec2ac9bdc9fae7c9455e28782fcd22710c2e1acbee8d77b69ab490e262995c0a", "ref_doc_id": "0473e7e7-8950-40a9-8df1-929378b79229"}, "0a71723e-9832-443a-99cc-ead3af2cd3c7": {"doc_hash": "e4a239e08b37ba3e186768c9ff22cc86d612722a0d00a76fbd825c9ee3f47843", "ref_doc_id": "0473e7e7-8950-40a9-8df1-929378b79229"}, "0cc6f030-24c8-45ed-8106-0c30467c796a": {"doc_hash": "e759e5f4b9aca170be5259ff64e3f5b2f6adcc095e6790c16de5d760f2ee5350", "ref_doc_id": "0473e7e7-8950-40a9-8df1-929378b79229"}, "38be037f-19c3-4741-8858-89e0148b68d4": {"doc_hash": "ee35713dbd552048f00523e7c6c4d5a039f75cfc5b959df730effd7843071017", "ref_doc_id": "b3c725d9-35ab-407d-849d-8a7b2f1b2110"}, "d26ee48c-b607-4dca-a746-81f069b3cf78": {"doc_hash": "a7020d5efd8ab72264b8b52f740112a159eb28c5d5a778d9c10c5b40cc679415", "ref_doc_id": "b3c725d9-35ab-407d-849d-8a7b2f1b2110"}, "7bccc35d-1cf7-4a49-a217-8cfe9efbd68f": {"doc_hash": "2f1cb520d909c5b98f48e7f3f9a9fc59b80a6b90d4c86d15e0450bb3ca4c89a6", "ref_doc_id": "b3c725d9-35ab-407d-849d-8a7b2f1b2110"}, "b249bcf7-a470-4905-93de-c3e9f1d009cc": {"doc_hash": "358894568fdc7340d5d18b12f46b85a831fbd6117724b01f76891d2bd796c6f5", "ref_doc_id": "b3c725d9-35ab-407d-849d-8a7b2f1b2110"}, "b6a713cc-e349-46ab-be3a-4e25780c2edb": {"doc_hash": "f53816bdfbe0b54b844b4b0a723979af831d7205946cb2aa8def08937725f32b", "ref_doc_id": "05b1b04d-1226-4714-8064-33e7ae47ce03"}, "624a1e0a-6959-4fb0-88db-435b266ff57c": {"doc_hash": "2a7e548b32781027252a586ff88a34a8af557455950e39c3bd75c053ced6d94e", "ref_doc_id": "05b1b04d-1226-4714-8064-33e7ae47ce03"}, "763b06a5-9787-43ad-9ef0-4c7b74dea0fc": {"doc_hash": "e6753251fcb2289286c05865e0e42673bbb4c0d7369f71785d9529c30a2b3b56", "ref_doc_id": "05b1b04d-1226-4714-8064-33e7ae47ce03"}, "6a5ce23b-c70e-48cc-9dbb-3d97afa915af": {"doc_hash": "5fb3e2e2511b737756404e1f6d837448b2290ca9d8b6a15a735e0413f2f87234", "ref_doc_id": "05b1b04d-1226-4714-8064-33e7ae47ce03"}, "301a02df-ad3d-4fef-95c2-2458f2eb1df3": {"doc_hash": "a39e0225b2e8f6e315036bc7bdc510b69752b4f38a55ea192f90b176cc9808bc", "ref_doc_id": "05b1b04d-1226-4714-8064-33e7ae47ce03"}, "8fe274ce-5225-45a6-9d9a-7a5e723d0ae8": {"doc_hash": "dc76806a28e5578bfe5c85b2d6a35bc990dca94ce51e1e58bacf5c257c62f1db", "ref_doc_id": "05b1b04d-1226-4714-8064-33e7ae47ce03"}, "89a125f4-9d14-420a-9ba5-15be13e20c8a": {"doc_hash": "2f8cb2d41c0e371b7bd6ccd15936ba2ff924db950860478cdf7be2ee0e21bd89", "ref_doc_id": "05b1b04d-1226-4714-8064-33e7ae47ce03"}, "112de5d6-4de0-4c5a-9a06-dc3bd20f6f40": {"doc_hash": "326092debe5ee1b215e1c26763bd3f4b992a2ad09c06a9a3dbc28a857f4776a0", "ref_doc_id": "05b1b04d-1226-4714-8064-33e7ae47ce03"}, "eaa5e0b2-efe8-4d4e-8914-7baacb75d6b2": {"doc_hash": "38949275138fba2d631c51baad5a585de5a5413735a9fab62d75174882748f0b", "ref_doc_id": "a7ee41ae-41c6-4913-8701-2437bde93bbc"}, "779dfa57-1540-4c34-9f57-2e0c74842355": {"doc_hash": "bbe1b807b23805ece7adc1ddc125ce416c36cf4ab15fcbfc2bc8f96258c88da3", "ref_doc_id": "a7ee41ae-41c6-4913-8701-2437bde93bbc"}, "a4672e0e-9084-4ac8-895b-519bd0e75a13": {"doc_hash": "e17503c738bbc257546f5fb9496ad681dd2558b71c57ba4a263ef47b99fa27cd", "ref_doc_id": "66bb3ded-ddea-46dd-adc9-960b96322282"}, "bb61247f-c844-4714-8ae1-ebd5d43e4d2f": {"doc_hash": "6a52b706bb22b1df20971d6ba320d097e01847889af678f7a9f5882a0a8cb7a7", "ref_doc_id": "6548612b-e20f-4dda-9283-11e83c63725d"}, "2517e366-78f3-4228-a072-7a21ba72fbf8": {"doc_hash": "536e27552c86084888e689eda0a2ffd160fb1c620fc071205b7391b8bc7a54c1", "ref_doc_id": "29663ea3-6738-42c8-92db-3bfbd5886f6b"}, "085ab751-9d5f-4f0d-859c-98bca99b9fb7": {"doc_hash": "71b9064f65bf72c69fae1ff3d58f62434bda92daac1e7d28239aca193a81c1e1", "ref_doc_id": "14362d45-00b5-4c3b-9ba5-ff4db70c4488"}, "c1da70b8-3568-49fc-b321-86bbc5362c1d": {"doc_hash": "182bd08ff821b79d2b5177cf0a3b68580364e2e7986904b204cfe228b150ce43", "ref_doc_id": "e055f046-2dca-4faf-802a-6d8258520eac"}, "95a3f5ef-27bd-4a91-b12d-8856de5b9057": {"doc_hash": "fc3354ee27d483a8057022ea275d25ee2cd04aea75a2ccb6b7889c004b338bc3", "ref_doc_id": "13e41f38-85b2-4736-ac43-a139c7839ebd"}, "e0588c01-64ee-48fc-b193-cf36bc9f33ac": {"doc_hash": "6000a9a022e9b78f67f650c10fd835c41a1f663ea6e3dcbac6859ebec2ac3ccc", "ref_doc_id": "e1c7565f-c5ba-45fa-bfd3-4a40548fb866"}, "6a32b29f-3496-459b-8765-b7be49a2d6d6": {"doc_hash": "0c0bc53c7d7b06d74adac5f5a7a264b60ba268a36b160b5a43c836fb2a6b5864", "ref_doc_id": "25e599c2-cab1-424e-859f-4d3b95733deb"}, "3168c3c9-d1bb-4839-99e8-be05e8fb601f": {"doc_hash": "381238f3a2d7fef5a780541f13509e4c96fa4ac97097796ecdf03373236ca4de", "ref_doc_id": "b17a35a5-9ecc-4f0d-9290-0547cc9e8cd4"}, "0c036d5d-49af-4add-bc43-042cf499ac6f": {"doc_hash": "7de65d44e061b408f0915415d3861cd06894e8f1b39952e65c70b4464b029c26", "ref_doc_id": "f717d81c-79f5-4467-abad-16a5e35486f8"}, "37cd7e6f-358e-4a45-a8bc-4e850d9c6008": {"doc_hash": "702121b20b9caf74479eb8dca41cf06167d7a731ba2be40bb95c8cc22b5afe20", "ref_doc_id": "e6941142-9012-41f6-ad6e-9f7600df39f3"}, "0666ab59-ce12-42cf-a7db-5a8321510d37": {"doc_hash": "9cbcd1bc259e628b056f7b159f58967e04422c45e5b5ffc3f94843a22ff26ae0", "ref_doc_id": "980a32f5-a377-4938-83a3-adf4069d2e6c"}, "3dca60c3-1cb6-4321-93ae-ef83e4ae1d0b": {"doc_hash": "874342cf197c5c1d1fd19032c19214b11a65576d34e7952b411b42b3132ef188", "ref_doc_id": "980a32f5-a377-4938-83a3-adf4069d2e6c"}, "ea13ee28-37d7-4001-8fe2-840ef4b53680": {"doc_hash": "ad02033ce4a353d8e856608a1653d06594c377f0370778046cb1e244bb49b301", "ref_doc_id": "980a32f5-a377-4938-83a3-adf4069d2e6c"}, "042a8514-f00b-43c4-bc88-8d5e88500922": {"doc_hash": "4675d1f5d8a369cd5c88c8ac8aa920c61253cc0aa4bd576ef4ab36bbeb9a6677", "ref_doc_id": "980a32f5-a377-4938-83a3-adf4069d2e6c"}, "cb07dbea-8e5d-473d-a3a1-31d28b061eef": {"doc_hash": "5129553cbf2835b6a60b4110f83d57c3feff7b5a89210f61becadda7c636f31a", "ref_doc_id": "980a32f5-a377-4938-83a3-adf4069d2e6c"}, "bd444b70-c903-4632-b6a5-4987d67c7eae": {"doc_hash": "4251a39aa21367920fc2e82c48aacdec7eb9e86012704f782469e96618392f78", "ref_doc_id": "980a32f5-a377-4938-83a3-adf4069d2e6c"}, "88548200-a9dd-4ee6-9eef-445c7697ff69": {"doc_hash": "394f86d42082c2efc07a75ba9fee1d3594da474cacace9a179e74486207486bd", "ref_doc_id": "980a32f5-a377-4938-83a3-adf4069d2e6c"}, "84000011-2534-4029-bb3e-c497a5ab036e": {"doc_hash": "0858ffab4f78ff18b34959985dad5bd94eccd0fad0f4f38d7da8c3595dfa39d5", "ref_doc_id": "980a32f5-a377-4938-83a3-adf4069d2e6c"}, "2272584b-88b3-48fd-b153-fda89aa2235d": {"doc_hash": "e0f0dbf55066e47e12b5b89468085b587b376dd5353b9f57a85572a106f7cab5", "ref_doc_id": "980a32f5-a377-4938-83a3-adf4069d2e6c"}, "6ca229d7-efd9-4a9b-9be9-2e426aba6f87": {"doc_hash": "cfc9ea2f5c31f10a9e822d9b599a3dbb8e33f8f9774837a3b85697751891f314", "ref_doc_id": "980a32f5-a377-4938-83a3-adf4069d2e6c"}, "7878fa09-0e91-41e9-a570-82b6cecc9cc6": {"doc_hash": "4f50d388fd6fe0149a8d74cb954daa334bfc54f5ea608062b2820a5e1e4d752c", "ref_doc_id": "980a32f5-a377-4938-83a3-adf4069d2e6c"}, "d3362ca9-0e22-4700-8607-385e29278f52": {"doc_hash": "f836c9950bb6f1b92e6d1e2aa067a5429bee60f83d6dd8386af71e16b41d18af", "ref_doc_id": "980a32f5-a377-4938-83a3-adf4069d2e6c"}, "ba5ca241-3961-4748-985d-fd1ae561513c": {"doc_hash": "3d43e87e0a086eabd926df450fd51cf06f49e3d79d2be16b0d8d526aa52ce3ab", "ref_doc_id": "980a32f5-a377-4938-83a3-adf4069d2e6c"}, "58b659db-847e-4cd2-9223-955b5b76ce26": {"doc_hash": "b88250f0d57f3ff4eb5e7588d783ee31295da9482924004cfb9f0a61f83d1094", "ref_doc_id": "980a32f5-a377-4938-83a3-adf4069d2e6c"}, "3c62a648-892f-4ff9-9d36-cd36e7773e7c": {"doc_hash": "62a2b6945ce104c92c5bd65b28da752caeff0a7edb60c6911c1538ea945a40ea", "ref_doc_id": "5f1a423b-f72a-4350-be5e-df4850e224d9"}, "71785f0a-ac85-43a8-9c23-5ce4505c7f96": {"doc_hash": "1bcfb40483cc7095433a580fd86c2cd9ba7564f10dda306d2f0b3004e2bb67ba", "ref_doc_id": "0ec98317-bdde-469e-adb3-5d896cd107c8"}, "d9e13a2a-60b8-459b-a995-1e1ad6485922": {"doc_hash": "ba7ae604f50732a6baa66a427a67415514f452eb23b0f36f0c8aa002b5e08d63", "ref_doc_id": "0ec98317-bdde-469e-adb3-5d896cd107c8"}, "89c8b095-c635-49c4-bc09-0f5ec3c96c2f": {"doc_hash": "4f91574b0d5f2d3a29f875fe89139ded4ed171a9ce033d571d446692698b7fa4", "ref_doc_id": "0ec98317-bdde-469e-adb3-5d896cd107c8"}, "40cf2f11-634d-4451-91b3-abd32d0e93c9": {"doc_hash": "3d232c8a8439d8fbd09e5948332aeef37961d8da373461e9c1be1fefbdc150a3", "ref_doc_id": "0ec98317-bdde-469e-adb3-5d896cd107c8"}, "2b05c0fb-c2d8-46b9-92df-d1cacfd358ae": {"doc_hash": "78e282f3428120cc7b38034e5f494c0a1df488c8a473e8a3e73869a52fb7ac9a", "ref_doc_id": "0ec98317-bdde-469e-adb3-5d896cd107c8"}, "60fb7bb2-3310-473f-86ed-970a843cd5ec": {"doc_hash": "b0a1fe07690bad7d05c5020a22e2aa3a95604b37f69ff72085f8f0db3d47b807", "ref_doc_id": "0ec98317-bdde-469e-adb3-5d896cd107c8"}, "fca2d073-0a71-40ed-ad47-4bd28bd210f1": {"doc_hash": "2e9facd5e95d04a39809d78afde3ebb6d065a10b1cd32097b81067927e89ca39", "ref_doc_id": "0ec98317-bdde-469e-adb3-5d896cd107c8"}, "51c0921d-31c2-426a-9114-5b95c2debd6c": {"doc_hash": "9134f2eac39195ffe3737318d3b07dbac0e6d7f8a79c92564411c8150fc1d785", "ref_doc_id": "0ec98317-bdde-469e-adb3-5d896cd107c8"}, "6a9d8524-e3c5-4bc2-a79d-d2c1ec6ecaa4": {"doc_hash": "003ea8b5aa761b60f6585dc0d0b7210eaa9bc6423e60667436e36bee60299c47", "ref_doc_id": "0ec98317-bdde-469e-adb3-5d896cd107c8"}, "a6b9c5fc-3958-456e-a178-22b95c76282e": {"doc_hash": "e6ec42277d240ff1f106cc803316b4a54a33b550821b0577f1683896e9302498", "ref_doc_id": "0ec98317-bdde-469e-adb3-5d896cd107c8"}, "098f8702-a262-4fb3-a7a0-28fe15f94601": {"doc_hash": "073725ee4e17b6a7c84aa01373e6717dd05fd0b5438c43e29dfc3a6f6ee9e013", "ref_doc_id": "0ec98317-bdde-469e-adb3-5d896cd107c8"}, "efa1e6d8-a7dc-4433-83fd-6fafcf4b2b5e": {"doc_hash": "8e24d80d0f58c81e4f31e15969a0dd9f9c0140ed4e9e733cca99e4fdf5d1ceee", "ref_doc_id": "0ec98317-bdde-469e-adb3-5d896cd107c8"}, "82a46d03-a0c9-4316-a09a-bd679788d75c": {"doc_hash": "a887f3c339f37bd77ddfe02fe65e42d24268883eb3ee5d4cbccf06170a7d7fda", "ref_doc_id": "0ec98317-bdde-469e-adb3-5d896cd107c8"}, "1b30bc4b-120e-4cd5-bb7b-90820c94b839": {"doc_hash": "0cb5662b0fe00c89a7191aa974552f71c48d7356b598520d5290256df0caacf2", "ref_doc_id": "e124993b-3b37-424a-8ff1-ba823840b230"}, "f8a338a6-51d6-4913-87f2-a30fa72ab4ec": {"doc_hash": "706d59d187748af43ecaa1eea124ebcb4f87a33bab5b353808c15010d344b1bc", "ref_doc_id": "9c33eeab-8ddc-4c19-91b8-f219d3cdc2a9"}, "2371a1ac-f66d-4407-b415-0707c4a1eabc": {"doc_hash": "f0044b816b50dc524f29eb4d8c6172ac127cc29bc20c85b75f291aa1c96dec37", "ref_doc_id": "3f9ab488-b602-435e-8389-6354515b593e"}, "87a46140-2663-4043-a4cb-01ffc81956e6": {"doc_hash": "92b230ebb0163fccbda46f58d1c2fdc9085f67be5c6987ae60230f3c63c3805c", "ref_doc_id": "4aa3f44a-489d-49c8-9271-ccdb9179f69a"}, "3cd13449-817c-46dd-9c64-cc5b6c81ebe1": {"doc_hash": "e77899fb3ef477392d043624230bfd2bc7735cbefc24dee57285e65fd3c1503a", "ref_doc_id": "f4abdec2-bedf-4836-8c6b-cd8b7db52dc2"}, "e654657c-9f32-449a-98a4-5f042465fe3b": {"doc_hash": "ada93c02fd9abea51a401168bb9f458993b85f1b22dc414f5a610c5c30071d4f", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "9f59e86a-2d7e-463b-a3ee-308c0858611c": {"doc_hash": "6e089d77a605b1121f60f8cec7f36e85cc3de599057749ad42b00b347e36d2b5", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "f6db0ad7-aced-4e89-8a84-536cf4320403": {"doc_hash": "6308b294c3cab6a7b9d9a3d5f42f0dbba65b7b1c08b43d2e70d47866f5b4aeed", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "74af99c6-6008-431a-b18c-5823ed36a559": {"doc_hash": "8dea5de199ef4606491b6106c166ad79f817e04ab1044e8093ee4df21ac1fdf7", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "b1e9b235-435e-47c0-88da-6990f35f6fca": {"doc_hash": "aac22a46854070ad0b28c4895cb9172b4d3d9dc3c2211213f4407beb090ab38c", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "ad1ae4be-f8ef-44d0-80a0-04a64746a5c2": {"doc_hash": "a34fb49d26efe683b6f1f257a6c78cee228af0fb5fe6508310b836e6ebf77bb1", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "75bdf8bb-cdc7-42a7-8a61-f4d95f47cb99": {"doc_hash": "e0bd066cea9ffa03de541e5be7d1317135e45efaae5b4a96cd2083d07cad6870", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "c9c6294b-aff8-4beb-b369-f79b66c0dd88": {"doc_hash": "496f0999bfc36c8d0967e05082dd9966cdff39b0ca675a7dabd418f9de4a81bc", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "bdea3ad6-823a-48ff-b250-bb73f1de119a": {"doc_hash": "be0a857477361ad0fac41038f778eb538d1803c8482c0ef1484e426df0134c82", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "f29b97ee-65d9-4bbd-b71c-da31fdeaf890": {"doc_hash": "d19a13c89e501d7054463abb57007bdb986d45c8507e9fcdebb6edc63c59b8ad", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "a19e5df2-8d78-4e34-a1ce-7e6d7aab2c4b": {"doc_hash": "496f0999bfc36c8d0967e05082dd9966cdff39b0ca675a7dabd418f9de4a81bc", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "5fd04a39-8402-4acc-86ef-a63592e6c715": {"doc_hash": "876488ace74643b6001347d2b8491e10c1799ca467f245c7192e0aecc8385499", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "d6365900-f8ad-4eb9-9616-812cd9315e35": {"doc_hash": "35d411476d3c137ea554a03c06835c91a0ab8b7877816e2479c62672344b3071", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "c3eac059-8f73-4b16-a7db-0ec92d9a85dc": {"doc_hash": "496f0999bfc36c8d0967e05082dd9966cdff39b0ca675a7dabd418f9de4a81bc", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "88d5fa33-eede-4f2f-9ce7-c737b7e96e84": {"doc_hash": "21eb2703c7994a5afbbeab635e5baa0c233a4154cf5dbe2d788f4fcd782cb140", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "c7c04e80-d998-4982-becc-d4e09f0f09bf": {"doc_hash": "5ef8dd2249f3abadce93c46b3694597c183f1d3598b5933b95d88d2c13e8b760", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "936545bf-07ea-46b7-b059-0fd407fbbbe4": {"doc_hash": "496f0999bfc36c8d0967e05082dd9966cdff39b0ca675a7dabd418f9de4a81bc", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "545c01e0-0083-47a0-ba04-a185cacbcde3": {"doc_hash": "537c57099a5990d605098a1630062e9f031fbddcd89ee580aaa5489c34070925", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "8824c170-ac37-4e3b-845e-071ee36c82f2": {"doc_hash": "10fc71978d4f2fef2116725924f4ca9f4c8338b8a79c1a6e0c633a7d97c6636e", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "e8998392-b304-46c5-8f34-675febbe41ba": {"doc_hash": "496f0999bfc36c8d0967e05082dd9966cdff39b0ca675a7dabd418f9de4a81bc", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "916e0d65-80de-4d8a-b88e-429ee401ed6c": {"doc_hash": "2f22934716728ec635e123a65af77120b9fcca86f4ddf84bceed7dd89dd7c396", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "1575b704-debc-4009-9fec-48a950a6c5d3": {"doc_hash": "87f6fce73ea9b9cc95383b1350c5e6a153cb0784aca271d459c520dd3dcf80d8", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "fcea3600-f58d-4528-b031-a2b9c7fdb1e5": {"doc_hash": "391ffeea2885980eead3daacdbb8fa71c1085c69d72907b3e1d648735cb3fa9d", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "3a8085e4-5559-4797-86f3-dec55a39b8cc": {"doc_hash": "680752feafcf9f6fa0f8da128b48bdf5b4aaceac8bb1033216b06e6d52dcb6f7", "ref_doc_id": "e564c1a2-dea9-4d77-a934-37f73ae4303a"}, "63b58172-724d-49a6-8a64-bb79d61a3f14": {"doc_hash": "7b7f4e398b1f083406ba0d959d4f2e886da3702fd9e5d3ee40e23b8befd5aadd", "ref_doc_id": "33fbed8f-fd0d-4781-8f3d-d59abaf7c5d9"}, "e10fcc2d-93b2-43a0-9d68-749496780eac": {"doc_hash": "8b98ab217600cafef1803009c18cba3c90e0b156b9d8be673e04331491a14e18", "ref_doc_id": "8bde591a-5aea-4b5f-a8aa-104c5fc96b69"}, "24f2aaa0-7805-4d70-9992-7b1804cba1d7": {"doc_hash": "f5d06a617a56faf3758a3cbc8d01fb746e4d9f90326566837792ca015fadbb9d", "ref_doc_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd"}, "35127fc9-69e0-44bd-91ae-51ad94d0a6a9": {"doc_hash": "17378ae8580d9b0992b602980ce9b957255bc984d501137bb9c0758b8b27dd92", "ref_doc_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd"}, "f25ba194-f327-4ec0-b1c3-61dbc148a844": {"doc_hash": "af1149bf6fbf8aa8150f16008717c2984459873313d15fc7cea638e820250007", "ref_doc_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd"}, "c18f630e-6c2a-4537-9352-907191045c0a": {"doc_hash": "ab981d8e5655762dbee0aebab0abc642120a5ef165cd7baf9911b662a453cd9a", "ref_doc_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd"}, "b21f9cb5-52f5-4b34-98a3-2464ddf459c5": {"doc_hash": "f388a2f560c0d71dfb62e18eb4bbfc0e100e1ddbb2bba0275389323d4ffae1d3", "ref_doc_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd"}, "9b774728-e508-4157-972b-f0bf51142f25": {"doc_hash": "595d35700f668ea4e1ee615076fe5b522b3ceb5c5ea3a3d384e432ea23dedf20", "ref_doc_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd"}, "c6d39bbb-68bd-45ba-894d-46163da6d4ad": {"doc_hash": "37dc677ff03a31a290bf365b385bb6ed0b6156e10462d547a3b425d873cae0bc", "ref_doc_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd"}, "9e97ffd5-b906-4b90-ac16-f4b396fa95ec": {"doc_hash": "b385e03470b84d53e9b5375fa6576ad24829c581b90fdfc4721f67d9ac779fc9", "ref_doc_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd"}, "fac7b240-a689-4e06-9f90-b5d9dcc9e3da": {"doc_hash": "6ac5e9ca6172d387c7b23b0b123a1d53e6e88c519d79eb91f4c074c5974f3b36", "ref_doc_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd"}, "bd9a8683-8f7a-461e-84d2-e102cd20a40b": {"doc_hash": "ee0cc3730369e46146fc2e758344a895e88c5453374071ac9b5c50ba2c6fef47", "ref_doc_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd"}, "f31dcd6d-be2d-4e55-bffa-ba2f53ed3b82": {"doc_hash": "4f15bbcb31fd55ee047849d741e9b877cef7707016d6e8b39f9eae8ae94a7bf5", "ref_doc_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd"}, "d07e4de3-50bf-4487-926d-2408eade20a7": {"doc_hash": "c717de12429440ddde8dab958c4aecee51cd58a49b59b07b2e51ef626452a237", "ref_doc_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd"}, "3b48b1a5-db2f-4612-8804-5ee962e2c004": {"doc_hash": "2bfb0acd21210b775e2c0c10d276492e39a726b8816d3b0526db40e5c48a3110", "ref_doc_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd"}, "59e6dcac-16ea-4414-8158-7bd470a015a2": {"doc_hash": "b2cfc28fc92ddcf12bd99db19261104e958553031889614377ce961e2f5bb7aa", "ref_doc_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd"}, "11baac43-2726-4301-859e-1a6c007b3169": {"doc_hash": "2212602b15e537c4216a24ea6543e628b1f392c5af5b8402a8d9d0a3f15056eb", "ref_doc_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd"}, "b380fe3a-f9c3-4c98-8001-71e13e4a2cf5": {"doc_hash": "259ef376cbab1ca141333ba9f8d08b3b91b8bc72bdeecc1d1d815ccb8018fe4e", "ref_doc_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd"}, "4fcef535-2869-417b-a8a5-62b06858bb87": {"doc_hash": "b7c34ef7dc5294b392985c247842a7f1698c292cdf799abe7c44cbaf74ca2bd5", "ref_doc_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd"}, "8b2dce47-88de-4801-98bd-1aee910e3769": {"doc_hash": "1ba4646184401bf4f10a6b25d854e2bd2b25302ac9467a84c770751cf20bd480", "ref_doc_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd"}, "ceec07f8-cdf2-4bad-8ad1-a9c10d96b456": {"doc_hash": "149fb8f6fccd426fadedd1f4937f1b17a7e32791f4fbd88db99201cd30242b10", "ref_doc_id": "8ff3a1e2-a36a-4e5c-85c9-6b51e296a9bd"}, "7ff00b61-ff44-4a9b-8013-330348ae3de5": {"doc_hash": "21e0617b0f41dcffd68fe30323e3c2c46a756567195ba2da6a394ddf336e9b7d", "ref_doc_id": "94b07f58-6718-4fa6-936e-c0f03227f675"}, "7312a6c1-600d-42ef-9b04-c427fd43d962": {"doc_hash": "4c0ba658e4a6acacc42a790b1fb2dc5ea3c7a32c4f91129584b90101a23c7229", "ref_doc_id": "5ee1f642-2093-4537-b583-0fccbd38eea4"}, "7f43262b-6c6c-4c35-bb26-475fedfd0e55": {"doc_hash": "7d4ea94e27fa32052955972d165a96327af5869a6c5761871e92234edb96be80", "ref_doc_id": "5ee1f642-2093-4537-b583-0fccbd38eea4"}, "7fa74443-a8fd-4400-af2d-e42726ae4f65": {"doc_hash": "2bf9b4016988723bf0a5bb9c9801c0722e4bdcf0046d7818ba4897123c252069", "ref_doc_id": "289722e8-f00e-4fe9-b450-4236bb381bad"}, "de128145-3e12-4bea-93bb-90f57755e8fc": {"doc_hash": "3bb64171ecd0814e51894ebb3b17d86873230351ae6737e56f506ad23f1911af", "ref_doc_id": "289722e8-f00e-4fe9-b450-4236bb381bad"}, "8960c468-1254-41e7-9e0b-11a5f622daaa": {"doc_hash": "6bd4f8c48dfa6bbb515240bb18cf030f8d57d418bdbbd286fdea0f51b6e47f33", "ref_doc_id": "289722e8-f00e-4fe9-b450-4236bb381bad"}, "f642873c-aad8-4f67-87fb-df4d50a0431d": {"doc_hash": "1751f536663f194dfded930ba385050bae843cdfaac67f8ea8f5702477c414da", "ref_doc_id": "0ea42579-802c-4e7c-8f88-071c77ea142b"}, "e26b868f-2b51-4a00-8df8-4e8c69151e2e": {"doc_hash": "d314003adc6271096f15041135cf8f9a01577784f81a3da4807f8cb8d944cbd9", "ref_doc_id": "0ea42579-802c-4e7c-8f88-071c77ea142b"}, "f3e96b03-35a5-48e3-a21b-7cf2df286ac8": {"doc_hash": "d693c1ca8dac7e14d849f9d41a7ba04b7d21719e03b43f9c5aea5a42283a1976", "ref_doc_id": "0ea42579-802c-4e7c-8f88-071c77ea142b"}, "11e1a621-8edf-4b77-9559-acbbdc711ce1": {"doc_hash": "10190c0b1c102e62b27652fa646bfa8177ce0bf4e73f6cf2e6dfddf295a540b0", "ref_doc_id": "0ea42579-802c-4e7c-8f88-071c77ea142b"}, "962644ab-a666-409e-8f30-e6ce515b8b12": {"doc_hash": "55f95400a2d5cbf6fdbccc9d36898ad6a051241b74ee0fcaef47c19a2d2c30c8", "ref_doc_id": "0ea42579-802c-4e7c-8f88-071c77ea142b"}, "1c8dda4e-a1e9-4027-9395-d296408b97ed": {"doc_hash": "1465cb69e72a0a1136fec12924bd6da05635b3ff4cfa0cbc39a40e199218b24a", "ref_doc_id": "0ea42579-802c-4e7c-8f88-071c77ea142b"}, "49cfcf0c-b7e8-4dfc-ae5b-e45d72b294c4": {"doc_hash": "e6de1376f4ef62ee3bbbb1000b4686223edf58c8231b8936c1011a1cedf9d72d", "ref_doc_id": "0ea42579-802c-4e7c-8f88-071c77ea142b"}, "ab6b7c5d-cd8d-495c-9821-89f8e029b094": {"doc_hash": "7999abfe06ad3f17cb2d28f0030c6780e252f322ed1fc92a9ea77bf94c855e63", "ref_doc_id": "0ea42579-802c-4e7c-8f88-071c77ea142b"}, "79b132ee-3558-4821-b908-551c647d4ab4": {"doc_hash": "3c8aa534d875fc15bc20d1806dc4fd7ca687860bf7517987855e7f6d68ac9969", "ref_doc_id": "0ea42579-802c-4e7c-8f88-071c77ea142b"}, "7422687e-3144-4061-ad9e-0f1f1f351e03": {"doc_hash": "7f583219de1416e62cf809729c1c4b35a8383e6607232b1f94de103f7960a0a2", "ref_doc_id": "0ea42579-802c-4e7c-8f88-071c77ea142b"}, "681b1631-9a28-4b57-94cd-061698126e2f": {"doc_hash": "9cabd5bd1b0eea2e6c694c87dfd4ef70d0252a6a456ec42ac2deaf4e2dcc2460", "ref_doc_id": "0ea42579-802c-4e7c-8f88-071c77ea142b"}, "45c31b25-b609-433d-be6f-610128876199": {"doc_hash": "486e575a2742c659bb5e6323d1e387a10644e94ad2b6f5b8255efa07cbe6c787", "ref_doc_id": "0ea42579-802c-4e7c-8f88-071c77ea142b"}, "8757520e-db76-495c-8b2e-74dc55cff600": {"doc_hash": "52313ec6908e6730b68a207bc47f17f8cf37f60be706f788040b8f9aaf56b753", "ref_doc_id": "0ea42579-802c-4e7c-8f88-071c77ea142b"}, "92d35471-a49a-4cb8-91e6-be673d8f807f": {"doc_hash": "f3cdea5e29abd68cb9c51eedace5d3bca242b0cac9755b84ecda4d46518e1b46", "ref_doc_id": "0ea42579-802c-4e7c-8f88-071c77ea142b"}, "b27feb64-ba6a-4c97-a650-0acb030496de": {"doc_hash": "a7db92a3f22c1c04a9703c849fe3864d737aff918112942c0d3eaeee20a6cc95", "ref_doc_id": "0ea42579-802c-4e7c-8f88-071c77ea142b"}, "78879324-d99b-4338-af41-2816bd32a628": {"doc_hash": "4a3ee015bd150c80ad11cc5c0a43c27ce62af3690b3a383ccc1bbe99b5ae42f7", "ref_doc_id": "87b2beae-4363-4343-a54e-9ae8df48ca17"}, "8e7b23b9-cd18-465d-9d96-56dad20035f9": {"doc_hash": "c37d01e59efbf9f084b4343aa02bb8b3c1694148df38cd839a840c9b7ecc19d1", "ref_doc_id": "87b2beae-4363-4343-a54e-9ae8df48ca17"}, "f9142cf8-0cda-481d-a2f5-924317e54673": {"doc_hash": "e0965f9ab999229aa100cf051eaed453295ad89630c4b8204f4a63eaa161abcb", "ref_doc_id": "87b2beae-4363-4343-a54e-9ae8df48ca17"}, "ef8bf93b-f383-4db1-8510-a7c7ec693b4c": {"doc_hash": "7bda75849a133ae928ea0628eb24e0e5620e359d06575059455491086f63b185", "ref_doc_id": "87b2beae-4363-4343-a54e-9ae8df48ca17"}, "158f7c6e-59b5-40fb-ab05-f9aefe9393e4": {"doc_hash": "2bcde7fa2f76db2bbcadf9029899968719c2f3eb9e4cabff757b114088865701", "ref_doc_id": "87b2beae-4363-4343-a54e-9ae8df48ca17"}, "24ed2d09-7884-4ac9-ba41-d43e7b0fdc6d": {"doc_hash": "1fb16790d2327c6dcaa4fcc162effb9f8cae850e9addca5b3ba5698f64cb34d0", "ref_doc_id": "87b2beae-4363-4343-a54e-9ae8df48ca17"}, "6ed7f088-a671-4cf9-b449-aa3056fbd1ea": {"doc_hash": "d022219639b5fc51008101e88b01023b950576f462767e72477f2f696dd74181", "ref_doc_id": "87b2beae-4363-4343-a54e-9ae8df48ca17"}, "f33b36a9-4219-4fe4-9c0d-bc78449cb0e9": {"doc_hash": "313e84de8ec942db6d5d7be92280016572d984efb49dad9802f610b1d64bc7f5", "ref_doc_id": "87b2beae-4363-4343-a54e-9ae8df48ca17"}, "5cf47046-fee5-4f4c-b574-6ac8d418c93c": {"doc_hash": "8d65395a5f9139a1117c1d3720d059da3780cefc76ff7f9291e154a3d1db9289", "ref_doc_id": "87b2beae-4363-4343-a54e-9ae8df48ca17"}, "f45d5828-67ff-4c91-87a1-312d4a98c973": {"doc_hash": "41366d8a170b5bf5658d146254d9d0484be1d5b69b3d17aa81eaefd3cb2bcac2", "ref_doc_id": "87b2beae-4363-4343-a54e-9ae8df48ca17"}, "1f4c7ea3-3e42-4215-a342-bb2bbd07e245": {"doc_hash": "a783d76fe66a5f0f4e2d541f0e83b96193824ce58f6b3be70f3a8c6a73c352c8", "ref_doc_id": "87b2beae-4363-4343-a54e-9ae8df48ca17"}, "ae000c1b-e46b-492e-8154-2cf2d402808f": {"doc_hash": "cf6839791bbec5ed7fe3f96474f8b5458366e10f3b433a92a6393c0c15eaeb4d", "ref_doc_id": "87b2beae-4363-4343-a54e-9ae8df48ca17"}, "22d1ac1b-7e94-44f3-95ac-73a1fcb479fe": {"doc_hash": "81d6c386947976bcbf7e2e8cd52da21a678ec0e36a96fcadbdc65be365af7c18", "ref_doc_id": "87b2beae-4363-4343-a54e-9ae8df48ca17"}, "cbc2052b-9d11-44cc-9dc1-c2d92546defb": {"doc_hash": "9825aee1a789bb8403b65a59855835ca406448a1582824891b7e1d4b79ae1ad7", "ref_doc_id": "87b2beae-4363-4343-a54e-9ae8df48ca17"}, "a01462e9-0bf3-41fc-b097-f375ce45f856": {"doc_hash": "580a3c4e1c67d75240bf5fe866c55d711f6f98c519f10f7b68c37059ebff323b", "ref_doc_id": "87b2beae-4363-4343-a54e-9ae8df48ca17"}, "d8de4135-c70f-4117-b4f7-7a224de0a0d6": {"doc_hash": "ce638c97f42d968dae4bba884b6e589f4298ffa1fd0d420faeb5e15f06c8f209", "ref_doc_id": "87b2beae-4363-4343-a54e-9ae8df48ca17"}, "5dd54dff-820a-42ea-8b5d-5f684310cf52": {"doc_hash": "91d9f727b9aa7ef8925abaa42604b8caac996641d82718640ac530357f2c6f07", "ref_doc_id": "87b2beae-4363-4343-a54e-9ae8df48ca17"}, "02134762-c2a2-4a9a-aca7-ac50e82d70cd": {"doc_hash": "2bcd9730b6f7baab3bc4f29fb54ac6c84ca60a1ad67d2640c9e983fb01f60e40", "ref_doc_id": "87b2beae-4363-4343-a54e-9ae8df48ca17"}, "11a18a74-9370-4f65-ac4d-6822ae29c21c": {"doc_hash": "b5fc263e947ae3201a28b6ab62b7058ddc7eddbc2993777f7cb422c805beb8f5", "ref_doc_id": "87b2beae-4363-4343-a54e-9ae8df48ca17"}, "bee1db08-77a8-4dc6-8881-a1a0057450e8": {"doc_hash": "7ac16bf20e2a2e6568ea24f4d10aaeae11fa94604fb9b41441a342ffb7c609f8", "ref_doc_id": "87b2beae-4363-4343-a54e-9ae8df48ca17"}, "2d0d46c3-0a23-4459-9784-5c245d18e091": {"doc_hash": "e1ab9ce55bcd9197d9f46b86bcabcdbea68080c6169e17e8e2f2b68ec165d229", "ref_doc_id": "87b2beae-4363-4343-a54e-9ae8df48ca17"}, "915c566a-0699-4f50-9c52-9da29e73671a": {"doc_hash": "6f1b2fa9dea00ade69a1a5c2087bc8996815a5b4faac16b7c4bbb5f8b3309721", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "c1da7268-9fe0-48fe-9042-d7386a714184": {"doc_hash": "16cb0034cd48728b9a123e746d0d1cdbcb9e8d972a6a2c2e24e57460b00b5875", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "eabd84fe-0ec1-4801-9e80-6309ed8882ee": {"doc_hash": "9525a7dd51d51d8a3838069cfcc8584c215835882955ae10229175c45e4fc967", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "3b839412-abb2-43fb-958a-6eb267117f28": {"doc_hash": "18780b2f1408e3358c1bdfe8c13502c67857a63c85a376a8a74d1e3e8ead5133", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "ca4469bc-3c62-43ca-b964-908f307bbf73": {"doc_hash": "08a76018ae08d5f5819aad3a1e8e76745c89c4e110d9642c1413463578a8e3b3", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "f7e4c9cc-6022-4cac-bcb2-0336fceea5ec": {"doc_hash": "5dd5281eaac0edf2b17826b38a7b15b5e01d481110bacee5fa8458472489286b", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "c6f134d1-35c1-4622-855b-9faa65767bf6": {"doc_hash": "c9d82ff98152f88b423ced6508001406734379bd6067d757e90df4c1b7141de4", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "edf4a488-a999-42d5-ba70-aeb40bae87e6": {"doc_hash": "89eff6d76f9c40d2a695c59d065dc2944d88615df81b5c20e64f31da0d074094", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "82029320-8a69-436a-9eb6-c092830b2abc": {"doc_hash": "27378dcb1f96f0a877b2935572df212df74422ee3d7535a67f290e1a5627cee6", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "cc565f2a-4c98-4a4b-830c-cde2faa772f7": {"doc_hash": "653590f748851d9f026be824b5e349f7190d5e0eb80fb3db65108e0c4e92a2de", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "019784bb-e75c-47e4-b0e4-ffd06409e339": {"doc_hash": "34015166921c7624358725fcbb8d97004a44c5341bbba72875c39305f05a1d5b", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "011c1678-a701-4cb9-a5d0-36fbdfe43ff5": {"doc_hash": "b4a95783ab69093d1a722b070f643a4475ba48937943eb8f048c0295953cc858", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "91ad83df-6fd8-48fb-860e-d5e72a69fa86": {"doc_hash": "98ab0bda871568ad2ec73e9502a0263eb5146aab1d5feac5c379597b23279760", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "3fd6db07-292e-4148-bcaf-58cd01b96dce": {"doc_hash": "f57583837cc43f9da577b651e4fd0048b9dda32473c853d053bb3817ce6e7f1b", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "47f8c71d-7b01-4347-8a01-5835f0556adf": {"doc_hash": "fa930e460b8304e93dcb713820c444cba56721751e04b4e0a930c9d479d17382", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "d6f64d7a-0939-43e1-8e4d-3ca807194907": {"doc_hash": "0392868399f2f931bfc9edf0b54e4d0f3d09b36c3e90ae366f3c55c86cbebbc7", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "901274fa-6ae5-4d52-8222-92be0ba8f267": {"doc_hash": "ba9df4e0d8f8410b8a76345687c50bad9de357a0f7f22b3fd45a5d8eaf025b78", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "d1179111-3a63-4b3f-86fa-5b5463a00261": {"doc_hash": "b642517f7708011094f3d9e3f82582e1388962422438962bfeb0575b7a210709", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "4c700435-5428-4226-b7d0-c0e5b95199df": {"doc_hash": "943418075f2f424ebc560777309814f07570cadc8f70fb5e4ae83c40e18e9d5d", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "92b53c16-5c51-487a-b148-415ccd9763c6": {"doc_hash": "3aa1384b774dfc0743241c8ec9436d518521aa3e3f0d4d1bc5a2c5fce9885107", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "7f080b2c-4d08-4d8b-8538-15b375c987e3": {"doc_hash": "89eff6d76f9c40d2a695c59d065dc2944d88615df81b5c20e64f31da0d074094", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "a1b50aea-4a01-4877-984c-4da7d26e4a1d": {"doc_hash": "28c69f2cd1aee339b255311593ba74c6bd491ce5e7e21ba7985df94332d2b7a3", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "6d608c84-0e07-4919-b8d8-370e1824c271": {"doc_hash": "3aa1384b774dfc0743241c8ec9436d518521aa3e3f0d4d1bc5a2c5fce9885107", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "008398bb-ae0c-4202-bf59-87b74e4dfa02": {"doc_hash": "11b054681b83d5d0133a1508c35e3904da52be9b000ad33edf862c917d0ea12f", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "0f0a43d2-700c-424e-8952-897f37c7179f": {"doc_hash": "47ca797bd21acfe72f5ddf012bf9f3dddfa4b0034eba99aac97814e95c279df1", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "94f840ee-9bf9-4aaa-ab73-17966992b8dc": {"doc_hash": "f0491902d90245a7eec7ab9dabd807a9b2b598c46be37159e8be31c7d2c45983", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "9620dc96-080e-45bc-b782-889551766fc7": {"doc_hash": "5a9224d3b23356c8534c1216fa2414c31818fb341e319d1b8ea6a7d190cb4914", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "7d6fa417-b45b-4843-95b5-6b1930f3328c": {"doc_hash": "1ea3a5bf7e1520737609eaf8e0dd5d11dfdc25ec46f2d05d5c2a9022de53c94e", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "c999ba29-a8e3-4a61-8678-985ce3b03001": {"doc_hash": "2dc6b081d7dd8bad7796f9b925963f7b801ad9447483134faaf721449f7e4f98", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "9258ee7c-763a-47ae-b51f-ae7cd106599c": {"doc_hash": "6f278154a382a321214a702be3537358b5591ac952257851c7912a8aac25deec", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "d8885b39-4df2-44c1-9ae8-6d5be87fe860": {"doc_hash": "ad1f02a2fd8a6efbfc3471fabaed9ce94bac26c2904ba7a8e06894ddbf8ea571", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "6cc5806f-fb2d-40e4-be17-e7f8ef35072f": {"doc_hash": "68ec633abfacc059165752f6a3b1c09ae0210d60ec23dc261228b9816d1b5c99", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "114d4ea0-e08f-4785-9dad-128d516216b0": {"doc_hash": "9801bf907f82d396676996e59efb615ede811b8fc437c43e1ed3305227a18817", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "421beaf8-c9b8-480d-9e94-f3d7c682386e": {"doc_hash": "727c76d0381f297c5fa91c89b07e0c52bfc5df03686de88a2fc871f186cff58c", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "d246792e-191e-45c5-a987-a233c4164bbc": {"doc_hash": "547cee001b91682f788d717b06be85f4b3cf4e3766572387586f1253abe32882", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "8f6d277e-610a-4d14-bb52-73d2bd96b35f": {"doc_hash": "92bf906e4c44ddc79d76b8829d46492dc5858fe2b1c934fd9e7175d279452523", "ref_doc_id": "6bc7fc98-8e8d-464b-943d-86eeb9d34004"}, "6e4113fb-74c0-4cdb-80d2-2994b6a7f8b8": {"doc_hash": "625b4300643c8f3e92ef5bd28578f9227e47de034c6d342bb36201fdc50c20f1", "ref_doc_id": "32dc3542-c4ef-4464-a837-d432484812e6"}, "0c813d3f-191a-44a3-af38-82650f6be5e4": {"doc_hash": "4d2cfad17627fe0b80b47d5e413acccf132db7d9c843cacbe9aa92b9a11260af", "ref_doc_id": "9b7d1f10-f7c2-4086-b1eb-1e56478ea6fc"}, "07986cec-30fd-4fe8-8bc3-4f96decca041": {"doc_hash": "bb8ae34ca6a9ac7741a3f935e3eb3fc750251c1ab784bbb4eadeb79885502ec6", "ref_doc_id": "9b7d1f10-f7c2-4086-b1eb-1e56478ea6fc"}, "0766a382-1f42-4011-a6a6-24bfc067633c": {"doc_hash": "3558e6f8d3a11fd64e646a2d80ac7be8a47648f26582224e616bb29c28e54af6", "ref_doc_id": "5cbb088d-9539-416f-a259-71f6b74e6514"}, "7532c07c-aa05-41e5-ae98-5207445cbfbb": {"doc_hash": "91538228213cad5d47515c11b201bab1522b5b56e7e4cc3ec2107ba717d5c76c", "ref_doc_id": "5cbb088d-9539-416f-a259-71f6b74e6514"}, "e7da7969-2961-4431-b742-d928fe8a047c": {"doc_hash": "bbb96e3d6b31472630d2eaca1a49498d6e3e9a29b41bcd7e2f56747b1bbc56f7", "ref_doc_id": "3e0b2e9f-c510-43f2-8451-4b8d2530f4c1"}, "cef6f5c8-c707-460a-92f8-a2d4de7ef7f1": {"doc_hash": "a2c01d9cc339917f086e3267431cf31a4a3b9fbdeb1c9413a532ae0d9e5c225e", "ref_doc_id": "9da16c98-74fc-4c76-ba2f-b88c95fbfd9c"}, "6440f7fc-c47e-4acd-8908-60cd4504dc9c": {"doc_hash": "b8a11c9e17482216366d4c008a818969921bcf6e69d3373778d2be9f5d8aee45", "ref_doc_id": "9da16c98-74fc-4c76-ba2f-b88c95fbfd9c"}, "7308a31e-def6-4b4a-b251-78cb96aed1d3": {"doc_hash": "e9a8f5af4b763a5f2665941ef7ca0f4875ba70a44b99c7b0af6f38d051e06997", "ref_doc_id": "9da16c98-74fc-4c76-ba2f-b88c95fbfd9c"}, "83016ca6-7a38-40ca-a996-a0a233984b3c": {"doc_hash": "8bb974cd1fee38990d2beaca69461ff1b8cf7ebe7c7583b6cba5cb19822481e9", "ref_doc_id": "9da16c98-74fc-4c76-ba2f-b88c95fbfd9c"}, "a9f16877-09aa-441f-a999-64265d98b5c8": {"doc_hash": "9a8bce4bde67a9b3f7137504005d02b832fc58347d0ebb07a38e64bf45d9342a", "ref_doc_id": "9da16c98-74fc-4c76-ba2f-b88c95fbfd9c"}, "b36e0529-69b5-4e04-87e1-9a4b8ce550eb": {"doc_hash": "67123ee0cae3bf44450332eba28cf406f8d58c536905bd7e6b7b26ba8c28f04a", "ref_doc_id": "9da16c98-74fc-4c76-ba2f-b88c95fbfd9c"}, "b1215892-0edd-4101-a579-78327c549d6a": {"doc_hash": "8fdc10e078d42ce827d1c67cceb8e3e7cdcf0d0209a45a48e4023ab706160b4c", "ref_doc_id": "294db636-4976-40c6-b004-c7e3e9b808bc"}, "b4ba60bd-723f-4cb8-a08c-c125558fb091": {"doc_hash": "d22bab1a019d605af845ec766ba939e4d4c523c65363c7ef076123b33c28feee", "ref_doc_id": "294db636-4976-40c6-b004-c7e3e9b808bc"}, "2c7beaa9-9a02-45ea-b218-41a47c261ff7": {"doc_hash": "264e7c27a7eec4a049fc0ff4c95d8510b923f33337b82f1483f1c983a26b2903", "ref_doc_id": "294db636-4976-40c6-b004-c7e3e9b808bc"}, "f4b04ba0-1298-4faf-af7c-ce3884352253": {"doc_hash": "45777714cfd2096c744b5a6017cbd81de10586f64c76d7fa2368ef8a3c031640", "ref_doc_id": "294db636-4976-40c6-b004-c7e3e9b808bc"}, "1da29885-8e5a-481c-a1a6-5062c1310ee2": {"doc_hash": "86ac10f541d3b2e1bf0fc6e559dd9cfd68fe4952fd45b14693f2923f557763d5", "ref_doc_id": "294db636-4976-40c6-b004-c7e3e9b808bc"}, "5c5a1ef6-825d-47ae-8a0b-8bf732f97c59": {"doc_hash": "abc1e35cd54307992ddf565912a47154ab37a28846f01b864a26bd8f2558d4d6", "ref_doc_id": "294db636-4976-40c6-b004-c7e3e9b808bc"}, "bab675dd-284b-416f-8779-5d8c62e4b544": {"doc_hash": "477b327a56bc64477c755bc116eab38ca3dae43d9efbf04b7e0257775103dddb", "ref_doc_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637"}, "54fad1d4-8a27-4d1e-af6b-85200862e921": {"doc_hash": "9ae27c9a95f228480db519aaa343033a241fc5cb39b3dd9ee1998dddd9f1bb46", "ref_doc_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637"}, "2f975ff3-878e-48d7-a1af-a32d1bff0600": {"doc_hash": "4c8d8dbd8f56b9c753046ae7af29b14c45906b0804c06ee0eef212850b153922", "ref_doc_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637"}, "f68f9163-1117-4791-9bca-af7449fa78f9": {"doc_hash": "8a1c1f952e31d71717855318d8b854c2497d9ae4a363d691597e3648de8646a7", "ref_doc_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637"}, "b86af43f-cd2b-47e1-ba59-3e62bc502af7": {"doc_hash": "35d3e9b9d4467102719b6262037dee2c1373e2ed483c816f06d25a2f16c5dac8", "ref_doc_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637"}, "9bd3f33b-2f5e-4132-89e2-bbee398af8a2": {"doc_hash": "6537527707da466bed0f695d2436b92174cf6d0f2f1cfb35b90ac9b2d89c1f57", "ref_doc_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637"}, "f4a3255e-60ae-453c-a8de-68a5dec07b04": {"doc_hash": "e47279d0ce82dd70a8975823c1d640ac15bef749e0557fec50cf4845afffd347", "ref_doc_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637"}, "96c03b75-63f0-4db3-9393-a788dc9ecf0b": {"doc_hash": "1b88321eaf9da00be6487a8890b296424f63b1a71829d4273d122f3a94d33fab", "ref_doc_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637"}, "f65bad68-7c4e-4641-aa42-ee3b252c22fe": {"doc_hash": "3c090ba6cfd23d31946620b56e433320ede2a36a6976787752ee29aa997a17b5", "ref_doc_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637"}, "9607002d-bd0c-4945-948a-e6d2f1e921ad": {"doc_hash": "6edf38453faa98a08e42c6bbcbb85c5694e2abf50dbbf1f3661c824440e6aabc", "ref_doc_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637"}, "c81149fa-eb22-4a82-858e-41814ce9502b": {"doc_hash": "803c64916a05d177e9c9482f07040e031b1a2e096d79cd374430427ec7c24b15", "ref_doc_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637"}, "cf4a3f70-f807-4146-9e3f-374244016a55": {"doc_hash": "d09ec610644ab970e246a2f2bd064052f5db501756b4fe27e6d8e86a9a3636da", "ref_doc_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637"}, "521df911-21ec-48e2-afdb-0ed2926d3067": {"doc_hash": "a8be1003b9ca5b3918a8f95221718c53e04021d0d7086f4e1d86aec400efee45", "ref_doc_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637"}, "83ec35a1-e003-4b23-9c2f-475357ef55e9": {"doc_hash": "fa6b992150d16a82d702f9bb52c769c667c1b97112b9eeabdb5ab0bd4470e21d", "ref_doc_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637"}, "2e7650f2-061d-45e4-9a30-1467210b1882": {"doc_hash": "37a047d375e3d43651883eb1bb7f3a01b3a8a74af640db280afb3c7fc6976d5f", "ref_doc_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637"}, "97a40117-e721-414f-bbff-f2d958cb40fa": {"doc_hash": "e3ca3658852005d236636efe5c84734665b0fe4bb20d282495d4b010ca43eb13", "ref_doc_id": "fac7b0ea-c0a4-48ce-8eac-13d796240637"}, "8410c2de-8135-4dff-b3c3-87abf1c92cff": {"doc_hash": "8319e1d4715d8db321d82bcbb6727ef85e862b4f5db4fe184033100496a8a975", "ref_doc_id": "adfa85cf-1ad4-4246-a4cc-ca6b29ba7be4"}, "f9a8caa4-5f82-4bb1-ad55-e16ce2db02dc": {"doc_hash": "7552831b3d2370da0d200a49524179af88ebd74b6d49c0e88c40117e7bd2c5fc", "ref_doc_id": "adfa85cf-1ad4-4246-a4cc-ca6b29ba7be4"}, "393cc687-ce53-4f3a-86b2-e5a3aea7984c": {"doc_hash": "f91bb4f07fc7c40ac562dae5cd9445cfc9398c8f8aa8d0ee4bdfc585a7f9effb", "ref_doc_id": "adfa85cf-1ad4-4246-a4cc-ca6b29ba7be4"}, "8a7b7a93-aabb-4ebd-b310-6c6acebef753": {"doc_hash": "3f21a7dc5efc2f560ceba54caf1030cfcce1c5a7e1d1e84b9c6349968efa94c4", "ref_doc_id": "adfa85cf-1ad4-4246-a4cc-ca6b29ba7be4"}, "ae77cd7d-8794-486d-a2fb-e1aa5db21d91": {"doc_hash": "d4961f0715319da0732908a80ecf59db0944abfdd03b99428f9b1cce34808471", "ref_doc_id": "04fb77e3-dc49-4d27-a360-dd2408318851"}, "57b044d0-f8cc-476c-a1e7-aa70dad30f7a": {"doc_hash": "3be07f98206d3cd138d0ef8b944756858b47710e845977e17156042211cb0719", "ref_doc_id": "04fb77e3-dc49-4d27-a360-dd2408318851"}, "4fc503a8-72b9-48aa-8381-5511fb526f63": {"doc_hash": "1a15aca2ec094bd0a24f8e3ab6a5a321050bc46d8eb5a512007b461f821151c2", "ref_doc_id": "04fb77e3-dc49-4d27-a360-dd2408318851"}, "afa03f38-77f6-43b9-b08b-4dfe1a8d7a64": {"doc_hash": "f7b2fc76ed3e72619e1c3237072d07a77b84af175b36a470807ec65fb88cfec4", "ref_doc_id": "04fb77e3-dc49-4d27-a360-dd2408318851"}, "380962a8-390f-45a0-8774-3ddceeef9cf4": {"doc_hash": "a9c295203345e1dcf9241cfcb72138e0b557137b71d7c1ef6205d635f5bd41e2", "ref_doc_id": "04fb77e3-dc49-4d27-a360-dd2408318851"}, "585545c8-4013-4d55-95f9-f11a92e39909": {"doc_hash": "c916ddbbaed76c38195c68a75b52df2347894d8a8682c8078c2abfb408c84628", "ref_doc_id": "04fb77e3-dc49-4d27-a360-dd2408318851"}, "59e13ac8-1d08-4664-bf7c-ee9178f075ac": {"doc_hash": "56b637fca25bc6b5fe476ee8c1bccd21b7fedb166db8145a674d5cbf7f00b85a", "ref_doc_id": "04fb77e3-dc49-4d27-a360-dd2408318851"}, "271427d1-54a6-4335-8127-7a0079c2f470": {"doc_hash": "2b700888cf574b82a50815042f6a41690aa195b354c71b9bbf105c5d4ae62876", "ref_doc_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23"}, "a35867ee-b81b-46b2-931a-acf264144a59": {"doc_hash": "753aa314ca0efc61ba13b300f9bee83d5a39e2946c23a8094f75db7af052db09", "ref_doc_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23"}, "b4ad8b21-270e-486f-99da-b83e0a6ee993": {"doc_hash": "eebd129f13457439641fc3c1bb80ae60379fddf36bea5a27224117eb04d8d2b5", "ref_doc_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23"}, "dec2ddf7-27ac-4783-b46d-ddc00c9ab370": {"doc_hash": "115f64d37020a562cd31691c03d06be7d345530e5263107b2b4f176260432ed4", "ref_doc_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23"}, "2c54560b-a6fd-42ab-a504-191d2652a987": {"doc_hash": "d3f457b0d8958c30e855d87b25560671ad0eaab5f73c4908f6a18732e7ca6510", "ref_doc_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23"}, "5a8b7431-62aa-409b-9b87-833aa21bee3d": {"doc_hash": "f83499cc7c3f64632b1f4a587664cef7d5001353198841c13de8128abd182aa7", "ref_doc_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23"}, "391e2ea9-875a-4ca1-90c6-8f0700741836": {"doc_hash": "fa114ffecbf15fd874b0e323cf747c751c1f0c04b300b183c2f94a94b50d491a", "ref_doc_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23"}, "19df0585-348a-4bb2-b420-e344a792facb": {"doc_hash": "d2d43e94e1411300ceae15d3647cc7c9048f783445d0fe5c900d844e73270bb9", "ref_doc_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23"}, "96be358c-32a7-472f-b97b-8b1e6f93a309": {"doc_hash": "7bd4efee1eeb7285e26d3d37e4a2fa8217a94a2b15fcaac4ca4d072ca5e2f024", "ref_doc_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23"}, "83020a17-a315-4631-9d1a-adc5a7c26ff1": {"doc_hash": "6a80a06a042701367f72da182a751c5f0502a3ce077ac9e28385ff530a24590d", "ref_doc_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23"}, "1002d0d4-52d8-498f-9b53-0a1888851659": {"doc_hash": "a99e64438ff2a42fe96d0200c1c770ae3b4b8c050621fbacb7f66e01e99e1bc1", "ref_doc_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23"}, "2bfd3e12-86eb-4376-afa9-d88dbdf6f4a0": {"doc_hash": "072aa0dd07ab873fa186ea7f7f2ac6d4244b8bf3f609d4623cc1f6d8e2f7de8c", "ref_doc_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23"}, "c8df323a-08a0-4412-8fe8-49877fc8b6e1": {"doc_hash": "bd593b4aae95619312d48fac03548900d03c07990476ebf75ec7bf86c66161ba", "ref_doc_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23"}, "9a4b6f06-6aab-48ef-a4bd-74f050fd1336": {"doc_hash": "0790560e2e8406d2e42de571ee40febc8e27cce1151f8edb588333cdac982e56", "ref_doc_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23"}, "49b66923-e458-439c-96c1-8fc7533d9e74": {"doc_hash": "12bd752a4fb99c2fd014c8694b47e101c6d4740939a9f3cd3240c637d5b3f27d", "ref_doc_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23"}, "b829f14a-a8b4-4769-833f-828bd96d9dea": {"doc_hash": "a83a7427fd01a37b894dc469bbad0f9225e8c2b5a96334693a126645381a4163", "ref_doc_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23"}, "d2848e65-0489-4d61-8431-c4d7210414a5": {"doc_hash": "eae7e20b7336a042f8ecee68410dc39e80756e95a860c08400574fe815411248", "ref_doc_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23"}, "b3a68080-1b8c-42e8-bd47-47b168c5f052": {"doc_hash": "23bdf07e606b203806c74df73ad8fd9400ad087879edfd9e79fe0a0cbb58e866", "ref_doc_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23"}, "9dc60169-c222-4edb-8085-ec0c3e660523": {"doc_hash": "740a189e1894bef9d18822683605841a756023922580e7a86131f1fabae5e49c", "ref_doc_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23"}, "31b446d5-2c42-4d54-b7bf-949d63ad43a9": {"doc_hash": "f434a89df2ac7eb6f0b9a8c1cb3256c6c250b4b13b40d4a70424d462aa868424", "ref_doc_id": "a76a9d83-b2de-4344-9438-0b93c9fd6d23"}, "0c02d425-585b-4391-96fd-f6283a5e334b": {"doc_hash": "38856ad9eabbcc897300b25117d2af8f1b1bf4b7607ca610555ec843e4e17671", "ref_doc_id": "5b324823-b3c3-4b78-91fa-fae0a8764817"}, "f13331ca-ca94-419a-ae20-6a9cbc9b26dd": {"doc_hash": "056a19636f5462cde8807067f8caece8b70d75ded56eb1033b0a56f54a6a4813", "ref_doc_id": "2bd9d066-ded0-4192-ade2-82961bbbe2d7"}, "9024aa76-5ae7-4b34-afcb-dd5fe0f9dfca": {"doc_hash": "e1a9831b4d044ee982b4c7bd2d721067a3537f5d23b939d5a04f04d74ea47af3", "ref_doc_id": "2bd9d066-ded0-4192-ade2-82961bbbe2d7"}, "99f6326e-15ad-40cb-a03e-da44c27e4490": {"doc_hash": "d993e0a30afcd6965c2df563598eaca34a9bee6e567ec7eec997b0ccfcebc20a", "ref_doc_id": "2bd9d066-ded0-4192-ade2-82961bbbe2d7"}, "6b3fc02f-ac08-454c-bde6-35e08db5848a": {"doc_hash": "05519ef6573b822b2c8c7e575587901f042d9fa0e345b493695745ca46353405", "ref_doc_id": "2bd9d066-ded0-4192-ade2-82961bbbe2d7"}, "48a8489a-f5f1-4e70-a88f-2fde713dc413": {"doc_hash": "ae5ed21e6aa84cbc3085e7fa02c7eba37e5558186b2017b59b23249d0e205581", "ref_doc_id": "2bd9d066-ded0-4192-ade2-82961bbbe2d7"}, "b7da558b-4dc9-4a09-a9a5-ed5ddfb09a5a": {"doc_hash": "dbecb755108330053552c7d6f978b208727951acdbca918471dae7a1cc7e1fd5", "ref_doc_id": "2bd9d066-ded0-4192-ade2-82961bbbe2d7"}, "183f28f4-abdd-4e25-a9e7-11afa266c8d7": {"doc_hash": "96e1fec991f3532896ce93dd6f593772ac7548a48a50ce7722a06a88851b0fb1", "ref_doc_id": "2bd9d066-ded0-4192-ade2-82961bbbe2d7"}, "722f3bbd-d64f-40f8-bd0f-4deb563ce8c5": {"doc_hash": "a856ea66100c2e1699f6126ababcaf548e67af070f7b82382280d4fe2316c9cc", "ref_doc_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996"}, "e3d5c78d-e8c8-4b7e-aafe-225453991b29": {"doc_hash": "44664a9692fbef6404501fb853adcc7b53885022a41a226788093a13ff17d26c", "ref_doc_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996"}, "827e849d-8bd2-47c9-8d99-caa5244d5e35": {"doc_hash": "56db9cddfc23caf2cfe611a100c908b114ebace70dc8fdf6412ed8fb759fa26f", "ref_doc_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996"}, "aee3df4f-2ae5-4fe5-8604-bb3325037b5d": {"doc_hash": "d4e107d75978d5acc907e46ecc585a9f6b408040da2dc9597120462a45058e3c", "ref_doc_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996"}, "9cecc241-4dc4-4fc1-acfd-358b5e7ef496": {"doc_hash": "e9d153d07ea7e3ccab19de9515033f9d6387d80a8974e3f77d46cfd5dfe478f6", "ref_doc_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996"}, "64e76e2a-2114-44d4-8921-8692e36daf94": {"doc_hash": "58f8271cc334430020b4c5992de4abd3b58646d3c7a64d056977294dab748bb8", "ref_doc_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996"}, "3c32dcb1-fd27-4e78-bcbf-d93c81a2de96": {"doc_hash": "ebc11ba168cab1a827498e43107cfcfa33ecb4d9e2b9cc260a74460f54214983", "ref_doc_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996"}, "e5c0f139-58b7-49eb-98f4-b48cbeb5626c": {"doc_hash": "f6f82ebd26c0dfc609fc27b7a8b77671485510a53a1056a1bf50d46ae406ea1e", "ref_doc_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996"}, "c03ee43a-ed1c-4310-be80-9971408909fd": {"doc_hash": "2e1b0ec0620bbbe19562d51918a77f963c145214f8e2b54c25b40745655ce4d8", "ref_doc_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996"}, "095ec695-443d-435e-ba39-3b04a452f1c5": {"doc_hash": "6ed7f9758af93bae6753ce2c868a5336342649b2b4593273e0443ae0c11bac9e", "ref_doc_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996"}, "619acef1-d2c4-4104-943c-2d3545ec6a2d": {"doc_hash": "05283775b4ae4b8195ad81673c95326221a9864fa2a4961eadc38887ca24e451", "ref_doc_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996"}, "e0c2153e-a6dc-4a66-9e5f-5dd8ca7abc8d": {"doc_hash": "cee4540b88f13303899667c17afc882436647347c34ba0cf1c3b576335044dc6", "ref_doc_id": "cda462c3-de6c-4079-b0ed-d1e0ec4c2996"}, "f484cc59-0461-4485-81bd-b5c50b972a27": {"doc_hash": "128224c3983bdd99958b345c1e3a3203adb1710c150b7650155b0457bffcf727", "ref_doc_id": "a4b71e2f-e809-403a-9f50-cf61d5943de1"}, "a6275afa-d11f-4fae-9e86-2754215979bb": {"doc_hash": "67dc065495778a7a4f41037680f2858d1e8253575f919d0f98a4589d5401b5b2", "ref_doc_id": "a4b71e2f-e809-403a-9f50-cf61d5943de1"}, "e00f2927-a5e5-4eeb-8566-03a9050b87b7": {"doc_hash": "fb703acbaddcd7af4e8b84055d487691bf72928a62093654c160bb21d9f91dff", "ref_doc_id": "2edfdd61-050f-416a-bf10-e47dd41ac061"}, "fee65fdf-192b-42ad-af9a-749f74b16591": {"doc_hash": "2af1498fac9522c451e20421ec133bda08c1c8726f6f5cd11471fa5392cc78a4", "ref_doc_id": "2edfdd61-050f-416a-bf10-e47dd41ac061"}, "e421a7ed-7631-4270-b20f-b7965f6bd581": {"doc_hash": "7dcc78fe370125a39f448cbc742e05d7e8f236701043cb1e7917546268799186", "ref_doc_id": "2edfdd61-050f-416a-bf10-e47dd41ac061"}, "9d9e4f2c-9c81-47c4-949c-805c72211892": {"doc_hash": "4b5d6031e636654d0395772bc544f9797a44303da22309d50c13ed202800fec3", "ref_doc_id": "2edfdd61-050f-416a-bf10-e47dd41ac061"}, "ad0c9e91-8446-4ba2-aa55-1c5629157e23": {"doc_hash": "39f3088cab3e555eeb02284b84bdd63b500f43487c160632fb31f37aff420355", "ref_doc_id": "2edfdd61-050f-416a-bf10-e47dd41ac061"}, "d8a0d61c-1c3d-4e98-af99-faf25d0046af": {"doc_hash": "c64e9871460467038de6c253de08806c678d45a4391016f2ae1ea3f844e0983b", "ref_doc_id": "2edfdd61-050f-416a-bf10-e47dd41ac061"}, "6bae6f79-ff0a-4b41-814c-0f2e89dfa621": {"doc_hash": "1f02782804dfc5beb0480a384138c4d216c0df4d3c48e1fbb79053bfef137abe", "ref_doc_id": "2edfdd61-050f-416a-bf10-e47dd41ac061"}, "40e2a733-6303-432e-aa68-70822c0d56a5": {"doc_hash": "e6bf7e934c3da95f3e1a2a23eb05e6e3b27207a707b40a5c8c488ac08ca20226", "ref_doc_id": "2edfdd61-050f-416a-bf10-e47dd41ac061"}, "bc2f4bfe-9d4e-401f-9067-869b3f24815b": {"doc_hash": "cada1fbc9c81d7bfbaea48b30db78a8729be86492246fba7c59d84012a4b259a", "ref_doc_id": "2edfdd61-050f-416a-bf10-e47dd41ac061"}, "a403ca78-062e-4885-a1ad-6bd3215c970c": {"doc_hash": "3fe71d9c18208d4f0816b4a610bfc5fb44cbfebf1e762e4d470c5a921f0d5dda", "ref_doc_id": "2edfdd61-050f-416a-bf10-e47dd41ac061"}, "f156e9a4-5c3d-4cb4-b354-24ff1ab3866c": {"doc_hash": "6d8f471cd1372d6ac89f61d2ea8f3fb32c7e395e043f1c573304a895eef6f42f", "ref_doc_id": "2edfdd61-050f-416a-bf10-e47dd41ac061"}, "f7c71597-15b0-41e0-bc3d-18d088f9e541": {"doc_hash": "b775f3e9b5fde4e69446256a52bab927af7cd0c4d729ecfb6e16f9d780bb1f29", "ref_doc_id": "d327fcf8-5435-4a3e-a4a2-6ef6dcb6118f"}, "a11e0066-3d0f-422f-a64d-ffc3a3cdb7dc": {"doc_hash": "84b081abf3bc11692ce4de8dca07c11f21986a4636dac32111833884c6df3efa", "ref_doc_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef"}, "b95fb25a-2aae-45f1-95cd-16b2a68b4ed9": {"doc_hash": "d1c3aa0faa57ce42699d770e1b43ceecb54700605a1373348ed9731b678d6aa3", "ref_doc_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef"}, "0feaba67-a349-4508-878e-cf2b14914aad": {"doc_hash": "a8e66dbb24612b913dab51df4da2d4062725234cbf25452d7d04c3085c4b737e", "ref_doc_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef"}, "16a91c21-338b-4953-bdad-3c781692bf55": {"doc_hash": "0ef4eb66bfe29746ff670a6c66ed5bfde5bf16ee815f357d4258486685e83986", "ref_doc_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef"}, "0d677361-7907-4cf1-babf-49060e598988": {"doc_hash": "b2629f8f4eff7eab6d1d15d14ec8e5a7d7db5b9e7c46aab6cce6ad045e01e25e", "ref_doc_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef"}, "9946ae2d-ca1e-4100-a222-7c469589601b": {"doc_hash": "16987207ad2e3780a35d337539de700f4eb7d6b4b56aedc3a8847919dda9ff31", "ref_doc_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef"}, "b602fb52-f879-4965-9cca-3bd425c4b434": {"doc_hash": "a1a41efccbada081c9fbb0e0b1452b402b70cdbf37e948af57630bc09fda5abb", "ref_doc_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef"}, "690eb51c-e255-4795-8f76-93462726ce73": {"doc_hash": "f47ecb3ba660f7c69281d5b7cf28cb279b552fefbcfa94fb93ca0d5b8a2d9e38", "ref_doc_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef"}, "0be08f95-6279-45e5-93b7-b07f2d8af16a": {"doc_hash": "afcc23a3691812ff4f93cfcc9aadf37fea9c1ce9062590526b4e45e838c772f7", "ref_doc_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef"}, "744094f9-62f9-4a69-9ac8-345aa016f948": {"doc_hash": "e2e749992a765e72b4e0f29e524d06c15f3f7fc340f73a51a656d34eca85ae89", "ref_doc_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef"}, "5c0aa4b0-3ff3-4030-9859-6d05fe304a45": {"doc_hash": "e873130896dbc0104206d0ffb7aa0fb92f9345c4767824d3a2abcf1b50aa304c", "ref_doc_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef"}, "9abe5a86-6024-44de-8522-89b04ea32266": {"doc_hash": "8191b993f7d5f5056a50bde9793db2ce6a0b6d2f9f6b199e036c320066fdf9e3", "ref_doc_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef"}, "eda23e01-bc38-4492-905c-b6f3f006a1bd": {"doc_hash": "e70c7ab95cbaa7cafc73cedbb44fcdd22be4d85c8db809992817b10379acd78a", "ref_doc_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef"}, "efa51467-af25-4140-90db-8db3e00a689b": {"doc_hash": "afcc23a3691812ff4f93cfcc9aadf37fea9c1ce9062590526b4e45e838c772f7", "ref_doc_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef"}, "a3030715-6fd5-4cf8-8f46-01f44aa7311e": {"doc_hash": "b00dd680075cf5336b15c66f7e8500003715d18b1130f7d0163645c87524373b", "ref_doc_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef"}, "3869d149-6285-49d6-90f1-7cf1d0f8cf7b": {"doc_hash": "a015b9e954abc1330dd4ab76a614f0dd4a48134746e103fea21e3d9f76bdada2", "ref_doc_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef"}, "1f8a6f30-5c7e-4a5c-bf21-eadce0ccddb3": {"doc_hash": "739034c990113a21bd6d83dbb9fbae8cf3b9064e0ab889fc2a3dd29d3de469e5", "ref_doc_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef"}, "7d405262-aa46-4b47-a599-5aac5e40590c": {"doc_hash": "12c6f7770d0edf90a5df76ce3c64ddc64a0448c5aae48af948ee89c003314deb", "ref_doc_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef"}, "c8b58d83-cb3d-4ff6-b2ee-d6153ea05bef": {"doc_hash": "f0007197f69846e12e80b2f8c1650eb408992d3b7254b907916b4baed6947bd4", "ref_doc_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef"}, "a5920d2b-85f5-4f73-8b20-cfb5e7c3fa7b": {"doc_hash": "197d8bdaa03b0a59ac945d26d6440250aa8016620efa7419a3d64ce593b08565", "ref_doc_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef"}, "6535763e-01ff-4b47-bce3-f9588a5d85e5": {"doc_hash": "8b011bcc3936b85d53f9219af34965a952e1fc28ddd43638435f0a27b9ecca2f", "ref_doc_id": "bb46da22-206b-4431-93d2-1fe6cac3a8ef"}, "7092dba3-b2e6-41a7-8594-6026ff235180": {"doc_hash": "3e519abd6913cef55661f61defae0be01c2782d35e000e78d374d58266edb926", "ref_doc_id": "30705105-01ce-40cd-987d-970fa0b3ede6"}, "f9f99961-eaee-47ae-a2a3-d796f8f6e843": {"doc_hash": "6cbf85a366c72c3b3f79c122386d8b9f1037bc28091a5d190ef2f29fdd9f6a71", "ref_doc_id": "2d56e80e-5c23-4063-ba80-8597db2f436a"}, "247b6bba-20a1-4c41-b229-4be94c43de9b": {"doc_hash": "4b251eade867a751267b2a6fe5ffb7768c6586511eb14321ac2d387bda22afe1", "ref_doc_id": "2d56e80e-5c23-4063-ba80-8597db2f436a"}, "01eb26ff-c5e1-486c-9d1c-4b3428b0822b": {"doc_hash": "67917ed96bb059de6b33d685304dcfe5af60fbfb181ee211abf2ece9e56e9e5f", "ref_doc_id": "243426df-c4af-4c38-8374-1629e06d9890"}, "d9df63df-68db-42a8-90de-2a98454e08a8": {"doc_hash": "4e6ea392fb78037c8dd8b8fe5042b1a9d5faf15aab3ebf3cf26e933d32917db5", "ref_doc_id": "47aa071b-13e9-44a1-b80d-57e280c71062"}, "e5306021-c60d-47e5-9ff9-129ddc848451": {"doc_hash": "794b341e1d0a354d581c152afcf7ad3b2a41f28c187f37f195224c64ff54842c", "ref_doc_id": "47aa071b-13e9-44a1-b80d-57e280c71062"}, "414e3e46-a8ff-49f5-b678-2e0c716eaa93": {"doc_hash": "1aa45ae4f565f2e63ba922558cbbfc95cbbd43e0c5843001a2f727590bb3d8c7", "ref_doc_id": "47aa071b-13e9-44a1-b80d-57e280c71062"}, "5dd41eaa-dfa1-41bd-b84c-3cf390583453": {"doc_hash": "3c57be392cc4045b9f1f82f19888040387016fe8d8ded434c914491d9f6e904d", "ref_doc_id": "47aa071b-13e9-44a1-b80d-57e280c71062"}, "77aa77f9-c794-498f-9781-5db71a545c8f": {"doc_hash": "f6e7a690d429be22bada16526263e1322ec719581925fce0e09fc1023f205e35", "ref_doc_id": "47aa071b-13e9-44a1-b80d-57e280c71062"}, "5bcf605f-c34f-4740-ac92-063f993c0b03": {"doc_hash": "bfb524438806865883abb2493eefbe2148cc4f849ab0a2b7ef3ccdbe24704802", "ref_doc_id": "47aa071b-13e9-44a1-b80d-57e280c71062"}, "0fb7a673-8171-4f07-89eb-bc68b340fabf": {"doc_hash": "87296e92d7a0c1018a02f524d20984bca8d3707da7360537b101978a3e0e4514", "ref_doc_id": "47aa071b-13e9-44a1-b80d-57e280c71062"}, "a6e3f306-7bad-40a7-aa3b-cb9b1faf91aa": {"doc_hash": "63642dcde02f4111edeeaf8d67b2ffa85afff3f55e31a166a2cd6f7a6ee3915c", "ref_doc_id": "47aa071b-13e9-44a1-b80d-57e280c71062"}, "4d7e8366-ce94-4d3c-b18d-fcf02a03a9e3": {"doc_hash": "fe902a9d78ae7169562b60b1e74b23d4fc3a987f310a773edc9615acbfda7158", "ref_doc_id": "47aa071b-13e9-44a1-b80d-57e280c71062"}, "5da9c9dc-28d0-4816-86bb-5ded81ee5fdf": {"doc_hash": "bfd68a09e59a720b36e9966dd8a14ea81c4956237c47083d73d2b963f9d0cd32", "ref_doc_id": "8f9afacb-3cc7-4f6b-8c58-a6824273674d"}, "b062bbee-053c-4429-b9db-7a277ebd3c11": {"doc_hash": "c7612f0bfaedd015bbb2b24b7c0e8f04923d04ac1520374f3e5ce1d0484cd20d", "ref_doc_id": "8f9afacb-3cc7-4f6b-8c58-a6824273674d"}, "1f9e8817-e0f9-4838-8e16-9dde7c0028f2": {"doc_hash": "7f18bed494484c62e4203952ec00b8276466fd0cb3d0a2a40e21d8b032bd6c04", "ref_doc_id": "aac4a791-311d-43e2-9d00-984946071c2e"}, "fdb845cd-086b-4812-8ec5-db193f89bdb7": {"doc_hash": "84a7a5e0e7ad5deb3fd7f525d65cb9485268bb12ad1477116e79a8143128edae", "ref_doc_id": "91bd6068-5859-4973-866f-714db98dd9fd"}, "67ff85ed-a1ab-4b7a-8174-46e680ae439d": {"doc_hash": "6d377b6d381d358e7207f551f822360418fad56cea6418bd1062735072e94e8d", "ref_doc_id": "a08ddad1-e22c-48e2-b6a7-6d83a7d3e355"}, "4c276ac8-ddb9-4343-9e28-f4a626b2d48a": {"doc_hash": "a96263f7565441ef2a652d7b1f6cdfa9c1c61656a3ba47c2d591c25ce149da6d", "ref_doc_id": "9b19b8e5-3896-45a9-8764-667ae671db29"}, "45088aaf-6d1c-43ad-a305-2da137c8f00c": {"doc_hash": "1bf78090d1428c01952fd5e2e6f15802a320c633e19f5cf820abb7dc10d8be7e", "ref_doc_id": "3d53fdc1-a697-48b8-b914-c219442bfd6a"}, "0e3ad323-81f8-498b-ace8-f258f8284b20": {"doc_hash": "b07f8da85ce089a4f86ab7947c44eae175825affcfbeb65c57017380dce011fd", "ref_doc_id": "853057e8-5db7-4b68-a9e3-23db96e04fa7"}, "6d211b89-f5f8-43c9-9ab2-6a33a22522c4": {"doc_hash": "ae8747f0ebda74b7b5be3b0c54c180a874f917a42ad83c37e668da08e381385b", "ref_doc_id": "2659e62d-e312-44a3-9475-9607d39b39f8"}, "e8cfdefb-c9ba-420b-992c-fb3a7d08055a": {"doc_hash": "d4b4717157584c00f66ee3c86e19c3829d882b28b6f892a2621cf01fb88f7adb", "ref_doc_id": "e74bda56-de14-4def-adad-037541643aca"}, "20743f4a-4e0f-49b2-8020-b3595698a40b": {"doc_hash": "8e2689fddb4ac445bfece6fc7f9aa7cd2973d0a51d99e84eec20a187754c6f3e", "ref_doc_id": "b983982e-08b5-4a91-ad37-9d6a497824fe"}, "dae8f776-da0c-4843-94a5-0bc9953d5c13": {"doc_hash": "ba116d7a69fca7cd7fcda4decc99ce64c5df2d21a55458f3ea6b899ad4f353eb", "ref_doc_id": "b983982e-08b5-4a91-ad37-9d6a497824fe"}, "7df41a4e-2d86-40c5-ac83-0df4e2437e66": {"doc_hash": "3fc95780416029fc966f65140481cf6806a910528d2f214d1856f8f178934450", "ref_doc_id": "b983982e-08b5-4a91-ad37-9d6a497824fe"}, "081b7d9f-51ec-4e3e-a3f1-b47b660139c7": {"doc_hash": "a6f7a2b4ebf9ddcae31a58eba0a72db40647a3a14991d51e8785386e1eb8f5d1", "ref_doc_id": "b983982e-08b5-4a91-ad37-9d6a497824fe"}, "0de5d36c-ae96-4d82-a734-874325006af8": {"doc_hash": "3461525a786f675ab8ba9edcca7ff2ac7f4531246aa410887e0e99f952b97694", "ref_doc_id": "b983982e-08b5-4a91-ad37-9d6a497824fe"}, "8f411bd5-64f5-4075-85a1-5436c3852e1f": {"doc_hash": "0ad6b673abbffd03fde7d5100ceba7aaa6dd1dfae0b04b807fa576444fb32d51", "ref_doc_id": "b983982e-08b5-4a91-ad37-9d6a497824fe"}, "6f82e457-2818-4e55-a65d-5ae993e02f9c": {"doc_hash": "44b63bae6a6e3c596561490d768a1c077ec729d325dab02f68f67d87426befab", "ref_doc_id": "b983982e-08b5-4a91-ad37-9d6a497824fe"}, "b5943380-26b2-4996-ad09-e0adf7219d43": {"doc_hash": "32f4f59a702323f488858a96c0da3f7da6e3d672c557696d0ba354e1acb745cf", "ref_doc_id": "b983982e-08b5-4a91-ad37-9d6a497824fe"}, "eb4796b3-7d38-47b1-a417-6e0cf87358af": {"doc_hash": "e66704a5d3d298052aad619c3dad9a342fb599bab45c0d48a54cee5e4bf1c2b7", "ref_doc_id": "cb890357-8aae-4527-8cc2-a0b01f20cf58"}, "9c33dedc-c9bf-4caf-888e-c80591d20624": {"doc_hash": "6fe11732bbb89cc69c5ed20bd9f4ea0c5143b1d9f5376c580446eedd0b183d33", "ref_doc_id": "a6171234-0192-4619-b987-c10e1b7d7c84"}, "1ca6bdaf-df8c-43a2-b72b-f7e8e01ca773": {"doc_hash": "658a7501275735ab0e1bd4c9ecb68fd8167c1b84c9f3e2246da9f0ca2641376a", "ref_doc_id": "0b26ca94-4a0a-4d63-8979-f8c3d7cc9c71"}, "156a6b7b-6b6f-470c-801f-f63e0e371339": {"doc_hash": "411c08e338e2eafd55ab751b3edc7f9ec1d2dd88d09d70d07f754214147af69c", "ref_doc_id": "392cc47c-5b61-484c-aa52-5915cb96d59e"}, "4fb6e88d-0f74-4836-b13c-d070b106daa2": {"doc_hash": "41d7dbb6e2a974bd7a44c9fa141cab095e08ffd72d3632037ac3185aa62850f1", "ref_doc_id": "7594adde-4e76-4ebd-a92d-bf264e1d4821"}, "46812e78-79e3-44d4-afe3-4e2480b04fe0": {"doc_hash": "de3e7de67e4f95e585496aabf7fc20b23fd4cdc205ea07fb91e6a65a109422ff", "ref_doc_id": "5cba9c90-a222-4754-aafc-b4d9c1e4e222"}, "13a5f842-b0f6-406e-80a9-d22152367a9e": {"doc_hash": "d0cc91115b0df88e2789994a1ab56ae78c885934d31421161890e98675edddde", "ref_doc_id": "5cba9c90-a222-4754-aafc-b4d9c1e4e222"}, "f4346692-9ee2-4b94-9a0e-285498218fe1": {"doc_hash": "90bd65ed5d0b867ad32592b1ac41c9566b6af7b0cd2705c219bc854d2fdbfe34", "ref_doc_id": "386e33d6-fed9-4f00-ab9f-efb79ae91901"}}}